-- ** - Designates 5964 that still needs to be verified for 59220

-- SQL Functions for All TME Users

-- "Division"
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Division]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Division]


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Division] (@Nom as Float, @DeNom as Float) RETURNS Float  AS BEGIN Declare @Temp as Float If (@Nom is Null) Or (@DeNom is Null) Or (@DeNom = 0) SET @Temp = Null else SET @Temp = @Nom / @DeNom Return @Temp END 
GO
--/
-- "DateDate"
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DateDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[DateDate]

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[DateDate] (@DateVar DateTime) RETURNS DateTime AS BEGIN Return convert(datetime, convert(varchar(50), datepart(m, @DateVar)) + '/' + convert(varchar(50), datepart(d, @DateVar))+ '/' + convert(varchar(50), datepart(yyyy, @DateVar))) END 
GO
--/
-- "MaxDate"
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MaxDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MaxDate]
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MaxDate] (@DateVar1 DateTime, @DateVar2 DateTime) RETURNS DateTime AS BEGIN DECLARE @ReturnDate DateTime IF @DateVar1 is NULL BEGIN IF @DateVar2 is NULL BEGIN SET @ReturnDate =  NULL END ELSE BEGIN SET @ReturnDate =  @DateVar2 END END ELSE BEGIN IF @DateVar2 is NULL BEGIN SET @ReturnDate =  @DateVar1 END ELSE BEGIN IF @DateVar1 > @DateVar2 BEGIN SET @ReturnDate =  @DateVar1 END ELSE BEGIN SET @ReturnDate =  @DateVar2 END END END Return @ReturnDate END 
GO
--/
-- "NullToZero"
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NullToZero]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[NullToZero]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[NullToZero] (@Value as Float) RETURNS Float AS BEGIN Declare @Temp as Float if (@Value is Null) Set @Temp = 0 else Set @Temp= @Value Return @Temp END 
GO
--/
-- "ScheduleString"
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ScheduleString]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ScheduleString]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ScheduleString] (@OccursVar varchar(50), @IntervalVar int, @ScheduleDayVar int, @OccuranceVar int) RETURNS varchar(100) AS BEGIN Declare @ReturnString nvarchar(100) Declare @NameWeekDay nvarchar(15) Declare @OrderNumber as nvarchar(2) Declare @Remainer as int IF @ScheduleDayVar = 1 SET @NameWeekDay = 'Monday' ELSE IF   @ScheduleDayVar = 2 SET @NameWeekDay = 'Tuesday' ELSE IF   @ScheduleDayVar =3 SET @NameWeekDay = 'Wednesday' ELSE IF   @ScheduleDayVar = 4 SET @NameWeekDay = 'Thursday' ELSE IF   @ScheduleDayVar = 5 SET @NameWeekDay = 'Friday' ELSE IF   @ScheduleDayVar = 6 SET @NameWeekDay = 'Saturday' ELSE IF   @ScheduleDayVar = 7 SET @NameWeekDay = 'Sunday' IF @OccuranceVar is Null SET @OrderNumber = '' ELSE BEGIN SET @Remainer = @OccuranceVar % 10 IF @Remainer = 1 SET @OrderNumber = 'st' ELSE IF  @Remainer = 2 SET @OrderNumber = 'nd' ELSE IF @Remainer = 3 SET @OrderNumber = 'rd' ELSE SET @OrderNumber = 'th' END IF @OccursVar = 'Daily' SET @ReturnString = 'Every ' +CAST(@IntervalVar as nvarchar(2)) + ' Day(s)' ELSE IF  @OccursVar = 'Weekly' SET @ReturnString = 'Every ' + CAST(@IntervalVar as nvarchar(2))  + ' Week(s) on ' + @NameWeekDay ELSE IF @ScheduleDayVar = 0 OR @ScheduleDayVar is NULL SET @ReturnString = 'The ' + @OccuranceVar + @OrderNumber +' Day of every ' + CAST(@IntervalVar as nvarchar(2))  + ' Month(s)' ELSE SET @ReturnString = 'The ' + CAST(@OccuranceVar as nvarchar(2))  + @OrderNumber + ' ' + @NameWeekDay +' of every ' + CAST(@IntervalVar as nvarchar(2))  + ' Month(s)' RETURN @ReturnString END 
GO
--/
--/

-- ** Asset Management

-- *qryRptSrc_Std_AssetManagement_Asset_Cheat_Sheet
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Cheat_Sheet]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Cheat_Sheet]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Cheat_Sheet]
AS
SELECT     dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_WorkSchedule.Name AS WorkScheduleName, 
                      dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.PurchaseDate, dbo.tblAssetManagement_Assets.PurchasePrice, 
                      dbo.tblAssetManagement_Assets.InstallDate, dbo.tblAssetManagement_Assets.RebuildDate, dbo.tblAssetManagement_Assets.WarrantyStart, 
                      dbo.tblAssetManagement_Assets.WarrantyEnd, dbo.tblAssetManagement_Assets.Peripheral, dbo.tblAssetManagement_Assets.Active, 
                      CONVERT(varchar(8000), dbo.tblAssetManagement_Assets.Comments) AS Comments, dbo.tblAssetManagement_Assets_StatusLog.UserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS StatusMajor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS StatusMinor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StatusDate, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS StatusComment, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      dbo.tblContacts_Companies.Name AS VendorName, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName, dbo.tblAssetManagement_Assets.Make, dbo.tblAssetManagement_Assets.IsCheckInOutItem, 
                      dbo.tblAssetManagement_Assets.RentalCost, dbo.tblAssetManagement_Assets.CalcMetrics, 
                      dbo.tblAssetManagement_Assets.ReqReservationApproval, dbo.tblAssetManagement_Assets.RentalCostInterval, 
                      dbo.tblSystem_Barcode.BarcodeValue
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblAssetManagement_Assets.DefaultBarcodeUID = dbo.tblSystem_Barcode.uid LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblAssetManagement_Assets.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON 
                      dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)



GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.UID AS AssetUID, dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, 
                      CONVERT(varchar(8000), dbo.tblAssetManagement_Assets.Comments) AS AssetComments, dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblContacts_Companies.Name AS ManufacturerName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblAssetManagement_Assets.Make
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblAssetManagement_Assets.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblSystem_Attribute_Collection.Name AS CollectionName, 
               dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 
               dbo.tblSystem_Attribute_Group.Name AS GroupName, dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, 
               dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, CONVERT(varchar, dbo.tblSystem_Attribute_GroupItem.LRL) AS LowerSpecLimit, 
               CONVERT(varchar, dbo.tblSystem_Attribute_GroupItem.URL) AS UpperSpecLimit, CASE WHEN tblSystem_Attribute_GroupItemValue.Value IS NOT NULL 
               THEN CONVERT(varchar, tblSystem_Attribute_GroupItemValue.Value) ELSE CONVERT(varchar, tblSystem_Attribute_CollectionInstanceData.Value) 
               END AS Value, dbo.tblAssetManagement_Assets.Deleted, dbo.tblAssetManagement_Assets.UID AS AssetUID
FROM  dbo.tblSystem_Attribute_Collection INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstance ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
               dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID INNER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_AuditSummary.UID INNER JOIN
               dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID INNER JOIN
               dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID AND 
               dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItemValue ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItemValue.GroupItemUID
WHERE (NOT (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC', N'Document'))) AND (dbo.tblAssetManagement_Assets.Deleted = 0) OR
               (NOT (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC', N'Document'))) AND (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY LogDate DESC, GroupIndex
GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union]
AS
SELECT     dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate, 'Asset Data Collect' AS EventType, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.UserName, '' AS Comments, '' AS WorkOrderID, 
                      '' AS WorkOrderDescription, '' AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.CollectionName AS Title1, 
                      'Variable Group: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.GroupName AS Title2, 
                      'Caption: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.GroupItemCaption AS Title3, 
                      'Lower Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LowerSpecLimit AS Title4, 
                      'Upper Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.UpperSpecLimit AS Title5, 
                      'Value: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.Value AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.AssetUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate IS NOT NULL) OR
                      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCPoint_DataCollect_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCPoint_DataCollect_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCPoint_DataCollect_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCPoint_DataCollect_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 
                      'Point Value: ' + CONVERT(varchar, dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, 
                      '' AS Title9
FROM         dbo.tblSystem_Attribute_CollectionInstance LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER
                       JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCSample_DataCollect_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCSample_DataCollect_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCSample_DataCollect_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_SPCSample_DataCollect_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Xbar: ' + CONVERT(varchar, 
                      CONVERT(DECIMAL(16, 3), AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title4, 'Std Deviation: ' + CONVERT(varchar, 
                      CONVERT(Decimal(16, 3), STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title5, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Title6, 'Range/Moving Range: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      CASE WHEN (ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1))))) IS NULL 
                      THEN MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      ELSE ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1)))) END)) AS Title7, 
                      'Modified: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified = '0' THEN 'False' ELSE 'True' END AS Title8, 
                      'Acknowledged: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END AS Title9
FROM         dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER
                       JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), dbo.tblSystem_Attribute_GroupItem.Range, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged
HAVING      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_Status_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_Status_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_Status_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_Status_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS LogDate, 'Status Change' AS EventType, 
                      dbo.tblAssetManagement_Assets_StatusLog.UserName, CONVERT(varchar(8000), dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS Comments, 
                      dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar(800), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Major Status: ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS Title1, 
                      'Minor Status: ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS Title2, 
                      'Scheduled Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt = '0' THEN 'False' ELSE 'True' END AS Title3, 
                      'Reason for Status: ' + CONVERT(varchar(8000), dbo.tblAssetManagement_Assets_StatusLog_Reason.Name) AS Title4, 
                      'Modified Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy IS NULL 
                      THEN 'Not Modified' ELSE dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy + ' on ' + CONVERT(varchar, DATEPART(mm, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) END AS Title5, 
                      'Original Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy IS NULL 
                      THEN 'N/A' ELSE dbo.tblAssetManagement_Assets_StatusLog.StatusMajorOrg + '/' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorOrg + ', ' + CONVERT(varchar,
                       DATEPART(mm, dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) END AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblAssetManagement_Assets_StatusLog.AssetUID LEFT OUTER
                       JOIN
                      dbo.tblWorkTracking_Process RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID ON 
                      dbo.tblAssetManagement_Assets_StatusLog.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID ON 
                      dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = dbo.tblAssetManagement_Assets_StatusLog.StatusReasonUIDRpt
WHERE     (dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC IS NOT NULL) OR
                      (dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_In_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_In_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_In_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_In_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, tblCheckInOut_Transaction_1.LogDateTimeUTC AS LogDate, 
                      'Check In' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.CommentsIn) AS Comments, 
                      '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Condition: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.ConditionIn) 
                      AS Title1, 'Rate: $' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.Rate) + ' per ' + dbo.tblCheckInOut_Transaction_Asset.RateInterval AS Title2, 
                      'Checked Out Date: ' + CONVERT(varchar, DATEPART(mm, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) 
                      + ' at ' + CONVERT(varchar, DATEPART(hh, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) AS Title3, 'Act Return Date: ' + CONVERT(varchar, DATEPART(mm, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) AS Title4, 'Hours Out: ' + CONVERT(varchar, CONVERT(Decimal(10, 2), DATEDIFF(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) / 60.00)) AS Title5, 'Days Out: ' + CONVERT(varchar, 
                      CONVERT(Decimal(10, 2), ROUND(DATEDIFF(hh, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) 
                      / 24.00, 4))) AS Title6, 'Cost : $' + CONVERT(varchar, CONVERT(Decimal(10, 2), tblCheckInOut_Transaction_1.Cost)) AS Title7, 'Trans Number: ' + CONVERT(varchar, 
                      tblCheckInOut_Transaction_1.Number) AS Title8, 'Trans Type: ' + tblCheckInOut_Transaction_1.Type AS Title9
FROM         dbo.tblCheckInOut_Transaction_Asset LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblCheckInOut_Transaction_1.LogInUserUID = dbo.tblContacts_Contacts.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionInUID = tblCheckInOut_Transaction_1.UID
WHERE     (tblCheckInOut_Transaction_1.LogDateTimeUTC IS NOT NULL) OR
                      (tblCheckInOut_Transaction_1.LogDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_Out_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_Out_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_Out_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_Check_Out_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, dbo.tblCheckInOut_Transaction.LogDateTimeUTC AS LogDate, 
                      'Check Out' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.CommentsOut) AS Comments, 
                      '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Condition: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.ConditionOut) 
                      AS Title1, 'Rate: $' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.Rate) + ' per ' + dbo.tblCheckInOut_Transaction_Asset.RateInterval AS Title2, 
                      'Expected Return: ' + CONVERT(varchar, DATEPART(mm, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) + '/' + CONVERT(varchar, DATEPART(yyyy, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) AS Title3, 
                      'Expected Cost: ' + CASE WHEN RateInterval = 'Hour' THEN CONVERT(varchar, CONVERT(Decimal(10, 2), ROUND(Rate * DATEDIFF(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate) / 60.00, 4))) ELSE CONVERT(varchar, CONVERT(Decimal(10, 
                      2), ROUND(Rate * DATEDIFF(mi, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate) / 1440.00, 4))) END AS Title4, 
                      'Trans Number: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction.Number) AS Title5, 'Tran Type: ' + dbo.tblCheckInOut_Transaction.Type AS Title6, '' AS Title7, 
                      '' AS Title8, '' AS Title9
FROM         dbo.tblCheckInOut_Transaction_Asset LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblCheckInOut_Transaction.LogInUserUID = dbo.tblContacts_Contacts.UID
WHERE     (dbo.tblCheckInOut_Transaction.LogDateTimeUTC IS NOT NULL) OR
                      (dbo.tblCheckInOut_Transaction.LogDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WIP_AssetStartStop_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WIP_AssetStartStop_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WIP_AssetStartStop_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WIP_AssetStartStop_Union]
AS
SELECT     dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS LogDate, 
                      'WIP Start/Stop' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, 
                      dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
                      'WIP Work Order ID: ' + dbo.tblWIP_WorkOrder.Number AS Title1, 'Action: ' + dbo.tblWIP_WorkOrder_Event.Action AS Title2, 
                      'Operation: ' + dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS Title3, 
                      'Step Name: ' + dbo.tblWIP_Operation_Step.Name AS Title4, 'Main Batch #: ' + dbo.tblInventory_Item_Batch.BatchNumber AS Title5, 
                      'Main Batch Qty: ' + CONVERT(varchar, dbo.tblWIP_WorkOrder_Batch.Qty / 1.00) AS Title6, 'Main Product: ' + dbo.tblInventory_Item.Name AS Title7, '' AS Title8, 
                      '' AS Title9
FROM         dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
                      dbo.tblWIP_Process_Revision LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
                      dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID ON 
                      dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_Asset ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWIP_WorkOrder_Event_Asset.AssetUID ON 
                      dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_Asset.EventUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID
WHERE     (dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC IS NOT NULL) OR
                      (dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCPoint_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCPoint_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCPoint_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCPoint_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Point Value: ' + CONVERT(varchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_Collection INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblWorkTracking_WorkOrder.UID ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWorkTracking_WorkOrder.AssetUID ON 
                      dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)
ORDER BY dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCSample_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCSample_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCSample_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_SPCSample_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Xbar: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title4, 'Std Deviation: ' + CONVERT(varchar, CONVERT(Decimal(16, 3), 
                      STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title5, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Title6, 'Range/Moving Range: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      CASE WHEN (ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1))))) IS NULL 
                      THEN MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      ELSE ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1)))) END)) AS Title7, 
                      'Modified: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified = '0' THEN 'False' ELSE 'True' END AS Title8, 
                      'Acknowledged: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END AS Title9
FROM         dbo.tblWorkTracking_WorkOrder INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblWorkTracking_WorkOrder.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), dbo.tblSystem_Attribute_GroupItem.Range, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged, dbo.tblWorkTracking_WorkOrder.ID, CONVERT(varchar, 
                      dbo.tblWorkTracking_WorkOrder.Description), dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision
HAVING      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry]
AS
SELECT TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.AssetUID, dbo.tblSystem_Attribute_Collection.Name AS CollectionName, 
               dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 
               dbo.tblSystem_Attribute_Group.Name AS GroupName, dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, CONVERT(varchar, 
               dbo.tblSystem_Attribute_GroupItem.Caption) AS GroupItemCaption, CONVERT(varchar, dbo.tblSystem_Attribute_GroupItem.LRL) AS LowerSpecLimit, 
               CONVERT(varchar, dbo.tblSystem_Attribute_GroupItem.URL) AS UpperSpecLimit, CASE WHEN tblSystem_Attribute_GroupItemValue.Value IS NOT NULL 
               THEN tblSystem_Attribute_GroupItemValue.Value ELSE tblSystem_Attribute_CollectionInstanceData.Value END AS Value, 
               dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.Description AS WorkOrderDescription, 
               dbo.tblWorkTracking_WorkOrder.UID AS WorkOrderUID, dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID, 
               dbo.tblSystem_Attribute_GroupItemValue.Value AS Expr1
FROM  dbo.tblSystem_Attribute_Collection INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstance ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
               dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID INNER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_AuditSummary.UID INNER JOIN
               dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID INNER JOIN
               dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID AND 
               dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItemValue ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItemValue.GroupItemUID
WHERE (NOT (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC', N'Document'))) AND (dbo.tblWorkTracking_WorkOrder.AssetUID IS NOT NULL)
ORDER BY LogDate DESC, GroupIndex

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate, 'WO Data Collect' AS EventType, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.UserName, '' AS Comments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.WorkOrderID, CONVERT(varchar, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.WorkOrderDescription) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.CollectionName AS Title1, 
                      'Variable Group: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupName AS Title2, 
                      'Caption: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupItemCaption AS Title3, 
                      'Lower Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LowerSpecLimit AS Title4, 
                      'Upper Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.UpperSpecLimit AS Title5, 
                      'Value: ' + CONVERT(varchar, dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.Value) AS Title6, '' AS Title7, 
                      '' AS Title8, '' AS Title9
FROM         dbo.tblWorkTracking_Process LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID
                       LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID
                       ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate IS NOT NULL) OR
                      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_Events_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_Events_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_Events_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_Events_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS LogDate, 'Work Order' AS EventType, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
                      CONVERT(varchar, dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, 
                      dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Action: ' + dbo.tblWorkTracking_WorkOrder_Event.Action AS Title1, 
                      'Operation: ' + dbo.tblWorkTracking_Operation.Name + N' / Rev  tblWorkTracking_Operation_Revision.Revision' AS Title2, 
                      'Step Name: ' + dbo.tblWorkTracking_Operation_Step.Name AS Title3, 'Message: ' + CONVERT(varchar, dbo.tblWorkTracking_WorkOrder_Event.Message) AS Title4, 
                      'Generated Type: ' + dbo.tblWorkTracking_WorkOrder.GeneratedType AS Title5, 
                      'Is Planned: ' + CASE WHEN dbo.tblWorkTracking_WorkOrder.IsPlanned = '0' THEN 'False' ELSE 'True' END AS Title6, 'Scheduled Work ID: ' + CONVERT(varchar, 
                      dbo.tblWorkTracking_ScheduledWork.ScheduledWOID) AS Title7, 'Current State: ' + dbo.tblWorkTracking_WorkOrder.State AS Title8, '' AS Title9
FROM         dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_ScheduledWork.UID = dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWorkTracking_WorkOrder.AssetUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_OperationFlow ON 
                      dbo.tblWorkTracking_Operation_Revision.UID = dbo.tblWorkTracking_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation ON dbo.tblWorkTracking_Operation_Revision.OperationUID = dbo.tblWorkTracking_Operation.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Step LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Step ON dbo.tblWorkTracking_WorkOrder_Step.OperationStepUID = dbo.tblWorkTracking_Operation_Step.UID ON 
                      dbo.tblWorkTracking_Process_OperationFlow.UID = dbo.tblWorkTracking_WorkOrder_Step.ProcessFlowUID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder_Step.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderStepUID ON 
                      dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE     (dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC IS NOT NULL) OR
                      (dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Full_History
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Full_History]
AS
SELECT     dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate, 'Asset Data Collect' AS EventType, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.UserName, '' AS Comments, '' AS WorkOrderID, 
                      '' AS WorkOrderDescription, '' AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.CollectionName AS Title1, 
                      'Variable Group: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.GroupName AS Title2, 
                      'Caption: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.GroupItemCaption AS Title3, 
                      'Lower Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LowerSpecLimit AS Title4, 
                      'Upper Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.UpperSpecLimit AS Title5, 
                      'Value: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.Value AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.AssetUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate IS NOT NULL) OR
                      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_Asset_DataCollect_Union_Subqry.LogDate IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 
                      'Point Value: ' + CONVERT(varchar, dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, 
                      '' AS Title9
FROM         dbo.tblSystem_Attribute_CollectionInstance LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER
                       JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Xbar: ' + CONVERT(varchar, 
                      CONVERT(DECIMAL(16, 3), AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title4, 'Std Deviation: ' + CONVERT(varchar, 
                      CONVERT(Decimal(16, 3), STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title5, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Title6, 'Range/Moving Range: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      CASE WHEN (ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1))))) IS NULL 
                      THEN MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      ELSE ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1)))) END)) AS Title7, 
                      'Modified: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified = '0' THEN 'False' ELSE 'True' END AS Title8, 
                      'Acknowledged: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END AS Title9
FROM         dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER
                       JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), dbo.tblSystem_Attribute_GroupItem.Range, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged
HAVING      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS LogDate, 'Status Change' AS EventType, 
                      dbo.tblAssetManagement_Assets_StatusLog.UserName, CONVERT(varchar(8000), dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS Comments, 
                      dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar(800), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Major Status: ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS Title1, 
                      'Minor Status: ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS Title2, 
                      'Scheduled Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt = '0' THEN 'False' ELSE 'True' END AS Title3, 
                      'Reason for Status: ' + CONVERT(varchar(8000), dbo.tblAssetManagement_Assets_StatusLog_Reason.Name) AS Title4, 
                      'Modified Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy IS NULL 
                      THEN 'Not Modified' ELSE dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy + ' on ' + CONVERT(varchar, DATEPART(mm, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblAssetManagement_Assets_StatusLog.ModifiedDateTimeUTC)) END AS Title5, 
                      'Original Status: ' + CASE WHEN dbo.tblAssetManagement_Assets_StatusLog.ModifiedBy IS NULL 
                      THEN 'N/A' ELSE dbo.tblAssetManagement_Assets_StatusLog.StatusMajorOrg + '/' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorOrg + ', ' + CONVERT(varchar,
                       DATEPART(mm, dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusOrgDateTimeUTC)) END AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblAssetManagement_Assets_StatusLog.AssetUID LEFT OUTER
                       JOIN
                      dbo.tblWorkTracking_Process RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID ON 
                      dbo.tblAssetManagement_Assets_StatusLog.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID ON 
                      dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = dbo.tblAssetManagement_Assets_StatusLog.StatusReasonUIDRpt
WHERE     (dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC IS NOT NULL) OR
                      (dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, tblCheckInOut_Transaction_1.LogDateTimeUTC AS LogDate, 
                      'Check In' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.CommentsIn) AS Comments, 
                      '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Condition: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.ConditionIn) 
                      AS Title1, 'Rate: $' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.Rate) + ' per ' + dbo.tblCheckInOut_Transaction_Asset.RateInterval AS Title2, 
                      'Checked Out Date: ' + CONVERT(varchar, DATEPART(mm, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) 
                      + ' at ' + CONVERT(varchar, DATEPART(hh, dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC)) AS Title3, 'Act Return Date: ' + CONVERT(varchar, DATEPART(mm, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + '/' + CONVERT(varchar, DATEPART(yyyy, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + ' at  ' + CONVERT(varchar, DATEPART(hh, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) + ':' + CONVERT(varchar, DATEPART(mi, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC)) AS Title4, 'Hours Out: ' + CONVERT(varchar, CONVERT(Decimal(10, 2), DATEDIFF(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) / 60.00)) AS Title5, 'Days Out: ' + CONVERT(varchar, 
                      CONVERT(Decimal(10, 2), ROUND(DATEDIFF(hh, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) 
                      / 24.00, 4))) AS Title6, 'Cost : $' + CONVERT(varchar, CONVERT(Decimal(10, 2), tblCheckInOut_Transaction_1.Cost)) AS Title7, 'Trans Number: ' + CONVERT(varchar, 
                      tblCheckInOut_Transaction_1.Number) AS Title8, 'Trans Type: ' + tblCheckInOut_Transaction_1.Type AS Title9
FROM         dbo.tblCheckInOut_Transaction_Asset LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblCheckInOut_Transaction_1.LogInUserUID = dbo.tblContacts_Contacts.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionInUID = tblCheckInOut_Transaction_1.UID
WHERE     (tblCheckInOut_Transaction_1.LogDateTimeUTC IS NOT NULL) OR
                      (tblCheckInOut_Transaction_1.LogDateTimeUTC IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, dbo.tblCheckInOut_Transaction.LogDateTimeUTC AS LogDate, 
                      'Check Out' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.CommentsOut) AS Comments, 
                      '' AS WorkOrderID, '' AS WorkOrderDescription, '' AS ProcessAndRevision, 'Condition: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.ConditionOut) 
                      AS Title1, 'Rate: $' + CONVERT(varchar, dbo.tblCheckInOut_Transaction_Asset.Rate) + ' per ' + dbo.tblCheckInOut_Transaction_Asset.RateInterval AS Title2, 
                      'Expected Return: ' + CONVERT(varchar, DATEPART(mm, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) + '/' + CONVERT(varchar, DATEPART(dd, 
                      dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) + '/' + CONVERT(varchar, DATEPART(yyyy, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate)) AS Title3, 
                      'Expected Cost: ' + CASE WHEN RateInterval = 'Hour' THEN CONVERT(varchar, CONVERT(Decimal(10, 2), ROUND(Rate * DATEDIFF(mi, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate) / 60.00, 4))) ELSE CONVERT(varchar, CONVERT(Decimal(10, 
                      2), ROUND(Rate * DATEDIFF(mi, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate) / 1440.00, 4))) END AS Title4, 
                      'Trans Number: ' + CONVERT(varchar, dbo.tblCheckInOut_Transaction.Number) AS Title5, 'Tran Type: ' + dbo.tblCheckInOut_Transaction.Type AS Title6, '' AS Title7, 
                      '' AS Title8, '' AS Title9
FROM         dbo.tblCheckInOut_Transaction_Asset LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblCheckInOut_Transaction.LogInUserUID = dbo.tblContacts_Contacts.UID
WHERE     (dbo.tblCheckInOut_Transaction.LogDateTimeUTC IS NOT NULL) OR
                      (dbo.tblCheckInOut_Transaction.LogDateTimeUTC IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Point Value: ' + CONVERT(varchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9
FROM         dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_Collection INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblWorkTracking_WorkOrder.UID ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWorkTracking_WorkOrder.AssetUID ON 
                      dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)

UNION

SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS LogDate, 'SPC Data Collect' AS EventType, dbo.tblSystem_AuditSummary.CreatedByUser AS UserName, 
                      '' AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title2, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title3, 'Xbar: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title4, 'Std Deviation: ' + CONVERT(varchar, CONVERT(Decimal(16, 3), 
                      STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent / 1.000))) AS Title5, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Title6, 'Range/Moving Range: ' + CONVERT(varchar, CONVERT(DECIMAL(16, 3), 
                      CASE WHEN (ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1))))) IS NULL 
                      THEN MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      ELSE ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1)))) END)) AS Title7, 
                      'Modified: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified = '0' THEN 'False' ELSE 'True' END AS Title8, 
                      'Acknowledged: ' + CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END AS Title9
FROM         dbo.tblWorkTracking_WorkOrder INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblWorkTracking_WorkOrder.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 'Violations: ' + CONVERT(nvarchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), dbo.tblSystem_Attribute_GroupItem.Range, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 'Collection Name: ' + dbo.tblSystem_Attribute_Collection.Name, 
                      'Caption: ' + dbo.tblSystem_Attribute_GroupItem.Caption, 'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged, dbo.tblWorkTracking_WorkOrder.ID, CONVERT(varchar, 
                      dbo.tblWorkTracking_WorkOrder.Description), dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision
HAVING      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID IS NOT NULL)

UNION

SELECT     dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS LogDate, 
                      'WIP Start/Stop' AS EventType, dbo.tblContacts_Contacts.FullName AS UserName, '' AS Comments, '' AS WorkOrderID, '' AS WorkOrderDescription, 
                      dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
                      'WIP Work Order ID: ' + dbo.tblWIP_WorkOrder.Number AS Title1, 'Action: ' + dbo.tblWIP_WorkOrder_Event.Action AS Title2, 
                      'Operation: ' + dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS Title3, 
                      'Step Name: ' + dbo.tblWIP_Operation_Step.Name AS Title4, 'Main Batch #: ' + dbo.tblInventory_Item_Batch.BatchNumber AS Title5, 
                      'Main Batch Qty: ' + CONVERT(varchar, dbo.tblWIP_WorkOrder_Batch.Qty / 1.00) AS Title6, 'Main Product: ' + dbo.tblInventory_Item.Name AS Title7, '' AS Title8, 
                      '' AS Title9
FROM         dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
                      dbo.tblWIP_Process_Revision LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
                      dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID ON 
                      dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_Asset ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWIP_WorkOrder_Event_Asset.AssetUID ON 
                      dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_Asset.EventUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID
WHERE     (dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC IS NOT NULL) OR
                      (dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate, 'WO Data Collect' AS EventType, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.UserName, '' AS Comments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.WorkOrderID, CONVERT(varchar, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.WorkOrderDescription) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Collection: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.CollectionName AS Title1, 
                      'Variable Group: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupName AS Title2, 
                      'Caption: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.GroupItemCaption AS Title3, 
                      'Lower Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LowerSpecLimit AS Title4, 
                      'Upper Spec Limit: ' + dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.UpperSpecLimit AS Title5, 
                      'Value: ' + CONVERT(varchar, dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.Value) AS Title6, '' AS Title7, 
                      '' AS Title8, '' AS Title9
FROM         dbo.tblWorkTracking_Process LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.AssetUID = dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID
                       LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID
                       ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID
WHERE     (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate IS NOT NULL) OR
                      (dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History_WorkOrder_DataCollect_Union_Subqry.LogDate IS NOT NULL)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Description, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ModelID, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.GroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubGroupName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SerialNumber, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Active, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetComments, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.SubCategoryName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.ManufacturerName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.CampusName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.BuildingName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FloorName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.RoomName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.LocationName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.FullLocaleName, 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.Make, 
                      dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS LogDate, 'Work Order' AS EventType, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
                      CONVERT(varchar, dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar, 
                      dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
                      'Action: ' + dbo.tblWorkTracking_WorkOrder_Event.Action AS Title1, 
                      'Operation: ' + dbo.tblWorkTracking_Operation.Name + N' / Rev  tblWorkTracking_Operation_Revision.Revision' AS Title2, 
                      'Step Name: ' + dbo.tblWorkTracking_Operation_Step.Name AS Title3, 'Message: ' + CONVERT(varchar, dbo.tblWorkTracking_WorkOrder_Event.Message) AS Title4, 
                      'Generated Type: ' + dbo.tblWorkTracking_WorkOrder.GeneratedType AS Title5, 
                      'Is Planned: ' + CASE WHEN dbo.tblWorkTracking_WorkOrder.IsPlanned = '0' THEN 'False' ELSE 'True' END AS Title6, 'Scheduled Work ID: ' + CONVERT(varchar, 
                      dbo.tblWorkTracking_ScheduledWork.ScheduledWOID) AS Title7, 'Current State: ' + dbo.tblWorkTracking_WorkOrder.State AS Title8, '' AS Title9
FROM         dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry LEFT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_ScheduledWork.UID = dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID ON 
                      dbo.qryRptSrc_Std_AssetManagement_Asset_Full_History__Asset_Template_Union_Subqry.AssetUID = dbo.tblWorkTracking_WorkOrder.AssetUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_OperationFlow ON 
                      dbo.tblWorkTracking_Operation_Revision.UID = dbo.tblWorkTracking_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation ON dbo.tblWorkTracking_Operation_Revision.OperationUID = dbo.tblWorkTracking_Operation.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Step LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Step ON dbo.tblWorkTracking_WorkOrder_Step.OperationStepUID = dbo.tblWorkTracking_Operation_Step.UID ON 
                      dbo.tblWorkTracking_Process_OperationFlow.UID = dbo.tblWorkTracking_WorkOrder_Step.ProcessFlowUID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder_Step.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderStepUID ON 
                      dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE     (dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC IS NOT NULL) OR
                      (dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC IS NOT NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_Asset_Scheduled_Work_Associated
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Asset_Scheduled_Work_Associated]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Scheduled_Work_Associated]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Asset_Scheduled_Work_Associated]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_WorkSchedule.Name AS WorkScheduleName, 
                      dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.PurchaseDate, dbo.tblAssetManagement_Assets.PurchasePrice, 
                      dbo.tblAssetManagement_Assets.InstallDate, dbo.tblAssetManagement_Assets.RebuildDate, dbo.tblAssetManagement_Assets.WarrantyStart, 
                      dbo.tblAssetManagement_Assets.WarrantyEnd, dbo.tblAssetManagement_Assets.Peripheral, dbo.tblAssetManagement_Assets.Active, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets.Comments) AS Comments, dbo.tblAssetManagement_Assets_StatusLog.UserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS StatusMajor, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS StatusMinor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StatusDate, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS StatusComment, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblContacts_Companies.Name AS VendorName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblAssetManagement_Assets.Make, 
                      dbo.tblAssetManagement_Assets.IsCheckInOutItem, dbo.tblAssetManagement_Assets.RentalCost, dbo.tblAssetManagement_Assets.CalcMetrics, 
                      dbo.tblAssetManagement_Assets.ReqReservationApproval, dbo.tblAssetManagement_Assets.RentalCostInterval, dbo.tblSystem_Barcode.BarcodeValue, 
                      dbo.tblWorkTracking_ScheduledWork.ScheduledWOID AS ScheduledWorkID, dbo.tblWorkTracking_ScheduledWork.Description AS ScheduledWorkDescription, 
                      dbo.tblWorkTracking_ScheduledWork.Priority AS ScheduledWorkPriority, dbo.tblWorkTracking_ScheduledWork.WorkToBeDone AS ScheduledWorkToBeDone, 
                      dbo.tblWorkTracking_ScheduledWork.IsActive AS ScheduledWorkIsActive, dbo.tblWorkTracking_ScheduledWork.NextTriggerDate AS ScheduledWorkNextTriggerDate, 
                      dbo.tblWorkTracking_ScheduledWork.TriggerDisplayName AS ScheduledWorkTriggerDisplayName, dbo.tblWorkTracking_Process_Plan.Name AS ScheduledWorkPlan,
                       dbo.tblWorkTracking_Process_Category.Name AS ScheduledWorkCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS ScheduledWorkSubCategory, 
                      dbo.tblWorkTracking_Process.Name AS ScheduledWorkProcess, dbo.tblWorkTracking_Process_Revision.Revision AS ScheduledWorkProcessRevision, 
                      CASE WHEN ScheduledWOID IS NULL THEN 'No' ELSE 'Yes' END AS IsScheduledWorkAssociated
FROM         dbo.tblWorkTracking_Process_SubCategory RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_ScheduledWork.ProcessRevUID ON 
                      dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_ScheduledWork.PlanUID ON 
                      dbo.tblWorkTracking_Process_SubCategory.UID = dbo.tblWorkTracking_ScheduledWork.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_ScheduledWork.CategoryUID = dbo.tblWorkTracking_Process_Category.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_ScheduledWork.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblAssetManagement_Assets.UID = dbo.tblSystem_Barcode.ObjectUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblAssetManagement_Assets.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblAssetManagement_Assets.ID, ScheduledWorkID



GO
--/
-- *qryRptSrc_Std_AssetManagement_AssetHistory_Sub
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_Sub]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_Sub]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_Sub]
AS
SELECT     dbo.tblAssetManagement_Assets_StatusLog.UID, dbo.tblContacts_Contacts.FullName AS PrevUserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS PrevStatusMajorRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS PrevStatusMinorRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt AS PrevStatusScheduledRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt AS PrevStatusComments, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS PrevStatusDateRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.WorkOrderUID
FROM         dbo.tblAssetManagement_Assets_StatusLog LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblAssetManagement_Assets_StatusLog.UserUID = dbo.tblContacts_Contacts.UID



GO
--/
-- *qryRptSrc_Std_AssetManagement_AssetHistory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AssetHistory]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, CONVERT(varchar(8000), dbo.tblAssetManagement_Assets.Description) AS Description, 
               dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
               dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, 
               dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
               tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt, tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt, 
               tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS StatusDateRpt, 
               CASE WHEN tblAssetManagement_Assets_StatusLog_1.CommentsRpt IS NOT NULL THEN CONVERT(varchar(8000), 
               tblAssetManagement_Assets_StatusLog_1.CommentsRpt) ELSE 'No Comments Entered' END AS Comments, 
               tblAssetManagement_Assets_StatusLog_1.StatusScheduledRpt, dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevUserName, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusDateRpt, dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusMajorRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusMinorRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusScheduledRpt, CONVERT(varchar(8000), 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusComments) AS PrevStatusComments, 
               CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN CONVERT(varchar, tblWorkTracking_WorkOrder.ID) 
               ELSE tblWIP_WorkOrder.Number END AS WorkOrderID, CONVERT(numeric, DATEDIFF(n, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.PrevStatusDateRpt, tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC)) 
               / 60 AS Duration, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.tblAssetManagement_Assets.ID + N': ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt + N' ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt
                AS AssetIDandStatus, dbo.qrySystem_Locale.FullLocaleName, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC)))) AS StatusDateOnly, 
               tblAssetManagement_Assets_StatusLog_1.UserName AS ReqName, dbo.tblWIP_WorkOrder.Number AS WIPWorkOrderNumber, 
               CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN 'Work Tracking' ELSE CASE WHEN tblWIP_WorkOrder.Number IS NOT NULL 
               THEN 'WIP' ELSE '' END END AS TypeOfWorkOrder
FROM  dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
               dbo.tblWIP_WorkOrder.UID = tblAssetManagement_Assets_StatusLog_1.WorkOrderUID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON tblAssetManagement_Assets_StatusLog_1.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID ON 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_Sub.UID = tblAssetManagement_Assets_StatusLog_1.StatusPrevUID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.qrySystem_Locale.UID = dbo.tblAssetManagement_Assets.LocaleUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               tblAssetManagement_Assets_StatusLog_1.AssetUID = dbo.tblAssetManagement_Assets.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblAssetManagement_Assets.ID, StatusDateRpt DESC

GO
--/
-- *qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets_StatusLog.UID, dbo.tblContacts_Contacts.FullName AS PrevUserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS PrevStatusMajorRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS PrevStatusMinorRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt AS PrevStatusScheduledRpt, 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt AS PrevStatusComments, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS PrevStatusDateRpt, dbo.tblAssetManagement_Assets_StatusLog.WorkOrderUID, 
                      dbo.tblAssetManagement_Assets_StatusLog_Reason.Caption AS PrevEquipReason
FROM         dbo.tblAssetManagement_Assets_StatusLog LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog_Reason ON 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusReasonUIDRpt = dbo.tblAssetManagement_Assets_StatusLog_Reason.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblAssetManagement_Assets_StatusLog.UserUID = dbo.tblContacts_Contacts.UID
ORDER BY PrevEquipReason DESC



GO
--/
-- *qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, CONVERT(varchar(8000), dbo.tblAssetManagement_Assets.Description) AS Description, 
               dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
               dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, 
               dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
               tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt, tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt, 
               tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS StatusDateRpt, CONVERT(varchar(8000), 
               tblAssetManagement_Assets_StatusLog_1.CommentsRpt) AS Comments, tblAssetManagement_Assets_StatusLog_1.StatusScheduledRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevUserName, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusDateRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusMajorRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusMinorRpt, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusScheduledRpt, CONVERT(varchar(8000), 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusComments) AS PrevStatusComments, 
               CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN CONVERT(varchar, tblWorkTracking_WorkOrder.ID) 
               ELSE tblWIP_WorkOrder.Number END AS WorkOrderID, CONVERT(numeric, DATEDIFF(n, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevStatusDateRpt, 
               tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC)) / 60 AS Duration, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.tblAssetManagement_Assets.ID + N': ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt + N' ' + dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt
                AS AssetIDandStatus, dbo.qrySystem_Locale.FullLocaleName, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC)))) AS StatusDateOnly, 
               tblAssetManagement_Assets_StatusLog_1.UserName AS ReqName, dbo.tblAssetManagement_Assets_StatusLog_Reason.Caption AS EquipState, 
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.PrevEquipReason, CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL 
               THEN 'Work Tracking' ELSE CASE WHEN tblWIP_WorkOrder.Number IS NOT NULL THEN 'WIP' ELSE '' END END AS TypeOfWorkOrder
FROM  dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
               dbo.tblWIP_WorkOrder.UID = tblAssetManagement_Assets_StatusLog_1.WorkOrderUID ON 
               dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = tblAssetManagement_Assets_StatusLog_1.StatusReasonUIDRpt LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON tblAssetManagement_Assets_StatusLog_1.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub ON 
               tblAssetManagement_Assets_StatusLog_1.StatusPrevUID = dbo.qryRptSrc_Std_AssetManagement_AssetHistory_with_EquipState_Sub.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.qrySystem_Locale.UID = dbo.tblAssetManagement_Assets.LocaleUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               tblAssetManagement_Assets_StatusLog_1.AssetUID = dbo.tblAssetManagement_Assets.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblAssetManagement_Assets.ID, StatusDateRpt DESC



GO
--/
-- *qryRptSrc_Std_AssetManagement_AssetList
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AssetList]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetList]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AssetList]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_WorkSchedule.Name AS WorkScheduleName, 
                      dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.PurchaseDate, dbo.tblAssetManagement_Assets.PurchasePrice, 
                      dbo.tblAssetManagement_Assets.InstallDate, dbo.tblAssetManagement_Assets.RebuildDate, dbo.tblAssetManagement_Assets.WarrantyStart, 
                      dbo.tblAssetManagement_Assets.WarrantyEnd, dbo.tblAssetManagement_Assets.Peripheral, dbo.tblAssetManagement_Assets.Active, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets.Comments) AS Comments, dbo.tblAssetManagement_Assets_StatusLog.UserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS StatusMajor, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS StatusMinor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StatusDate, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS StatusComment, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblContacts_Companies.Name AS VendorName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblAssetManagement_Assets.Make, 
                      dbo.tblAssetManagement_Assets.IsCheckInOutItem, dbo.tblAssetManagement_Assets.RentalCost, dbo.tblAssetManagement_Assets.CalcMetrics, 
                      dbo.tblAssetManagement_Assets.ReqReservationApproval, dbo.tblAssetManagement_Assets.RentalCostInterval, dbo.tblSystem_Barcode.BarcodeValue, 
                      dbo.tblAssetManagement_Assets_StatusLog_Reason.Caption AS StatusReason
FROM         dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = dbo.tblAssetManagement_Assets_StatusLog.StatusReasonUIDRpt RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblAssetManagement_Assets.UID = dbo.tblSystem_Barcode.ObjectUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblAssetManagement_Assets.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID ON 
                      dbo.tblAssetManagement_Assets_StatusLog.UID = dbo.tblAssetManagement_Assets.CurrentStatusUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblAssetManagement_Assets.ID
					  

GO
--/
-- *qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.Description AS WorkOrderDesc, 
                      dbo.tblWorkTracking_WorkOrder.State, dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblWorkTracking_WorkOrder.AssetUID
FROM         dbo.tblWorkTracking_ScheduledWork RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_ScheduledWork.UID = dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID
WHERE     (dbo.tblWorkTracking_WorkOrder.State = N'pending') OR
                      (dbo.tblWorkTracking_WorkOrder.State = N'pastdue')



GO
--/
-- *qryRptSrc_Std_AssetManagement_Association_Subqry_Children
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Children]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Children]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Children]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets_Association.Name AS AssocName, 
                      dbo.tblAssetManagement_Assets_Association.Description AS AssocDesc, dbo.tblAssetManagement_Assets_Association_Member.Role, 
                      dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS CatName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCatName, 
                      dbo.tblAssetManagement_Assets.[Group], dbo.tblAssetManagement_Assets.SubGroup, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.WorkOrderID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.WorkOrderDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.State, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.ScheduledWOID
FROM         dbo.tblAssetmanagement_Assets_Categories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Association_Member LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.tblAssetManagement_Assets_Association_Member.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.tblAssetmanagement_Assets_Categories.UID = dbo.tblAssetManagement_Assets.CategoryUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID AND 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_SubCategories.CategoryUID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Association ON 
                      dbo.tblAssetManagement_Assets_Association_Member.AssociationUID = dbo.tblAssetManagement_Assets_Association.UID
WHERE     (dbo.tblAssetManagement_Assets_Association_Member.Role = N'Child')
ORDER BY AssocName



GO
--/
-- *qryRptSrc_Std_AssetManagement_Association_Subqry_Parents
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Parents]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Parents]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association_Subqry_Parents]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets_Association.Name AS AssocName, 
                      dbo.tblAssetManagement_Assets_Association.Description AS AssocDesc, dbo.tblAssetManagement_Assets.ID AS AssetID, 
                      dbo.tblAssetManagement_Assets.Description AS AssetDesc, dbo.tblAssetmanagement_Assets_Categories.Name AS CatName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCatName, dbo.tblAssetManagement_Assets.[Group], 
                      dbo.tblAssetManagement_Assets.SubGroup, dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.ScheduledWOID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.State, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.WorkOrderDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.WorkOrderID
FROM         dbo.tblAssetManagement_Assets_Association LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Association_Member INNER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.tblAssetManagement_Assets_Association_Member.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Open_WorkOrders.AssetUID ON 
                      dbo.tblAssetManagement_Assets_Association.UID = dbo.tblAssetManagement_Assets_Association_Member.AssociationUID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_SubCategories.CategoryUID AND 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID
WHERE     (dbo.tblAssetManagement_Assets_Association_Member.Role = N'Parent')
ORDER BY AssocName



GO
--/
-- *qryRptSrc_Std_AssetManagement_Association
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Association]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Association]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.AssocName, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.AssetID AS ParentAssetID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.AssetDesc AS ParentAssetDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.CatName AS ParentCatName, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.SubCatName AS ParentSubCatName, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.[Group] AS ParentGroup, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.SubGroup AS ParentSubGroup, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.WorkOrderID AS ParentWorkOrderID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.WorkOrderDesc AS ParentWorkOrderDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.State AS ParentWorkOrderState, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.ScheduledWOID AS ParentScheduledWOID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.AssetID AS ChildAssetID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.AssetDesc AS ChildAssetDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.CatName AS ChildCatName, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.SubCatName AS ChildSubCatName, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.[Group] AS ChildGroup, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.SubGroup AS ChildSubGroup, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.WorkOrderID AS ChildWorkOrderID, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.WorkOrderDesc AS ChildWorkOrderDesc, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.State AS ChildWorkOrderState, 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.ScheduledWOID AS ChildScheduledWOID
FROM         dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children ON 
                      dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.AssocName = dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Children.AssocName
ORDER BY dbo.qryRptSrc_Std_AssetManagement_Association_Subqry_Parents.AssocName, ParentAssetID, ChildAssetID



GO
--/
-- *qryRptSrc_Std_AssetManagement_DailyStatusUpdate_AllAssets
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_DailyStatusUpdate_AllAssets]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_DailyStatusUpdate_AllAssets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_DailyStatusUpdate_AllAssets]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, 
               tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt + ' / ' + tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt AS CurrentStatus, 
               tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC AS LastDowntimeDate, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS LastUptimeDate, 
               CASE WHEN tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = 'Downtime' THEN tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC ELSE
                tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC END AS OpenDate, tblAssetManagement_Assets_StatusLog_1.UserName AS LastEntryBy, 
               tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS LastEntryDate, 
               CASE WHEN tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = 'Downtime' THEN 'DT Reported Comments: ' + CONVERT(nvarchar(4000), 
               tblAssetManagement_Assets_StatusLog_2.CommentsRpt) ELSE 'Last Entry Comments: ' + CONVERT(nvarchar(4000), 
               tblAssetManagement_Assets_StatusLog_1.CommentsRpt) END AS Comments_DTReportedOrLastEntry, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.qrySystem_Locale.FullLocaleName, 
               CASE WHEN tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = 'Downtime' THEN tblAssetManagement_Assets_StatusLog_2.UserName ELSE tblAssetManagement_Assets_StatusLog.UserName
                END AS ReportedBy, CONVERT(nvarchar(4000), tblAssetManagement_Assets_StatusLog_1.CommentsRpt) AS Comments_LastEntry, CONVERT(nvarchar(4000), 
               tblAssetManagement_Assets_StatusLog_2.CommentsRpt) AS Comments_DT_Reported, dbo.tblAssetManagement_Assets_StatusLog_Reason.Caption
FROM  dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
               dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = tblAssetManagement_Assets_StatusLog_1.StatusReasonUIDRpt RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.LastUptimeStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_2 ON 
               dbo.tblAssetManagement_Assets.LastDowntimeStatusUID = tblAssetManagement_Assets_StatusLog_2.UID ON 
               tblAssetManagement_Assets_StatusLog_1.UID = dbo.tblAssetManagement_Assets.CurrentStatusUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY AssetID



GO
--/
-- *qryRptSrc_Std_AssetManagement_DailyUpdate
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_DailyUpdate]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_DailyUpdate]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_DailyUpdate]
AS
SELECT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, 
               tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt + ' / ' + tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt AS CurrentStatus, 
               tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC AS LastDowntimeDate, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS LastUptimeDate, 
               CASE WHEN tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = 'Downtime' THEN tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC ELSE
                tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC END AS OpenDate, tblAssetManagement_Assets_StatusLog_1.UserName, 
               tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS LastEntry, CONVERT(nvarchar(4000), 
               tblAssetManagement_Assets_StatusLog_1.CommentsRpt) AS Comments, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               dbo.tblAssetManagement_Assets_StatusLog_Reason.Caption
FROM  dbo.tblAssetManagement_Assets_StatusLog_Reason RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
               dbo.tblAssetManagement_Assets_StatusLog_Reason.UID = tblAssetManagement_Assets_StatusLog_1.StatusReasonUIDRpt RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.LastUptimeStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_2 ON 
               dbo.tblAssetManagement_Assets.LastDowntimeStatusUID = tblAssetManagement_Assets_StatusLog_2.UID ON 
               tblAssetManagement_Assets_StatusLog_1.UID = dbo.tblAssetManagement_Assets.CurrentStatusUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = CASE WHEN (DATEDIFF(dd, 
               tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC, getutcdate()) < 3 AND 
               tblAssetManagement_Assets_StatusLog.UID = tblAssetManagement_Assets.CurrentStatusUID) THEN 'Uptime' ELSE 'Downtime' END) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL) AND (tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt = CASE WHEN (DATEDIFF(dd, 
               tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC, getutcdate()) < 3 AND 
               tblAssetManagement_Assets_StatusLog.UID = tblAssetManagement_Assets.CurrentStatusUID) THEN 'Uptime' ELSE 'Downtime' END)


GO
--/
-- *qryRptSrc_Std_AssetManagement_Equipment_Metrics
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics]
AS
SELECT TOP (100) PERCENT CONVERT(datetime, dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate) AS LogDate, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.LastUpdated, dbo.tblAssetManagement_Assets_Metrics_Daily.NonScheduled, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeEngineering, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeStandBy, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeOutOfSpecInput, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimePreventiveMaintenance, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeProductionTest, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepair, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepairRequest, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledComplete, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledConsumables, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledFacilities, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelaySupplier, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelayUser, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeSetup, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledComplete, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledConsumables, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledFacilities, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelaySupplier, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelayUser, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelaySupplierTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayUserTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeFacilitiesTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationsTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.TotalTime, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeEvents, dbo.tblAssetManagement_Assets_Metrics_Daily.Failures, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.ProductionCycles, dbo.tblAssetManagement_Assets_Metrics_Daily.TotalStatusChanges, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.MTBF, dbo.tblAssetManagement_Assets_Metrics_Daily.MCBF, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentUptimePct, dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentUptimePct, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUptimePct, dbo.tblAssetManagement_Assets_Metrics_Daily.MTTR, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.MTOL, dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentScheduledDowntimePct, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentScheduledDowntimePct, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUtilizationPct, dbo.tblAssetManagement_Assets_Metrics_Daily.TotalUtilizationPct, 
               dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
               dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
               dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentFailures, dbo.tblAssetManagement_Assets_Metrics_Daily.MTBFs, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.TPTActualUnits, dbo.tblAssetManagement_Assets_Metrics_Daily.TPTEffectiveUnits, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.EfficiencyBase, dbo.tblAssetManagement_Assets_Metrics_Daily.AvailabilityEfficiency, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.RateEfficiency, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.PerformanceEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.QualityEfficiency, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OverallEquipmentEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.TEEP, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, CASE WHEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) = '10' THEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) = '11' THEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) = '12' THEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               ELSE '0' + CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) END AS MonthYear, CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CASE WHEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) = '10' THEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '11' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) = '12' THEN CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) ELSE '0' + CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) END AS YearMonth
FROM  dbo.tblAssetManagement_Assets_Metrics_Daily INNER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted = 0) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY LogDate

GO
--/
-- *qryRptSrc_Std_AssetManagement_Equipment_Metrics_By_Rule
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics_By_Rule]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics_By_Rule]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Equipment_Metrics_By_Rule]
AS
SELECT     TOP (100) PERCENT CASE WHEN TieToPrevDay = 1 THEN DATEADD(dd, - 1, LogDate) ELSE LogDate END AS LogDate, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LastUpdated, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.NonScheduled, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.UptimeEngineering, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.UptimeProduction, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.UptimeStandBy, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeOutOfSpecInput, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimePreventiveMaintenance, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeProductionTest, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeRepair, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeRepairRequest, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledMaintDelayUser, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeSetup, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledMaintDelayUser, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.UptimeTotal, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeScheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeMaintDelaySupplierTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeMaintDelayUserTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeMaintDelayTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeFacilitiesTotal, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.OperationsTotal, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TotalTime, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.DowntimeEvents, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.Failures, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.ProductionCycles, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TotalStatusChanges, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.MTBF, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.MCBF, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.EquipmentDependentUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.SupplierDependentUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.OperationalUptimePct, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.MTTR, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.MTOL, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.EquipmentDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.SupplierDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.OperationalUtilizationPct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TotalUtilizationPct, dbo.tblAssetManagement_Assets.ID, 
                      dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
                      dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Active, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.SupplierDependentFailures, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.MTBFs, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TPTActualUnits, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TPTEffectiveUnits, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.EfficiencyBase, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.AvailabilityEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.OperationalEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.RateEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.PerformanceEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.QualityEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.OverallEquipmentEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.TEEP, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, CASE WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) = '10' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) = '11' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) = '12' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) ELSE '0' + CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.LogDate)) END AS MonthYear, 
                      dbo.tblAssetManagement_WorkSchedule.Name AS WorkSchedule, dbo.tblAssetManagement_WorkSchedule.Description AS WorkScheduleDescription, 
                      dbo.tblAssetManagement_WorkSchedule_Rule.Name AS WorkScheduleRule, dbo.tblAssetManagement_WorkSchedule_Rule.Shift, 
                      dbo.tblAssetManagement_WorkSchedule_Rule.TieToPrevDay
FROM         dbo.tblAssetmanagement_Assets_Categories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.AssetUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule_Rule INNER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON 
                      dbo.tblAssetManagement_WorkSchedule_Rule.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID ON 
                      dbo.tblAssetManagement_Assets_Metrics_Daily_Rule.RuleUID = dbo.tblAssetManagement_WorkSchedule_Rule.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
                      dbo.tblAssetmanagement_Assets_Categories.UID = dbo.tblAssetManagement_Assets.CategoryUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted = 0) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY LogDate DESC



GO
--/
-- *qryRptSrc_Std_AssetManagement_FailAndCorrectiveAction
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_FailAndCorrectiveAction]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_FailAndCorrectiveAction]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_FailAndCorrectiveAction]
AS
SELECT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, 
               dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
               dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblContacts_Companies.Name AS VendorName, 
               dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsScheduled, 
               dbo.tblWorkTracking_WorkOrder.Module AS ModuleName, dbo.tblWorkTracking_WorkOrder.Failure AS FailureName, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.CorrectiveAction, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS DueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CompleteDate, dbo.tblWorkTracking_WorkOrder.GeneratedType, 
               dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblAssetManagement_Assets.Active
FROM  dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder.AssetUID LEFT OUTER JOIN
               dbo.tblContacts_Companies ON dbo.tblAssetManagement_Assets.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblWorkTracking_WorkOrder.GeneratedType <> N'Scheduled') OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_InactiveDate
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_InactiveDate]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_InactiveDate]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_InactiveDate]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Model AS ModelID, 
                      dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
                      dbo.tblAssetManagement_WorkSchedule.Name AS WorkScheduleName, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.PurchaseDate, dbo.tblAssetManagement_Assets.PurchasePrice, dbo.tblAssetManagement_Assets.InstallDate, 
                      dbo.tblAssetManagement_Assets.RebuildDate, dbo.tblAssetManagement_Assets.WarrantyStart, dbo.tblAssetManagement_Assets.WarrantyEnd, 
                      dbo.tblAssetManagement_Assets.Peripheral, dbo.tblAssetManagement_Assets.Active, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets.Comments) AS Comments, dbo.tblAssetManagement_Assets_StatusLog.UserName, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS StatusMajor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS StatusMinor, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StatusDate, CONVERT(varchar(8000), 
                      dbo.tblAssetManagement_Assets_StatusLog.CommentsRpt) AS StatusComment, 
                      dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblAssetManagement_Assets.Make, 
                      dbo.tblAssetManagement_Assets.IsCheckInOutItem, dbo.tblAssetManagement_Assets.RentalCost, dbo.tblAssetManagement_Assets.CalcMetrics, 
                      dbo.tblAssetManagement_Assets.ReqReservationApproval, dbo.tblAssetManagement_Conditions.Name AS Condition, 
                      dbo.tblAssetManagement_Assets.ActiveUpdatedBy AS LastActiveChangedBy, 
                      dbo.tblAssetManagement_Assets.ActiveUpdatedOnDateTimeUTC AS LastActiveChangedOn, DATEDIFF(dd, 
                      dbo.tblAssetManagement_Assets.ActiveUpdatedOnDateTimeUTC, getutcdate()) / 1.00 AS NumberDaysRetired, DATEDIFF(mm, 
                      dbo.tblAssetManagement_Assets.ActiveUpdatedOnDateTimeUTC, getutcdate()) / 1.00 AS NumberMonthsRetired, DATEDIFF(yy, 
                      dbo.tblAssetManagement_Assets.ActiveUpdatedOnDateTimeUTC, getutcdate()) / 1.00 AS NumberYearsRetired
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Conditions ON dbo.tblAssetManagement_Assets.ConditionUID = dbo.tblAssetManagement_Conditions.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON 
                      dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblAssetManagement_Assets.Active <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblAssetManagement_Assets.Active <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL) AND (dbo.tblAssetManagement_Assets.Active <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL) AND (dbo.tblAssetManagement_Assets.Active <> 1)
ORDER BY dbo.tblAssetManagement_Assets.ID



GO
--/
-- *qryRptSrc_Std_AssetManagement_LocationHistory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_LocationHistory]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_LocationHistory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_LocationHistory]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblContacts_Contacts.FullName, dbo.qrySystem_Locale.FullLocaleName, dbo.qrySystem_Locale.IsInventory, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblAssetManagement_Assets.Make, dbo.tblAssetManagement_Assets.Model, 
                      dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
                      dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      dbo.tblAssetManagement_Assets.Active
FROM         dbo.tblAssetManagement_Assets_LocaleHistory LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblAssetManagement_Assets_LocaleHistory.UserUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets_LocaleHistory.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON
                       dbo.tblAssetManagement_Assets_LocaleHistory.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblAssetManagement_Assets_LocaleHistory.UID = dbo.tblSystem_AuditSummary.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblAssetManagement_Assets.ID



GO
--/
-- *qryRptSrc_Std_AssetManagement_ModFailCA_List
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_ModFailCA_List]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_ModFailCA_List]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_ModFailCA_List]
AS
SELECT     dbo.tblAssetmanagement_Assets_Categories.Name AS Category, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategory, 
                      dbo.tblAssetManagement_Assets_Modules.ModuleName, dbo.tblAssetManagement_Assets_Failures.FailureName, 
                      dbo.tblAssetManagement_Assets_CorrectiveActions.ActionName AS CorrectiveActionName
FROM         dbo.tblAssetManagement_Assets_CorrectiveActions RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Failures ON 
                      dbo.tblAssetManagement_Assets_CorrectiveActions.FailureUID = dbo.tblAssetManagement_Assets_Failures.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Modules ON 
                      dbo.tblAssetManagement_Assets_Failures.ModuleUID = dbo.tblAssetManagement_Assets_Modules.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets_Modules.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID RIGHT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets_SubCategories.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID



GO
--/
-- *qryRptSrc_Std_AssetManagement_Notification
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_EmailNotification]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_EmailNotification]
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Notification]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Notification]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Notification]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, 
               CASE tblSystem_Email_TriggerAssociation.SendToType WHEN 'Contact' THEN tblContacts_Contacts.FullName ELSE tblContacts_Contact_Group.NAME END AS EmailGroupOrUser,
                dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Make, 
               dbo.tblAssetManagement_Assets.Model, dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
               dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblContacts_Contacts.FullName, 
               dbo.tblSystem_Email_TriggerAssociation.SendToType AS Type, dbo.tblContacts_Contact_Group.Name AS EmailGroupName, 
               tblContacts_Contacts_1.FullName AS EmailGroupMember, dbo.tblAssetManagement_Assets.Active, dbo.tblSystem_Email_Trigger.Name AS TriggerName, 
               dbo.tblSystem_Email_Notification.Name AS NotificationName, CASE WHEN tblSystem_Email_Trigger.Name IS NULL 
               THEN 'No' ELSE 'Yes' END AS HasTriggerSetUp
FROM  dbo.tblSystem_Email_TriggerAssociation LEFT OUTER JOIN
               dbo.tblSystem_Email_Notification ON dbo.tblSystem_Email_TriggerAssociation.NotificationUID = dbo.tblSystem_Email_Notification.UID LEFT OUTER JOIN
               dbo.tblSystem_Email_Trigger ON dbo.tblSystem_Email_TriggerAssociation.TriggerUID = dbo.tblSystem_Email_Trigger.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_GroupMember LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblContacts_Contact_GroupMember.ContactUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupMember.GroupUID = dbo.tblContacts_Contact_Group.UID ON 
               dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID = dbo.tblAssetManagement_Assets.UID
ORDER BY AssetID


GO
--/
-- *qryRptSrc_Std_AssetManagement_OEE
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OEE]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OEE]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OEE]
AS
SELECT     TOP (100) PERCENT CONVERT(datetime, dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate) AS LogDate, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.LastUpdated, dbo.tblAssetManagement_Assets_Metrics_Daily.NonScheduled, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeEngineering, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeStandBy, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeOutOfSpecInput, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimePreventiveMaintenance, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeProductionTest, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepair, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepairRequest, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelayUser, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeSetup, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelayUser, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelaySupplierTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayUserTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeFacilitiesTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationsTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TotalTime, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeEvents, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.Failures, dbo.tblAssetManagement_Assets_Metrics_Daily.ProductionCycles, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TotalStatusChanges, dbo.tblAssetManagement_Assets_Metrics_Daily.MTBF, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MCBF, dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentUptimePct, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MTTR, dbo.tblAssetManagement_Assets_Metrics_Daily.MTOL, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUtilizationPct, dbo.tblAssetManagement_Assets_Metrics_Daily.TotalUtilizationPct, 
                      dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.Active, dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentFailures, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MTBFs, dbo.tblAssetManagement_Assets_Metrics_Daily.TPTActualUnits, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TPTEffectiveUnits, dbo.tblAssetManagement_Assets_Metrics_Daily.EfficiencyBase, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.AvailabilityEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.RateEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.PerformanceEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.QualityEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.OverallEquipmentEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TEEP, 
                      tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt + ' ' + tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt AS CurrentStatus, 
                      tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS CurrentStatusDate, tblAssetManagement_Assets_StatusLog_1.UserName, 
                      tblAssetManagement_Assets_StatusLog_1.CommentsRpt, CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) AS MonthYearLogDate, 
                      tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC AS LastFailureDate, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate AS LogDate1, dbo.tblAssetManagement_WorkSchedule.Name AS WorkSchedule, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, CONVERT(VarChar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(VarChar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) AS MonthYear
FROM         dbo.tblAssetManagement_Assets_Metrics_Daily INNER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON 
                      dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_2 ON 
                      dbo.tblAssetManagement_Assets.LastFailureUID = tblAssetManagement_Assets_StatusLog_2.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
                      dbo.tblAssetManagement_Assets.CurrentStatusUID = tblAssetManagement_Assets_StatusLog_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted = 0) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY LogDate



GO
--/
-- *qryRptSrc_Std_AssetManagement_OperationalUptimeChart
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.Active, 
                      dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      CASE WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '10' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '11' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '12' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) ELSE '0' + CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) END AS MonthYear, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationalUptimePct, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTBF, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTTR, SUM(CONVERT(INT, 
                      ISNULL(dbo.tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) AS Failures, 1 AS AssetCount, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal, dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction, dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeRepair, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeMaintDelayUserTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeOutOfSpecInput, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeFacilitiesTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.SupplierDependentUptimePct, 
                      ISNULL(dbo.tblAssetManagement_Assets_Metrics_Monthly.SupplierDependentFailures, 0) AS SupplierDependentFailures, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Metrics_Monthly ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Monthly.AssetUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
GROUP BY MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate, dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Active, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationalUptimePct, dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal, dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeRepair, dbo.tblAssetManagement_Assets.Description, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeMaintDelayUserTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeOutOfSpecInput, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeFacilitiesTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.SupplierDependentUptimePct, 
                      ISNULL(dbo.tblAssetManagement_Assets_Metrics_Monthly.SupplierDependentFailures, 0), dbo.tblAssetManagement_Assets.[Group], 
                      dbo.tblAssetManagement_Assets.SubGroup, dbo.tblAssetmanagement_Assets_Categories.Name, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name
ORDER BY dbo.tblAssetManagement_Assets.ID, MonthYear



GO
--/
-- *qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Asset_XAxis
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Asset_XAxis]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Asset_XAxis]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Asset_XAxis]
AS
SELECT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.Active, 
               dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
               CONVERT(INT, ISNULL(dbo.tblAssetManagement_Assets_Metrics_Daily.Failures, 0)) AS Failures, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationsTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate, dbo.tblAssetManagement_Assets.Deleted, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.qrySystem_Locale.FullLocaleName, CASE WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '10' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '11' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '12' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) ELSE '0' + CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               END AS MonthYear, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUptimePct
FROM  dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Metrics_Daily ON dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Daily_for_Multiple_Assets 
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Daily_for_Multiple_Assets]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Daily_for_Multiple_Assets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChart_Daily_for_Multiple_Assets]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.Active, 
               dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
               CONVERT(INT, ISNULL(dbo.tblAssetManagement_Assets_Metrics_Daily.Failures, 0)) AS Failures, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeTotal, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.OperationsTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate, dbo.tblAssetManagement_Assets.Deleted, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.qrySystem_Locale.FullLocaleName, CASE WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '10' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '11' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               = '12' THEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) ELSE '0' + CONVERT(varchar, 
               MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
               END AS MonthYear, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUptimePct, DATEPART(dd, 
               dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate) AS DayOfMonth
FROM  dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Metrics_Daily ON dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL)

GO
--/
-- *qryRptSrc_Std_AssetManagement_OperationalUptimeChartCategory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartCategory]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartCategory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartCategory]
AS
SELECT     COUNT(dbo.tblAssetManagement_Assets.ID) AS AssetCount, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      CASE WHEN CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '10' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '11' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '12' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) ELSE '0' + CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) END AS MonthYear, 
                      dbo.Division(SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal) * 100, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal)) AS OperationalUptimePct, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTBF, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTTR, SUM(CONVERT(INT, 
                      ISNULL(dbo.tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) AS Failures, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal) AS UptimeTotal, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal) AS OperationsTotal, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction) AS UptimeProduction, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeRepair) AS DowntimeRepair, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal) AS DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Metrics_Monthly ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Monthly.AssetUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblAssetManagement_Assets.Active = 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
GROUP BY MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate, dbo.tblAssetmanagement_Assets_Categories.Name



GO
--/
-- *qryRptSrc_Std_AssetManagement_OperationalUptimeChartSubCategory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartSubCategory]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartSubCategory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_OperationalUptimeChartSubCategory]
AS
SELECT     COUNT(dbo.tblAssetManagement_Assets.ID) AS AssetCount, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, CASE WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '10' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '11' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) WHEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) = '12' THEN CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) ELSE '0' + CONVERT(varchar, 
                      MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate)) END AS MonthYear, 
                      dbo.Division(SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal) * 100, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal)) AS OperationalUptimePct, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTBF, CASE WHEN COUNT(ID) 
                      > SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0)) 
                      THEN dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), COUNT(ID)) 
                      ELSE dbo.Division(SUM(tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal), 
                      SUM(ISNULL(tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) END AS MTTR, SUM(CONVERT(INT, 
                      ISNULL(dbo.tblAssetManagement_Assets_Metrics_Monthly.Failures, 0))) AS Failures, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeTotal) AS UptimeTotal, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.OperationsTotal) AS OperationsTotal, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.UptimeProduction) AS UptimeProduction, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeRepair) AS DowntimeRepair, 
                      SUM(dbo.tblAssetManagement_Assets_Metrics_Monthly.DowntimeUnscheduledTotal) AS DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Metrics_Monthly ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Monthly.AssetUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblAssetManagement_Assets.Active = 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
GROUP BY MONTH(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), YEAR(dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate), 
                      dbo.tblAssetManagement_Assets_Metrics_Monthly.LogDate, dbo.tblAssetmanagement_Assets_Categories.Name, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name



GO
--/
-- *qryRptSrc_Std_AssetManagement_Performance
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Performance]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Performance]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Performance]
AS
SELECT     TOP (100) PERCENT CONVERT(datetime, dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate) AS LogDate, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.LastUpdated, dbo.tblAssetManagement_Assets_Metrics_Daily.NonScheduled, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeEngineering, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeStandBy, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeOutOfSpecInput, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimePreventiveMaintenance, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeProductionTest, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepair, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeRepairRequest, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledMaintDelayUser, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeSetup, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledComplete, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledConsumables, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledFacilities, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelaySupplier, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledMaintDelayUser, dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelaySupplierTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayUserTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeMaintDelayTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeFacilitiesTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeTotal, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationsTotal, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TotalTime, dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeEvents, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.Failures, dbo.tblAssetManagement_Assets_Metrics_Daily.ProductionCycles, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TotalStatusChanges, dbo.tblAssetManagement_Assets_Metrics_Daily.MTBF, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MCBF, dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentUptimePct, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUptimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MTTR, dbo.tblAssetManagement_Assets_Metrics_Daily.MTOL, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.EquipmentDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentScheduledDowntimePct, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalUtilizationPct, dbo.tblAssetManagement_Assets_Metrics_Daily.TotalUtilizationPct, 
                      dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.Active, dbo.tblAssetManagement_Assets_Metrics_Daily.SupplierDependentFailures, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.MTBFs, dbo.tblAssetManagement_Assets_Metrics_Daily.TPTActualUnits, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TPTEffectiveUnits, dbo.tblAssetManagement_Assets_Metrics_Daily.EfficiencyBase, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.AvailabilityEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.OperationalEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.RateEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.PerformanceEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.QualityEfficiency, dbo.tblAssetManagement_Assets_Metrics_Daily.OverallEquipmentEfficiency, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.TEEP, 
                      tblAssetManagement_Assets_StatusLog_1.StatusMajorRpt + ' ' + tblAssetManagement_Assets_StatusLog_1.StatusMinorRpt AS CurrentStatus, 
                      tblAssetManagement_Assets_StatusLog_1.StatusRptDateTimeUTC AS CurrentStatusDate, tblAssetManagement_Assets_StatusLog_1.UserName, 
                      tblAssetManagement_Assets_StatusLog_1.CommentsRpt, CONVERT(varchar, MONTH(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate)) AS MonthYearLogDate, 
                      tblAssetManagement_Assets_StatusLog_2.StatusRptDateTimeUTC AS LastFailureDate, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate AS LogDate1, dbo.tblAssetManagement_WorkSchedule.Name AS WorkSchedule, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM         dbo.tblAssetManagement_Assets_Metrics_Daily INNER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_WorkSchedule ON 
                      dbo.tblAssetManagement_Assets.WorkScheduleUID = dbo.tblAssetManagement_WorkSchedule.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_2 ON 
                      dbo.tblAssetManagement_Assets.LastFailureUID = tblAssetManagement_Assets_StatusLog_2.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_1 ON 
                      dbo.tblAssetManagement_Assets.CurrentStatusUID = tblAssetManagement_Assets_StatusLog_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted = 0) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY LogDate



GO
--/
-- *qryRptSrc_Std_AssetManagement_Permission_Setting
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_Permission_Setting]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_Permission_Setting]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_Permission_Setting]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
               dbo.tblAssetManagement_Assets.SerialNumber, dbo.tblContacts_Contact_Group.Name AS AccessGroup, dbo.tblSystem_Barcode.BarcodeValue, 
               CASE WHEN tblContacts_Contact_Group.Name IS NOT NULL THEN 'Yes' ELSE 'No' END AS IsPermissionSpecified
FROM  dbo.tblContacts_Contact_GroupAccess RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblContacts_Contact_GroupAccess.ObjectUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode ON dbo.tblAssetManagement_Assets.DefaultBarcodeUID = dbo.tblSystem_Barcode.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupAccess.GroupUID = dbo.tblContacts_Contact_Group.UID
ORDER BY dbo.tblAssetManagement_Assets.ID



GO
--/
-- *qryRptSrc_Std_AssetManagement_RepairToUptime
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_RepairToUptime]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_RepairToUptime]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_RepairToUptime]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StartTime,
                   (SELECT TOP (1) tblAssetManagement_Assets_StatusLog1.StatusRptDateTimeUTC AS [UpDate]
                    FROM   dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog1 LEFT OUTER JOIN
                                   dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_Prev1 ON 
                                   tblAssetManagement_Assets_StatusLog1.StatusPrevUID = tblAssetManagement_Assets_StatusLog_Prev1.UID LEFT OUTER JOIN
                                   dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets1 ON 
                                   tblAssetManagement_Assets_StatusLog1.AssetUID = tblAssetManagement_Assets1.UID
                    WHERE (tblAssetManagement_Assets_StatusLog1.StatusMajorRpt = 'Uptime') AND 
                                   (tblAssetManagement_Assets_StatusLog_Prev1.StatusMajorRpt = 'Downtime') AND 
                                   (dbo.tblAssetManagement_Assets.UID = tblAssetManagement_Assets1.UID) AND 
                                   (tblAssetManagement_Assets_StatusLog1.StatusRptDateTimeUTC > dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC)
                    ORDER BY [UpDate]) AS EndTime, dbo.tblAssetManagement_Assets_Categories.Name AS CategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
               dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, CONVERT(numeric, DATEDIFF(n, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC,
                   (SELECT TOP (1) tblAssetManagement_Assets_StatusLog1.StatusRptDateTimeUTC AS [UpDate]
                    FROM   dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog1 LEFT OUTER JOIN
                                   dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_Prev1 ON 
                                   tblAssetManagement_Assets_StatusLog1.StatusPrevUID = tblAssetManagement_Assets_StatusLog_Prev1.UID LEFT OUTER JOIN
                                   dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets1 ON 
                                   tblAssetManagement_Assets_StatusLog1.AssetUID = tblAssetManagement_Assets1.UID
                    WHERE (tblAssetManagement_Assets_StatusLog1.StatusMajorRpt = 'Uptime') AND 
                                   (tblAssetManagement_Assets_StatusLog_Prev1.StatusMajorRpt = 'Downtime') AND 
                                   (dbo.tblAssetManagement_Assets.UID = tblAssetManagement_Assets1.UID) AND 
                                   (tblAssetManagement_Assets_StatusLog1.StatusRptDateTimeUTC > dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC)
                    ORDER BY [UpDate]))) / 60 AS Duration, dbo.tblAssetManagement_Assets.Active
FROM  dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog AS tblAssetManagement_Assets_StatusLog_Prev ON 
               dbo.tblAssetManagement_Assets_StatusLog.StatusPrevUID = tblAssetManagement_Assets_StatusLog_Prev.UID ON 
               dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_StatusLog.AssetUID
WHERE (dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt = 'Downtime') AND (tblAssetManagement_Assets_StatusLog_Prev.StatusMajorRpt = 'Uptime') AND 
               (dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt = 0)
ORDER BY AssetID

GO
--/
-- *qryRptSrc_Std_AssetManagement_StatusLog_Reasons
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_StatusLog_Reasons]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_StatusLog_Reasons]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_StatusLog_Reasons]
AS
SELECT TOP (100) PERCENT Caption, Name, StatusMajor, StatusMinor, IsActive, StatusScheduled
FROM  dbo.tblAssetManagement_Assets_StatusLog_Reason
ORDER BY Caption

GO
--/
-- *qryRptSrc_Std_AssetManagement_TotalTimeStackChart
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_TotalTimeStackChart]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_TotalTimeStackChart]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_TotalTimeStackChart]
AS
SELECT     dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Model AS ModelID, dbo.tblAssetManagement_Assets.[Group] AS GroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.Active, dbo.tblAssetmanagement_Assets_Categories.Name AS CategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS SubCategoryName, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeScheduledTotal AS ScheduledDowntimeHours, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.DowntimeUnscheduledTotal AS UnscheduledDowntimeHours, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.NonScheduled AS NonScheduledHours, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeEngineering AS UEngineeringHours, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeProduction AS UProductionHours, 
                      dbo.tblAssetManagement_Assets_Metrics_Daily.UptimeStandBy AS UStandByHours, dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate, 
                      YEAR(dbo.tblAssetManagement_Assets_Metrics_Daily.LogDate) AS Year, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName
FROM         dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Metrics_Daily ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Metrics_Daily.AssetUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)


GO
--/
--/

-- 59220 Audit Trail
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Assets]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Assets]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.AssetManagement.Asset' THEN tblAssetManagement_Assets.ID WHEN 'TME.Library.AssetManagement.AssetSubCategory'
                       THEN 'SubCat: ' + tblAssetManagement_Assets_SubCategories.Name + ' / Cat: ' + tblAssetManagement_Assets_Categories_1.Name WHEN 'TME.Library.AssetManagement.AssetCategory'
                       THEN 'Category: ' + tblAssetManagement_Assets_Categories.Name ELSE '' END AS AssetObject, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.AssetManagement.Asset' THEN tblAssetManagement_Assets.Description ELSE '' END AS Description, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblAssetManagement_Assets_Categories.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories AS tblAssetManagement_Assets_Categories_1 ON 
                      dbo.tblAssetManagement_Assets_SubCategories.CategoryUID = tblAssetManagement_Assets_Categories_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.AssetManagement.Asset', N'TME.Library.AssetManagement.AssetSubCategory', 
                      N'TME.Library.AssetManagement.AssetCategory'))
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC

GO
-----------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_AutoBatchConfigRule]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_AutoBatchConfigRule]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.AutoBatchConfig' THEN tblWIP_AutoBatchConfig_2.Name WHEN 'TME.Library.WIP.AutoBatchConfigPart'
                       THEN tblWIP_AutoBatchConfig_1.Name WHEN 'TME.Library.WIP.AutoBatchConfigPartValue' THEN tblWIP_AutoBatchConfig.Name ELSE '' END AS ConfigurationName,
                       CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.AutoBatchConfigPart' THEN tblWIP_AutoBatchConfig_Part_1.Name WHEN 'TME.Library.WIP.AutoBatchConfigPartValue'
                       THEN tblWIP_AutoBatchConfig_Part.Name ELSE '' END AS ConfigurationPart, dbo.tblWIP_AutoBatchConfig_PartValue.Value AS ConfigurationValue, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig RIGHT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig_Part ON dbo.tblWIP_AutoBatchConfig.UID = dbo.tblWIP_AutoBatchConfig_Part.ConfigUID RIGHT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig_PartValue ON dbo.tblWIP_AutoBatchConfig_Part.UID = dbo.tblWIP_AutoBatchConfig_PartValue.ConfigPartUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_AutoBatchConfig_PartValue.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig AS tblWIP_AutoBatchConfig_1 RIGHT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig_Part AS tblWIP_AutoBatchConfig_Part_1 ON tblWIP_AutoBatchConfig_1.UID = tblWIP_AutoBatchConfig_Part_1.ConfigUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = tblWIP_AutoBatchConfig_Part_1.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig AS tblWIP_AutoBatchConfig_2 ON dbo.tblSystem_AuditTrail.ObjectUID = tblWIP_AutoBatchConfig_2.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.AutoBatchConfig', N'TME.Library.WIP.AutoBatchConfigPart', 
                      N'TME.Library.WIP.AutoBatchConfigPartValue'))

GO

----------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_AutoSerialConfigRule]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_AutoSerialConfigRule]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.AutoSerialConfig' THEN tblWIP_AutoSerialConfig.Name WHEN 'TME.Library.WIP.AutoSerialConfigPart'
                       THEN tblWIP_AutoSerialConfig_1.Name ELSE '' END AS ConfigurationName, dbo.tblWIP_AutoSerialConfig_Part.Name AS ConfigurationPart, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblWIP_AutoSerialConfig RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig_Part LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig AS tblWIP_AutoSerialConfig_1 ON dbo.tblWIP_AutoSerialConfig_Part.ConfigUID = tblWIP_AutoSerialConfig_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_AutoSerialConfig_Part.UID ON dbo.tblWIP_AutoSerialConfig.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.AutoSerialConfigPart', N'TME.Library.WIP.AutoSerialConfig'))

GO
---------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Barcodes]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Barcodes]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblSystem_Barcode.BarcodeValue, dbo.tblSystem_Barcode.ObjectType AS AssociatedObjectType, 
                      CASE tblSystem_Barcode.ObjectType WHEN 'Inventory_Item' THEN tblInventory_Item.Name WHEN 'Inventory_ItemBatch' THEN tblInventory_Item_Batch.BatchNumber
                       + ' / ' + tblInventory_Item_1.Name WHEN 'Inventory_ItemSerialNumber' THEN tblInventory_Item_SerialNumber.SerialNumber + ' / ' + tblInventory_Item_2.Name WHEN
                       'TMESystem_Locale' THEN qrySystem_Locale.FullLocaleName WHEN 'AssetManagement_Asset' THEN tblAssetManagement_Assets.ID ELSE 'None' END AS AssociatedObject,
                       dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_Barcode.UID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblSystem_Barcode.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON dbo.tblInventory_Item_SerialNumber.ItemUID = tblInventory_Item_2.UID ON 
                      dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON tblInventory_Item_1.UID = dbo.tblInventory_Item_Batch.ItemUID ON 
                      dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblAssetManagement_Assets.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.TMESystem.Barcode')
ORDER BY AssociatedObjectType

GO
-----------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_BOM]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_BOM]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Inventory.BOM' THEN tblInventory_BOM.Name WHEN 'TME.Library.Inventory.BOMItem' THEN tblInventory_Item.Name
                       + ' / ' + tblInventory_BOM_1.Name ELSE '' END AS BOMOrItem, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Inventory.BOM' THEN tblInventory_BOM.Description WHEN 'TME.Library.Inventory.BOMItem' THEN tblInventory_Item.Description
                       + ' / ' + tblInventory_BOM_1.Description ELSE '' END AS Description, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblInventory_BOM AS tblInventory_BOM_1 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_BOM_Item.ItemUID = dbo.tblInventory_Item.UID ON 
                      tblInventory_BOM_1.UID = dbo.tblInventory_BOM_Item.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblInventory_BOM.UID = dbo.tblSystem_AuditTrail.ObjectUID ON dbo.tblInventory_BOM_Item.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Inventory.BOM', N'TME.Library.Inventory.BOMItem'))
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC

GO
-----------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_BOM_LookUp]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_BOM_LookUp]
AS
SELECT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
               CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.BOMLookUp' THEN tblWIP_BOM_LookUp.Name WHEN 'TME.Library.WIP.BOMLookUpRule' THEN tblWIP_BOM_LookUp_1.Name
                ELSE '' END AS BOMLookUp, CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.BOMLookUpRule' THEN 'True' ELSE 'False' END AS IsLookUpRule, 
               CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.BOMLookUpRule' THEN tblInventory_BOM.Name ELSE '' END AS CurrentBOM, 
               CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.BOMLookUpRule' THEN tblInventory_Item.Name ELSE '' END AS CurrentInventoryItem, 
               dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
               dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM  dbo.tblWIP_BOM_LookUp RIGHT OUTER JOIN
               dbo.tblSystem_AuditTrail LEFT OUTER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
               dbo.tblWIP_BOM_LookUp_Rule LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblWIP_BOM_LookUp_Rule.InventoryItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblInventory_BOM ON dbo.tblWIP_BOM_LookUp_Rule.BOMUID = dbo.tblInventory_BOM.UID LEFT OUTER JOIN
               dbo.tblWIP_BOM_LookUp AS tblWIP_BOM_LookUp_1 ON dbo.tblWIP_BOM_LookUp_Rule.LookUpUID = tblWIP_BOM_LookUp_1.UID ON 
               dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_BOM_LookUp_Rule.UID ON dbo.tblWIP_BOM_LookUp.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.BOMLookUp', N'TME.Library.WIP.BOMLookUpRule'))

GO
-----------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Contacts_and_Companies]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Contacts_and_Companies]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Contacts.Company' THEN tblContacts_Companies.ID WHEN 'TME.Library.Contacts.Contact' THEN tblContacts_Contacts.UserID
                       ELSE '' END AS UserCompanyID, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Contacts.Company' THEN tblContacts_Companies.Name WHEN 'TME.Library.Contacts.Contact' THEN tblContacts_Contacts.FullName
                       ELSE '' END AS UserCompanyName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblContacts_Contacts.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Contacts.Company', N'TME.Library.Contacts.Contact'))

GO
-----------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_DataCollections]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_DataCollections]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblSystem_Attribute_Collection.Name AS DataCollectionName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_Attribute_Collection.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.TMESystem.AttributeCollection')

GO
-------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Groups]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Groups]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Contacts.ContactGroup' THEN tblContacts_Contact_Group_1.Name WHEN 'TME.Library.Contacts.ContactGroupMember'
                       THEN tblContacts_Contacts.FullName + ' / ' + tblContacts_Contact_Group.Name ELSE '' END AS GroupNameOrMember, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Contacts.ContactGroup' THEN tblContacts_Contact_Group_1.Description WHEN 'TME.Library.Contacts.ContactGroupMember'
                       THEN tblContacts_Contact_Group.Description ELSE '' END AS GroupDescription, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_GroupMember LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupMember.GroupUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblContacts_Contact_GroupMember.ContactUID = dbo.tblContacts_Contacts.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Contact_GroupMember.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group AS tblContacts_Contact_Group_1 ON dbo.tblSystem_AuditTrail.ObjectUID = tblContacts_Contact_Group_1.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Contacts.ContactGroup', N'TME.Library.Contacts.ContactGroupMember'))
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC

GO

----------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_HoldCodes_HoldReleaseCodes]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_HoldCodes_HoldReleaseCodes]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.Objecttype WHEN 'TME.Library.WIP.HoldReason' THEN tblWIP_HoldReason.Value WHEN 'TME.Library.WIP.HoldReleaseCode' THEN tblWIP_HoldReleaseCode.Value
                       ELSE '' END AS Value, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblWIP_HoldReleaseCode ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_HoldReleaseCode.UID LEFT OUTER JOIN
                      dbo.tblWIP_HoldReason ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_HoldReason.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.HoldReason', N'TME.Library.WIP.HoldReleaseCode'))

GO

--------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Inventory.Item' THEN tblInventory_Item.Name WHEN 'TME.Library.Inventory.ItemSubCategory' THEN 'SubCat: '
                       + tblInventory_Item_SubCategory.Name + ' / Cat: ' + tblInventory_Item_Category_1.Name WHEN 'TME.Library.Inventory.ItemCategory' THEN 'Category: ' + tblInventory_Item_Category.Name
                       ELSE '' END AS Name, CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Inventory.Item' THEN tblInventory_Item.Description ELSE '' END AS Description, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblInventory_Item_Category RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblInventory_Item_Category.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category AS tblInventory_Item_Category_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON tblInventory_Item_Category_1.UID = dbo.tblInventory_Item_SubCategory.CategoryUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Inventory.ItemCategory', N'TME.Library.Inventory.ItemSubCategory', N'TME.Library.Inventory.Item'))
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC

GO
--------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_BatchNumber]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_BatchNumber]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblInventory_Item.Name AS ItemName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_Batch.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.Inventory.ItemBatch')

GO
-----------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Conversion]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Conversion]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.objecttype = 'TME.Library.Inventory.ItemConversion' THEN tblInventory_Item_Conversion.Name ELSE tblInventory_Item_Conversion_1.Name
                       END AS ConversionName, dbo.tblInventory_Item.Name AS ConversionItem, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblInventory_Item_Conversion RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion_Item ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_Conversion_Item.UID ON 
                      dbo.tblInventory_Item_Conversion.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Conversion AS tblInventory_Item_Conversion_1 ON dbo.tblInventory_Item.UID = tblInventory_Item_Conversion_1.ItemUID ON 
                      dbo.tblInventory_Item_Conversion_Item.ConversionUID = tblInventory_Item_Conversion_1.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Inventory.ItemConversion', N'TME.Library.Inventory.ItemConversionItem'))

GO
-------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Receiving]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Receiving]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.ObjectType = 'TME.Library.Inventory.Receipt' THEN tblInventory_Receipt_1.ID ELSE tblInventory_Receipt.ID END AS ReceiptID, 
                      dbo.tblInventory_Item.Name AS ReceiptItem, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt_Item ON dbo.tblInventory_Item.UID = dbo.tblInventory_Receipt_Item.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Receipt ON dbo.tblInventory_Receipt_Item.ReceiptUID = dbo.tblInventory_Receipt.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Receipt_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Receipt AS tblInventory_Receipt_1 ON dbo.tblSystem_AuditTrail.ObjectUID = tblInventory_Receipt_1.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Inventory.Receipt', N'TME.Library.Inventory.ReceiptItem'))

GO
-----------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_ScrapGroupAndCode]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_ScrapGroupAndCode]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.objecttype = 'TME.Library.Inventory.ScrapCode' THEN tblInventory_ScrapGroup.Name ELSE tblInventory_ScrapGroup_1.Name END AS
                       ScrapGroup, dbo.tblInventory_ScrapCode.Name AS ScrapCode, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblInventory_ScrapGroup AS tblInventory_ScrapGroup_1 ON dbo.tblSystem_AuditTrail.ObjectUID = tblInventory_ScrapGroup_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_ScrapCode ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_ScrapCode.UID RIGHT OUTER JOIN
                      dbo.tblInventory_ScrapGroupCode LEFT OUTER JOIN
                      dbo.tblInventory_ScrapGroup ON dbo.tblInventory_ScrapGroupCode.GroupUID = dbo.tblInventory_ScrapGroup.UID ON 
                      dbo.tblInventory_ScrapCode.UID = dbo.tblInventory_ScrapGroupCode.CodeUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Inventory.ScrapCode', N'TME.Library.Inventory.ScrapGroup'))

GO
-------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_SerialNumber]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_SerialNumber]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item.Name AS ItemName, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch INNER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Item_SerialNumber.BatchNumberUID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.Inventory.ItemSerialNumber')

GO
--------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Supplier]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_Supplier]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblContacts_Companies.Name AS SupplierName, dbo.tblInventory_Item.Name AS ItemName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_Supplier.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.Inventory.ItemSupplier')

GO
--------------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_WIP_Process]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Inventory_WIP_Process]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblInventory_Item.Name AS ItemName, 
                      dbo.tblWIP_Process.Name AS ProcessName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail INNER JOIN
                      dbo.tblInventory_Item_WIPProcess ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_WIPProcess.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.Inventory.ItemWIPProcess')

GO
-------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Locale]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Locale]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblSystem_Locale.Name AS LocaleName, 
                      dbo.tblSystem_Locale.Type AS LocaleType, dbo.qrySystem_Locale.FullLocaleName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblSystem_Locale ON dbo.qrySystem_Locale.UID = dbo.tblSystem_Locale.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblSystem_Locale.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.TMESystem.Locale')

GO
-----------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Notifications]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Notifications]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblSystem_Email_Notification.Name AS NotificationName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_Email_Notification ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_Email_Notification.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.TMESystem.EmailNotification')

GO
--------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Report_Datasources]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Report_Datasources]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.objecttype = 'TME.Library.Report.DataSourceColumn' THEN tblReports_Datasource.Name ELSE tblReports_Datasource_1.Name END
                       AS DatasourceName, dbo.tblReports_DataSource_Column.ColumnName AS DatasourceColumnName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblReports_DataSource RIGHT OUTER JOIN
                      dbo.tblReports_DataSource_Column ON dbo.tblReports_DataSource.UID = dbo.tblReports_DataSource_Column.DataSourceUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_DataSource_Column.UID LEFT OUTER JOIN
                      dbo.tblReports_DataSource AS tblReports_DataSource_1 ON dbo.tblSystem_AuditTrail.ObjectUID = tblReports_DataSource_1.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Report.DataSource', N'TME.Library.Report.DataSourceColumn'))

GO
-------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Reports]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Reports]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.Report.Report' THEN tblReports_Report.Name WHEN 'TME.Library.Report.ReportColumn' THEN tblReports_Report_1.Name
                       WHEN 'TME.Library.Report.ReportGroup' THEN tblReports_Report_2.Name WHEN 'TME.Library.Report.ReportParameter' THEN tblReports_Report_3.Name WHEN 'TME.Library.Report.ReportSort'
                       THEN tblReports_Report_4.Name ELSE tblReports_Report_Subscriptions.Name END AS ReportOrSubscriptionName, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblReports_Report_Subscriptions ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report_Subscriptions.UID LEFT OUTER JOIN
                      dbo.tblReports_Report_Sort LEFT OUTER JOIN
                      dbo.tblReports_Report AS tblReports_Report_4 ON dbo.tblReports_Report_Sort.ReportUID = tblReports_Report_4.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report_Sort.UID LEFT OUTER JOIN
                      dbo.tblReports_Report AS tblReports_Report_3 RIGHT OUTER JOIN
                      dbo.tblReports_Report_Parameters ON tblReports_Report_3.UID = dbo.tblReports_Report_Parameters.ReportUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report_Parameters.UID LEFT OUTER JOIN
                      dbo.tblReports_Report AS tblReports_Report_2 RIGHT OUTER JOIN
                      dbo.tblReports_Report_Groups ON tblReports_Report_2.UID = dbo.tblReports_Report_Groups.ReportUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report_Groups.UID LEFT OUTER JOIN
                      dbo.tblReports_Report ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report.UID LEFT OUTER JOIN
                      dbo.tblReports_Report AS tblReports_Report_1 RIGHT OUTER JOIN
                      dbo.tblReports_Report_Columns ON tblReports_Report_1.UID = dbo.tblReports_Report_Columns.ReportUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblReports_Report_Columns.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.Report.ReportSubscription', N'TME.Library.Report.ReportSort', N'TME.Library.Report.ReportParameter', 
                      N'TME.Library.Report.ReportGroup', N'TME.Library.Report.ReportColumn', N'TME.Library.Report.Report'))

GO
--------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_SignOffConfig]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_SignOffConfig]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS Stepname, 'tblWIP_Operation' + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation_Step INNER JOIN
                      dbo.tblSystem_Signoff_Config ON dbo.tblWIP_Operation_Step.SignoffConfigUID = dbo.tblSystem_Signoff_Config.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblSystem_Signoff_Config.UID = dbo.tblSystem_AuditTrail.ObjectUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.TMESystem.SignoffConfig')

GO
------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Variable_Groups]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_Variable_Groups]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.TMESystem.AttributeGroup' THEN tblSystem_Attribute_Group.Name WHEN 'TME.Library.TMESystem.AttributeGroupItem'
                       THEN tblSystem_Attribute_Group_1.Name WHEN 'TME.Library.TMESystem.AttributeGroupItemValue' THEN tblSystem_Attribute_Group_2.Name ELSE '' END AS AttributeGroup,
                       CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.TMESystem.AttributeGroupItem' THEN tblSystem_Attribute_GroupItem_1.Name WHEN 'TME.Library.TMESystem.AttributeGroupItemValue'
                       THEN tblSystem_Attribute_GroupItem.Name ELSE '' END AS AttributeGroupItem, dbo.tblSystem_Attribute_GroupItemValue.Value AS AttributeListValue, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItemValue LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 ON dbo.tblSystem_Attribute_GroupItem.GroupUID = tblSystem_Attribute_Group_2.UID ON 
                      dbo.tblSystem_Attribute_GroupItemValue.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_Attribute_GroupItemValue.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_Attribute_Group.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_1 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_1 ON tblSystem_Attribute_Group_1.UID = tblSystem_Attribute_GroupItem_1.GroupUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = tblSystem_Attribute_GroupItem_1.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.TMESystem.AttributeGroupItem', N'TME.Library.TMESystem.AttributeGroup', 
                      N'TME.Library.TMESystem.AttributeGroupItemValue'))
ORDER BY dbo.tblSystem_AuditTrail.ObjectType

GO
------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Future_Holds]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Future_Holds]
AS
SELECT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
               CASE WHEN WorkOrderUID = '00000000-0000-0000-0000-000000000000' THEN 'Proc: ' + dbo.tblWIP_Process.Name + ' / Rev ' + dbo.tblWIP_Process_Revision.Revision +
                '; Op: ' + dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision ELSE Number END AS FutureHoldPlacement, 
               dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblWIP_FutureHold.UID, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
               dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM  dbo.tblWIP_HoldReason RIGHT OUTER JOIN
               dbo.tblWIP_FutureHold RIGHT OUTER JOIN
               dbo.tblSystem_AuditTrail LEFT OUTER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
               dbo.tblWIP_FutureHold.UID = dbo.tblSystem_AuditTrail.ObjectUID ON dbo.tblWIP_HoldReason.UID = dbo.tblWIP_FutureHold.HoldReasonUID LEFT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID ON 
               dbo.tblWIP_Process_OperationFlow.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_FutureHold.FlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_FutureHold.WorkOrderUID = dbo.tblWIP_WorkOrder.UID
WHERE (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.FutureHold')

GO
-------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation]
AS
SELECT TOP (100) PERCENT dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
               CASE tblSystem_AuditTrail.objecttype WHEN 'TME.Library.WIP.Operation' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationRevision' THEN tblWIP_Operation_1.Name
                + ' / Rev ' + tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationCategory' THEN tblWIP_Operation_Category.Name WHEN 'TME.Library.WIP.OperationSubCategory'
                THEN tblWIP_Operation_SubCategory.OperationSubCategoryName WHEN 'TME.Library.WIP.OperationWorkArea' THEN tblWIP_Operation_WorkArea.WorkAreaName
                ELSE '' END AS OperationObject, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, 
               dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
               dbo.tblSystem_AuditSummary.DeletedByUser
FROM  dbo.tblWIP_Operation_WorkArea RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation AS tblWIP_Operation_1 ON dbo.tblWIP_Operation_Revision.OperationUID = tblWIP_Operation_1.UID RIGHT OUTER JOIN
               dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Revision.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
               dbo.tblWIP_Operation_WorkArea.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_SubCategory ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Category.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation.UID LEFT OUTER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID
WHERE (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.Operation', N'TME.Library.WIP.OperationRevision', N'TME.Library.WIP.OperationCategory', 
               N'TME.Library.WIP.OperationSubCategory', N'TME.Library.WIP.OperationWorkArea'))
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Alarm]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Alarm]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
                      dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Process RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision_OperationAlarm ON 
                      dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_Revision_OperationAlarm.ProcessRevUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Process_Revision_OperationAlarm.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.ProcessRevisionOperationAlarm')

GO

------------------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.OperationStep')

GO
------------------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Assets]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Assets]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepAsset' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.OperationStepAssetAsset'
                       THEN tblWIP_Operation_Step_1.Name WHEN 'TME.Library.WIP.OperationStepAssetRecipe' THEN tblWIP_Operation_Step_2.Name WHEN 'TME.Library.WIP.OperationStepAssetTool  tblWIP_Operation_Step_3.Name WHEN TME.Library.WIP.OperationStepAssetWorkTrackingProcess'
                       THEN tblWIP_Operation_Step_4.Name ELSE '' END AS StepName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepAsset' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationStepAssetAsset'
                       THEN tblWIP_Operation_1.Name WHEN 'TME.Library.WIP.OperationStepAssetRecipe' THEN tblWIP_Operation_2.Name WHEN 'TME.Library.WIP.OperationStepAssetTool  tblWIP_Operation_3.Name WHEN TME.Library.WIP.OperationStepAssetWorkTrackingProcess'
                       THEN tblWIP_Operation_4.Name ELSE '' END AS OperationName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepAsset' THEN tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationStepAssetAsset'
                       THEN tblWIP_Operation_Revision_1.Revision WHEN 'TME.Library.WIP.OperationStepAssetRecipe' THEN tblWIP_Operation_Revision_2.Revision WHEN 'TME.Library.WIP.OperationStepAssetTool  tblWIP_Operation_Revision_3.Revision WHEN TME.Library.WIP.OperationStepAssetWorkTrackingProcess'
                       THEN tblWIP_Operation_Revision_4.Revision ELSE '' END AS OperationRevision, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepAsset' THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision WHEN
                       'TME.Library.WIP.OperationStepAssetAsset' THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision WHEN 'TME.Library.WIP.OperationStepAssetRecipe'
                       THEN tblWIP_Operation_2.Name + ' / Rev ' + tblWIP_Operation_Revision_2.Revision WHEN 'TME.Library.WIP.OperationStepAssetTool tblWIP_Operation_3.Name' + ' / Rev '
                       + 'tblWIP_Operation_Revision_3.Revision WHEN TME.Library.WIP.OperationStepAssetWorkTrackingProcess' THEN tblWIP_Operation_4.Name + ' / Rev ' + tblWIP_Operation_Revision_4.Revision
                       ELSE '' END AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset RIGHT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset AS tblWIP_Operation_Step_Asset_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Asset RIGHT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_2 ON tblWIP_Operation_2.UID = tblWIP_Operation_Revision_2.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset AS tblWIP_Operation_Step_Asset_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_4 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset AS tblWIP_Operation_Step_Asset_4 ON tblWIP_Operation_Step_4.UID = tblWIP_Operation_Step_Asset_4.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_4 LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_4 ON tblWIP_Operation_Revision_4.OperationUID = tblWIP_Operation_4.UID ON 
                      tblWIP_Operation_Step_4.OperationRevisionUID = tblWIP_Operation_Revision_4.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess ON 
                      tblWIP_Operation_Step_Asset_4.UID = dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.StepAssetUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_3 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset AS tblWIP_Operation_Step_Asset_3 ON tblWIP_Operation_Step_3.UID = tblWIP_Operation_Step_Asset_3.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_3 LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_3 ON tblWIP_Operation_Revision_3.OperationUID = tblWIP_Operation_3.UID ON 
                      tblWIP_Operation_Step_3.OperationRevisionUID = tblWIP_Operation_Revision_3.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Tool ON tblWIP_Operation_Step_Asset_3.UID = dbo.tblWIP_Operation_Step_Asset_Tool.StepAssetUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_Asset_Tool.UID ON 
                      dbo.tblWIP_Operation_Step_Asset_Recipe.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      tblWIP_Operation_Step_Asset_2.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID ON 
                      tblWIP_Operation_Step_2.UID = tblWIP_Operation_Step_Asset_2.StepUID ON tblWIP_Operation_Revision_2.UID = tblWIP_Operation_Step_2.OperationRevisionUID ON
                       dbo.tblWIP_Operation_Step_Asset_Asset.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      tblWIP_Operation_Step_Asset_1.UID = dbo.tblWIP_Operation_Step_Asset_Asset.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON tblWIP_Operation_Step_Asset_1.StepUID = tblWIP_Operation_Step_1.UID ON 
                      tblWIP_Operation_Revision_1.UID = tblWIP_Operation_Step_1.OperationRevisionUID ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Asset.StepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.OperationStepAsset', N'TME.Library.WIP.OperationStepAssetAsset', 
                      N'TME.Library.WIP.OperationStepAssetWorkTrackingProcess', N'TME.Library.WIP.OperationStepAssetRecipe', N'TME.Library.WIP.OperationStepAssetTool'))

GO
------------------------------------------

DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Condition]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Condition]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Condition LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Condition.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_Condition.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.OperationStepCondition')

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Consume]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Consume]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepConsume' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.OperationStepConsumeBOM'
                       THEN tblWIP_Operation_Step_1.Name ELSE '' END AS StepName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepConsume' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationStepConsumeBOM'
                       THEN tblWIP_Operation_1.Name ELSE '' END AS OperationName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepConsume' THEN tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationStepConsumeBOM'
                       THEN tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationRevision, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepConsume' THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision
                       WHEN 'TME.Library.WIP.OperationStepConsumeBOM' THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationAndRevision,
                       dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume AS tblWIP_Operation_Step_Consume_1 LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON tblWIP_Operation_Step_Consume_1.StepUID = tblWIP_Operation_Step_1.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume_BOM ON 
                      tblWIP_Operation_Step_Consume_1.UID = dbo.tblWIP_Operation_Step_Consume_BOM.StepConsumeUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_Consume.UID ON 
                      dbo.tblWIP_Operation_Step_Consume_BOM.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      tblWIP_Operation_Revision_1.UID = tblWIP_Operation_Step_1.OperationRevisionUID CROSS JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.OperationStepConsumeBOM', N'TME.Library.WIP.OperationStepConsume'))

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Convert]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Convert]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Convert LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Convert.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_Convert.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.OperationStepConvert')

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Data_Collection]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Data_Collection]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepCollectDataWO' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.OperationStepCollectDataBatch'
                       THEN tblWIP_Operation_Step_1.Name WHEN 'TME.Library.WIP.OperationStepCollectDataSN' THEN tblWIP_Operation_Step_2.Name ELSE '' END AS StepName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepCollectDataWO' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationStepCollectDataBatch'
                       THEN tblWIP_Operation_1.Name WHEN 'TME.Library.WIP.OperationStepCollectDataSN' THEN tblWIP_Operation_2.Name ELSE '' END AS OperationName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepCollectDataWO' THEN tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationStepCollectDataBatch'
                       THEN tblWIP_Operation_Revision_1.Revision WHEN 'TME.Library.WIP.OperationStepCollectDataSN' THEN tblWIP_Operation_Revision_2.Revision ELSE '' END AS OperationRevision,
                       CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepCollectDataWO' THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision
                       WHEN 'TME.Library.WIP.OperationStepCollectDataBatch' THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision WHEN 'TME.Library.WIP.OperationStepCollectDataSN'
                       THEN tblWIP_Operation_2.Name + ' / Rev ' + tblWIP_Operation_Revision_2.Revision ELSE '' END AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation AS tblWIP_Operation_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_2 ON tblWIP_Operation_2.UID = tblWIP_Operation_Revision_2.OperationUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_2 ON dbo.tblWIP_Operation_Step_CollectDataSN.StepUID = tblWIP_Operation_Step_2.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_CollectDataSN.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = tblWIP_Operation_Step_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataBatch.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataWO.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_CollectDataWO.StepUID = dbo.tblWIP_Operation_Step.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID ON 
                      tblWIP_Operation_Step_1.OperationRevisionUID = tblWIP_Operation_Revision_1.UID ON 
                      tblWIP_Operation_Revision_2.UID = tblWIP_Operation_Step_2.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.OperationStepCollectDataWO', N'TME.Library.WIP.OperationStepCollectDataSN', 
                      N'TME.Library.WIP.OperationStepCollectDataBatch'))

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Inspect]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Inspect]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Inspect LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Inspect.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_Inspect.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.OperationStepInspect')

GO
-------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Message]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_Message]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepMessage' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.OperationStepMessageItem'
                       THEN tblWIP_Operation_Step_1.Name ELSE '' END AS StepName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepMessage' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationStepMessageItem'
                       THEN tblWIP_Operation_1.Name ELSE '' END AS OperationName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepMessage' THEN tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationStepMessageItem'
                       THEN tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationRevision, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepMessage' THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision
                       WHEN 'TME.Library.WIP.OperationStepMessageItem' THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationAndRevision,
                       dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_Message.StepUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_Message.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message AS tblWIP_Operation_Step_Message_1 LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON tblWIP_Operation_Step_Message_1.StepUID = tblWIP_Operation_Step_1.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID ON 
                      tblWIP_Operation_Step_1.OperationRevisionUID = tblWIP_Operation_Revision_1.UID ON 
                      dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID = tblWIP_Operation_Step_Message_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_Message_Item.UID ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.OperationStepMessageItem', N'TME.Library.WIP.OperationStepMessage'))

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_SetAttributes]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_SetAttributes]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepSetAttributeManual' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.OperationStepSetAttributeAuto'
                       THEN tblWIP_Operation_Step_1.Name ELSE '' END AS StepName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepSetAttributeManual' THEN tblWIP_Operation.Name WHEN 'TME.Library.WIP.OperationStepSetAttributeAuto'
                       THEN tblWIP_Operation_1.Name ELSE '' END AS OperationName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepSetAttributeManual' THEN tblWIP_Operation_Revision.Revision WHEN 'TME.Library.WIP.OperationStepSetAttributeAuto'
                       THEN tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationRevision, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.OperationStepSetAttributeManual' THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision
                       WHEN 'TME.Library.WIP.OperationStepSetAttributeAuto' THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision ELSE '' END AS OperationAndRevision,
                       dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeAuto LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID = tblWIP_Operation_Step_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_SetAttributeAuto.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_SetAttributeManual.StepUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      tblWIP_Operation_Revision_1.UID = tblWIP_Operation_Step_1.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.OperationStepSetAttributeManual', N'TME.Library.WIP.OperationStepSetAttributeAuto'))

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_ToInventory]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Operation_Step_ToInventory]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_ToInventory LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_ToInventory.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_Operation_Step_ToInventory.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'TME.Library.WIP.OperationStepToInventory')

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Process]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Process]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.ProcessRevision' THEN tblWIP_Process_2.Name WHEN 'TME.Library.WIP.ProcessOperationFlow' THEN
                       tblWIP_Process_1.Name WHEN 'TME.Library.WIP.Process' THEN tblWIP_Process.Name ELSE '' END AS ProcessName, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.ProcessRevision' THEN tblWIP_Process_Revision.Revision WHEN 'TME.Library.WIP.ProcessOperationFlow'
                       THEN tblWIP_Process_Revision_1.Revision ELSE '' END AS ProcessRevision, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.ProcessRevision' THEN tblWIP_Process_2.Name + ' / Rev ' + tblWIP_Process_Revision.Revision WHEN
                       'TME.Library.WIP.ProcessOperationFlow' THEN tblWIP_Process_1.Name + ' / Rev ' + tblWIP_Process_Revision_1.Revision WHEN 'TME.Library.WIP.Process' THEN tblWIP_Process.Name
                       ELSE '' END AS ProcessAndRevision, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_Process_Revision LEFT OUTER JOIN
                      dbo.tblWIP_Process AS tblWIP_Process_2 ON dbo.tblWIP_Process_Revision.ProcessUID = tblWIP_Process_2.UID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Process.UID LEFT OUTER JOIN
                      dbo.tblWIP_Process AS tblWIP_Process_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision AS tblWIP_Process_Revision_1 ON tblWIP_Process_1.UID = tblWIP_Process_Revision_1.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow ON tblWIP_Process_Revision_1.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_Process_OperationFlow.UID ON 
                      dbo.tblWIP_Process_Revision.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.ProcessRevision', N'TME.Library.WIP.ProcessOperationFlow', N'TME.Library.WIP.Process'))

GO
------------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Work_Orders]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WIP_Work_Orders]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.WorkOrderStep' THEN tblWIP_WorkOrder_1.Number WHEN 'TME.Library.WIP.WorkOrderEvent' THEN tblWIP_WorkOrder_2.Number
                       WHEN 'TME.Library.WIP.WorkOrderBatchInstance' THEN tblWIP_WorkOrder_3.Number WHEN 'TME.Library.WIP.WorkOrder' THEN tblWIP_WorkOrder.Number ELSE ''
                       END AS WIPWONumber, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.WorkOrderStep' THEN tblWIP_Operation_Step.Name WHEN 'TME.Library.WIP.WorkOrderEvent' THEN
                       tblWIP_Operation_Step_1.Name ELSE '' END AS StepName, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWIP_WorkOrder.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_3 ON dbo.tblWIP_WorkOrder_BatchInstance.WorkOrderUID = tblWIP_WorkOrder_3.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_WorkOrder_BatchInstance.UID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step ON tblWIP_Operation_Step_1.UID = dbo.tblWIP_WorkOrder_Step.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_2 ON dbo.tblWIP_WorkOrder_Step.WorkOrderUID = tblWIP_WorkOrder_2.UID ON 
                      dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_1 RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step AS tblWIP_WorkOrder_Step_1 LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON tblWIP_WorkOrder_Step_1.StepUID = dbo.tblWIP_Operation_Step.UID ON 
                      tblWIP_WorkOrder_1.UID = tblWIP_WorkOrder_Step_1.WorkOrderUID ON dbo.tblSystem_AuditTrail.ObjectUID = tblWIP_WorkOrder_Step_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WIP.WorkOrderStep', N'TME.Library.WIP.WorkOrderEvent', N'TME.Library.WIP.WorkOrderBatchInstance', 
                      N'TME.Library.WIP.WorkOrder')) AND 
                      (CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WIP.WorkOrderStep' THEN tblWIP_WorkOrder_1.Number WHEN 'TME.Library.WIP.WorkOrderEvent' THEN
                       tblWIP_WorkOrder_2.Number WHEN 'TME.Library.WIP.WorkOrderBatchInstance' THEN tblWIP_WorkOrder_3.Number WHEN 'TME.Library.WIP.WorkOrder' THEN tblWIP_WorkOrder.Number
                       ELSE '' END IS NOT NULL)

GO

-----------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Operations]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Operations]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WorkTracking.Operation' THEN tblWorkTracking_Operation.Name WHEN 'TME.Library.WorkTracking.OperationRevision'
                       THEN tblWorkTracking_Operation_1.Name WHEN 'TME.Library.WorkTracking.OperationStep' THEN tblWorkTracking_Operation_2.Name ELSE '' END AS OperationName,
                       CASE tblSystem_AuditTrail.ObjectType WHEN 'TME.Library.WorkTracking.OperationRevision' THEN tblWorkTracking_Operation_Revision.Revision WHEN 'TME.Library.WorkTracking.OperationStep'
                       THEN tblWorkTracking_Operation_Revision_1.Revision ELSE '' END AS OperationRevision, dbo.tblWorkTracking_Operation_Step.Name AS OperationStepName, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Operation RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWorkTracking_Operation.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision AS tblWorkTracking_Operation_Revision_1 LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation AS tblWorkTracking_Operation_2 ON 
                      tblWorkTracking_Operation_Revision_1.OperationUID = tblWorkTracking_Operation_2.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Step ON tblWorkTracking_Operation_Revision_1.UID = dbo.tblWorkTracking_Operation_Step.OperationRevisionUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation AS tblWorkTracking_Operation_1 ON dbo.tblWorkTracking_Operation_Revision.OperationUID = tblWorkTracking_Operation_1.UID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_Operation_Revision.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WorkTracking.Operation', N'TME.Library.WorkTracking.OperationRevision', 
                      N'TME.Library.WorkTracking.OperationStep'))

GO
-----------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Processes]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Processes]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.ObjectType = 'TME.Library.WorkTracking.Process' THEN tblWorkTracking_Process.Name ELSE tblWorkTracking_Process_1.Name +
                       ' / Rev ' + tblWorkTracking_Process_Revision.Revision END AS ProcessName, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblWorkTracking_Process RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 ON dbo.tblWorkTracking_Process_Revision.ProcessUID = tblWorkTracking_Process_1.UID ON 
                      dbo.tblWorkTracking_Process.UID = dbo.tblSystem_AuditTrail.ObjectUID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WorkTracking.Process', N'TME.Library.WorkTracking.ProcessRevision'))

GO
-----------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_ScheduledWork]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_ScheduledWork]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.ObjectType = 'TME.Library.WorkTracking.ScheduledWork' THEN tblWorkTracking_ScheduledWork.ScheduledWOID ELSE tblWorkTracking_ScheduledWork_1.ScheduledWOID
                       END AS ScheduledWOID, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, 
                      dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser, dbo.tblSystem_AuditTrail.ColumnName, 
                      dbo.tblSystem_AuditTrail.Message
FROM         dbo.tblWorkTracking_ScheduledWork AS tblWorkTracking_ScheduledWork_1 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork_Step ON 
                      tblWorkTracking_ScheduledWork_1.UID = dbo.tblWorkTracking_ScheduledWork_Step.ScheduledWorkUID RIGHT OUTER JOIN
                      dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID ON 
                      dbo.tblWorkTracking_ScheduledWork_Step.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_ScheduledWork.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WorkTracking.ScheduledWork', N'TME.Library.WorkTracking.ScheduledWorkStep'))

GO

---------------------------------------------
DROP VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Work_Orders]
GO

/****** Object:  View [dbo].[qryRptSrc_Std_Audit_Trail_WT_Work_Orders]    Script Date: 10/27/2015 11:46:46 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Audit_Trail_WT_Work_Orders]
AS
SELECT     dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblSystem_AuditTrail.Username, dbo.tblSystem_AuditTrail.ObjectType, 
                      CASE WHEN tblSystem_AuditTrail.ObjectType = 'TME.Library.WorkTracking.WorkOrder' THEN tblWorkTracking_WorkOrder.ID ELSE tblWorkTracking_WorkOrder_1.ID END
                       AS WorkOrderID, dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.DeletedOnDateTimeUTC, dbo.tblSystem_AuditSummary.DeletedByUser
FROM         dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Step ON tblWorkTracking_WorkOrder_1.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID ON 
                      dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_WorkOrder_Step.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_WorkOrder.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType IN (N'TME.Library.WorkTracking.WorkOrderStep', N'TME.Library.WorkTracking.WorkOrder')) AND 
                      (CASE WHEN tblSystem_AuditTrail.ObjectType = 'TME.Library.WorkTracking.WorkOrder' THEN tblWorkTracking_WorkOrder.ID ELSE tblWorkTracking_WorkOrder_1.ID END
                       IS NOT NULL)

GO
--/

-- ** Check In - Out
-- qryRptSrc_Std_CheckInCheckOut
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut]
AS
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblCheckInOut_Transaction_Asset.ConditionOut, dbo.tblCheckInOut_Transaction_Asset.CommentsOut, dbo.tblCheckInOut_Transaction_Asset.Rate, 
                      dbo.tblCheckInOut_Transaction_Asset.RateInterval, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, 
                      tblCheckInOut_Transaction_1.Type AS TransactionType, tblCheckInOut_Transaction_1.LogDateTimeUTC AS DateOut, 
                      tblCheckInOut_Transaction_1.Number AS TransNumberOut, tblCheckInOut_Transaction_1.Status AS StatusOut, 
                      dbo.tblContacts_Contacts.UserID AS CheckedOutToUserID, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC AS ActReturnDate, 
                      dbo.tblCheckInOut_Transaction_Asset.Status AS StatusOfAsset, dbo.tblContacts_Contacts.FullName AS CheckedOutToFullName, 
                      dbo.tblContacts_Department.Name AS UserDepartment, dbo.tblContacts_Contacts.Division AS UserDivision, 
                      dbo.tblContacts_Contacts.[Group] AS UserGroup
FROM         dbo.tblContacts_Department RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblContacts_Department.UID = dbo.tblContacts_Contacts.DepartmentUID RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 ON 
                      dbo.tblContacts_Contacts.UID = tblCheckInOut_Transaction_1.CheckedToUserUID RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction_Asset ON 
                      tblCheckInOut_Transaction_1.UID = dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction]
AS
SELECT     MAX(dbo.tblCheckInOut_Transaction.LogDateTimeUTC) AS CheckInDate, dbo.tblAssetManagement_Assets.ID
FROM         dbo.tblCheckInOut_Transaction INNER JOIN
                      dbo.tblCheckInOut_Transaction_Asset ON 
                      dbo.tblCheckInOut_Transaction.UID = dbo.tblCheckInOut_Transaction_Asset.TransactionInUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID
GROUP BY dbo.tblAssetManagement_Assets.ID, dbo.tblCheckInOut_Transaction.Type
HAVING      (dbo.tblCheckInOut_Transaction.Type = N'In')


GO
--/
-- qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID, MAX(dbo.tblCheckInOut_Transaction.LogDateTimeUTC) AS CheckOutDate
FROM         dbo.tblCheckInOut_Transaction_Asset RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID
GROUP BY dbo.tblAssetManagement_Assets.ID, dbo.tblCheckInOut_Transaction.Type
HAVING      (dbo.tblCheckInOut_Transaction.Type = N'Out')
ORDER BY dbo.tblAssetManagement_Assets.ID, MAX(dbo.tblCheckInOut_Transaction.LogDateTimeUTC)



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_CurrentTransaction
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentTransaction]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentTransaction]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_CurrentTransaction]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.[Group] AS GroupName, dbo.tblAssetManagement_Assets.SubGroup AS SubGroupName, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      dbo.tblCheckInOut_Transaction_Asset.Status, dbo.qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate, 
                      dbo.tblContacts_Contacts.FullName AS CheckOutUser, dbo.tblCheckInOut_Transaction_Asset.ConditionOut, 
                      CASE WHEN CheckInDate < qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate THEN '' ELSE qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction.CheckInDate
                       END AS CheckInDate, 
                      CASE WHEN CheckInDate < qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate THEN '' ELSE tblContacts_Contacts_1.FullName END
                       AS CheckInUser, dbo.tblCheckInOut_Transaction_Asset.ConditionIn, dbo.qrySystem_Locale.FullLocaleName AS LocationFromTo
FROM         dbo.tblCheckInOut_Transaction INNER JOIN
                      dbo.qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.ID = dbo.tblAssetManagement_Assets.ID ON 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC = dbo.qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate INNER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblCheckInOut_Transaction.CheckedToUserUID = dbo.tblContacts_Contacts.UID INNER JOIN
                      dbo.qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction ON 
                      dbo.tblAssetManagement_Assets.ID = dbo.qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction.ID INNER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 ON 
                      dbo.qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction.CheckInDate = tblCheckInOut_Transaction_1.LogDateTimeUTC INNER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON tblCheckInOut_Transaction_1.CheckedToUserUID = tblContacts_Contacts_1.UID INNER JOIN
                      dbo.tblCheckInOut_Transaction_Asset ON dbo.tblCheckInOut_Transaction.UID = dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID AND 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblCheckInOut_Transaction_Asset.AssetUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale AS qrySystem_Locale_1 ON dbo.tblAssetManagement_Assets.LocaleUID = qrySystem_Locale_1.UID CROSS JOIN
                      dbo.tblCheckInOut_Transaction_Asset AS tblCheckInOut_Transaction_Asset_1
GROUP BY dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.SerialNumber, 
                      dbo.tblAssetManagement_Assets.[Group], dbo.tblAssetManagement_Assets.SubGroup, dbo.tblAssetmanagement_Assets_Categories.Name, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name, dbo.qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate, 
                      dbo.tblAssetManagement_Assets.ID, dbo.tblCheckInOut_Transaction.Type, dbo.tblContacts_Contacts.FullName, 
                      CASE WHEN CheckInDate < qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate THEN '' ELSE qryRptSrc_Std_CheckInCheckOut_CurrentInTransaction.CheckInDate
                       END, tblCheckInOut_Transaction_1.Type, 
                      CASE WHEN CheckInDate < qryRptSrc_Std_CheckInCheckOut_CurrentOutTransaction.CheckOutDate THEN '' ELSE tblContacts_Contacts_1.FullName END,
                       dbo.tblCheckInOut_Transaction_Asset.ConditionOut, dbo.tblCheckInOut_Transaction_Asset.ConditionIn, dbo.tblCheckInOut_Transaction_Asset.Status, 
                      dbo.qrySystem_Locale.FullLocaleName
HAVING      (dbo.tblCheckInOut_Transaction.Type = N'Out') AND (tblCheckInOut_Transaction_1.Type = N'In')
ORDER BY AssetID



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_HoursCheckedOut
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_HoursCheckedOut]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_HoursCheckedOut]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_HoursCheckedOut]
AS
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblCheckInOut_Transaction.Number AS TransOutNumber, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC AS CheckOutDate, tblContacts_Contacts_2.FullName AS CheckOutDoneBy, 
                      tblContacts_Contacts_1.FullName AS CheckedOutTo, dbo.tblCheckInOut_Transaction_Asset.ConditionOut, 
                      dbo.tblCheckInOut_Transaction_Asset.CommentsOut, dbo.tblCheckInOut_Transaction_Asset.Rate, dbo.tblCheckInOut_Transaction_Asset.RateInterval, 
                      dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, dbo.tblCheckInOut_Transaction_Asset.Status, 
                      tblCheckInOut_Transaction_1.Number AS TransInNumber, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC AS ActReturnDate, 
                      dbo.tblContacts_Contacts.FullName AS CheckInDoneBy, 
                      CASE WHEN tblCheckInOut_Transaction_Asset.Status = 'In' THEN FullLocaleName ELSE tblContacts_Contacts_1.FullName END AS CurrentLocale, 
                      DATEDIFF(ss, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) 
                      / 3600.00 AS HoursCheckedOut, CASE WHEN RateInterval = 'Hour' THEN Rate * DATEDIFF(mi, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) / 60 ELSE Rate * DATEDIFF(mi, dbo.tblCheckInOut_Transaction.LogDateTimeUTC, 
                      dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC) / 1440 END AS TotalCost, dbo.tblCheckInOut_Transaction_Asset.ConditionIn, 
                      dbo.tblCheckInOut_Transaction_Asset.CommentsIn
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction_Asset INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblAssetManagement_Assets.LocaleUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblCheckInOut_Transaction_1.LogInUserUID = dbo.tblContacts_Contacts.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionInUID = tblCheckInOut_Transaction_1.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 INNER JOIN
                      dbo.tblCheckInOut_Transaction ON tblContacts_Contacts_1.UID = dbo.tblCheckInOut_Transaction.CheckedToUserUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_2 ON dbo.tblCheckInOut_Transaction.LogInUserUID = tblContacts_Contacts_2.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_Most_Recent_Transaction
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_Most_Recent_Transaction]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_Most_Recent_Transaction]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_Most_Recent_Transaction]
AS
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.SerialNumber AS AssetSerialNumber, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, 
                      dbo.tblAssetManagement_Assets.Make AS AssetMake, dbo.tblAssetManagement_Assets.Model AS AssetModel, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, 
                      dbo.tblAssetManagement_Assets.IsCheckInOutItem, dbo.tblCheckInOut_Transaction_Asset.Status, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, 
                      dbo.tblCheckInOut_Transaction_Asset.ConditionOut, dbo.tblCheckInOut_Transaction_Asset.ConditionIn, CONVERT(varchar(8000), 
                      dbo.tblCheckInOut_Transaction_Asset.CommentsOut) AS CommentsOut, CONVERT(varchar(8000), dbo.tblCheckInOut_Transaction_Asset.CommentsIn) AS CommentsIn, 
                      CASE WHEN tblCheckInOut_Transaction_Asset.Status = 'Out' THEN tblCheckInOut_Transaction.LogDateTimeUTC ELSE tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC
                       END AS CheckInOutDate, 
                      CASE WHEN tblCheckInOut_Transaction_Asset.Status = 'Out' THEN tblContacts_Contacts.FullName ELSE tblContacts_Contacts_1.FullName END AS CheckInByOutTo
FROM         dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction_Asset LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction ON dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 ON tblContacts_Contacts_1.UID = tblCheckInOut_Transaction_1.LogInUserUID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionInUID = tblCheckInOut_Transaction_1.UID ON 
                      dbo.tblContacts_Contacts.UID = dbo.tblCheckInOut_Transaction.CheckedToUserUID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.UID = dbo.tblAssetManagement_Assets.LastCheckInOutTransUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblAssetManagement_Assets.IsCheckInOutItem = 1) AND 
                      (dbo.tblCheckInOut_Transaction_Asset.Status IS NOT NULL) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NOT NULL) AND (dbo.tblAssetManagement_Assets.IsCheckInOutItem = 1) AND 
                      (dbo.tblCheckInOut_Transaction_Asset.Status IS NOT NULL)



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_Overall
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_Overall]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_Overall]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_Overall]
AS
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblCheckInOut_Transaction.Number AS TranOutNumber, 
                      dbo.tblCheckInOut_Transaction.LogDateTimeUTC AS CheckOutDate, tblContacts_Contacts_2.FullName AS CheckOutDoneBy, 
                      tblContacts_Contacts_1.FullName AS CheckedOutTo, dbo.tblCheckInOut_Transaction_Asset.ConditionOut, 
                      dbo.tblCheckInOut_Transaction_Asset.CommentsOut, dbo.tblCheckInOut_Transaction_Asset.Rate, dbo.tblCheckInOut_Transaction_Asset.RateInterval, 
                      dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, dbo.tblCheckInOut_Transaction_Asset.Status, 
                      tblCheckInOut_Transaction_1.Number AS TransInNumber, dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC AS ActReturnDate, 
                      dbo.tblContacts_Contacts.FullName AS CheckInDoneBy, 
                      CASE WHEN tblCheckInOut_Transaction_Asset.Status = 'In' THEN FullLocaleName ELSE tblContacts_Contacts_1.FullName END AS CurrentLocale, 
                      dbo.tblCheckInOut_Transaction_Asset.ConditionIn, dbo.tblCheckInOut_Transaction_Asset.CommentsIn
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction_Asset INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblAssetManagement_Assets.LocaleUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblCheckInOut_Transaction_1.LogInUserUID = dbo.tblContacts_Contacts.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionInUID = tblCheckInOut_Transaction_1.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 INNER JOIN
                      dbo.tblCheckInOut_Transaction ON tblContacts_Contacts_1.UID = dbo.tblCheckInOut_Transaction.CheckedToUserUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_2 ON dbo.tblCheckInOut_Transaction.LogInUserUID = tblContacts_Contacts_2.UID ON 
                      dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID = dbo.tblCheckInOut_Transaction.UID



GO
--/
-- qryRptSrc_Std_CheckInCheckOut_PastDue
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_CheckInCheckOut_PastDue]'))
DROP VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_PastDue]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_CheckInCheckOut_PastDue]
AS
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblCheckInOut_Transaction_Asset.ConditionOut, dbo.tblCheckInOut_Transaction_Asset.CommentsOut, dbo.tblCheckInOut_Transaction_Asset.Rate, 
                      dbo.tblCheckInOut_Transaction_Asset.RateInterval, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, 
                      tblCheckInOut_Transaction_1.LogDateTimeUTC AS DateOut, tblCheckInOut_Transaction_1.Number AS TransNumberOut, 
                      dbo.tblContacts_Contacts.UserID AS CheckedOutToUserID, dbo.tblContacts_Contacts.FullName AS CheckedOutToFullName, 
                      dbo.tblContacts_Department.Name AS UserDepartment, dbo.tblContacts_Contacts.Division AS UserDivision, 
                      dbo.tblContacts_Contacts.[Group] AS UserGroup, DATEDIFF(mi, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, getutcdate()) 
                      / 1440 AS DaysLate
FROM         dbo.tblContacts_Department RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction AS tblCheckInOut_Transaction_1 ON 
                      dbo.tblContacts_Contacts.UID = tblCheckInOut_Transaction_1.CheckedToUserUID RIGHT OUTER JOIN
                      dbo.tblCheckInOut_Transaction_Asset ON 
                      tblCheckInOut_Transaction_1.UID = dbo.tblCheckInOut_Transaction_Asset.TransactionOutUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblCheckInOut_Transaction_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.tblContacts_Department.UID = dbo.tblContacts_Contacts.DepartmentUID
WHERE     (dbo.tblCheckInOut_Transaction_Asset.ActReturnDateTimeUTC IS NULL) AND (DATEDIFF(mi, dbo.tblCheckInOut_Transaction_Asset.ExpReturnDate, getutcdate()) 
                      / 1440 > 0)
					  


GO
--/
--/

-- ** Contacts

-- qryRptSrc_Std_Contacts_Companies
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Contacts_Companies]'))
DROP VIEW [dbo].[qryRptSrc_Std_Contacts_Companies]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Contacts_Companies]
AS
SELECT     ID, Name AS CompanyName, Street, City, State, Zip, Country, Phone, Phone2, Fax, Fax2, WebSite, Comments, Category, SubCategory, 
                      BarcodeValue
FROM         dbo.tblContacts_Companies


GO
--/
-- qryRptSrc_Std_Contacts_Contacts  **********Added Fname,Lname,MInitial fields
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Contacts_Contacts]'))
DROP VIEW [dbo].[qryRptSrc_Std_Contacts_Contacts]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Contacts_Contacts]
AS
SELECT tblContacts_Contacts_1.Title, tblContacts_Contacts_1.FullName, 
               tblContacts_Contacts_1.Address1_Street + '   ' + tblContacts_Contacts_1.Address1_City + '   ' + tblContacts_Contacts_1.Address1_State + '   ' + tblContacts_Contacts_1.Address1_Zip
                + '   ' + tblContacts_Contacts_1.Address1_Country AS Address1, 
               tblContacts_Contacts_1.Address2_Street + '   ' + tblContacts_Contacts_1.Address2_City + '   ' + tblContacts_Contacts_1.Address2_State + '   ' + tblContacts_Contacts_1.Address2_Zip
                + '   ' + tblContacts_Contacts_1.Address2_Country AS Address2, 
               tblContacts_Contacts_1.Address3_Street + '   ' + tblContacts_Contacts_1.Address3_City + '   ' + tblContacts_Contacts_1.Address3_State + '   ' + tblContacts_Contacts_1.Address3_Zip
                + '   ' + tblContacts_Contacts_1.Address3_Country AS Address3, tblContacts_Contacts_1.Phone_Assistant, tblContacts_Contacts_1.Phone_Business, 
               tblContacts_Contacts_1.Phone_Business2, tblContacts_Contacts_1.Phone_BusinessFax, tblContacts_Contacts_1.Phone_CallBack, 
               tblContacts_Contacts_1.Phone_Car, tblContacts_Contacts_1.Phone_Company, tblContacts_Contacts_1.Phone_Home, tblContacts_Contacts_1.Phone_Home2, 
               tblContacts_Contacts_1.Phone_HomeFax, tblContacts_Contacts_1.Phone_Mobile, tblContacts_Contacts_1.Phone_Other, 
               tblContacts_Contacts_1.Phone_OtherFax, tblContacts_Contacts_1.Phone_Pager, tblContacts_Contacts_1.Phone_Primary, tblContacts_Contacts_1.Phone_Radio, 
               tblContacts_Contacts_1.Email, tblContacts_Contacts_1.Email2, tblContacts_Contacts_1.Email3, dbo.tblContacts_Companies.Name AS CompanyName, 
               dbo.tblContacts_Companies.Street + ' - ' + dbo.tblContacts_Companies.City + ' , ' + dbo.tblContacts_Companies.State + dbo.tblContacts_Companies.Zip + ' - ' + dbo.tblContacts_Companies.Country
                AS CompanyAddress, dbo.tblContacts_Companies.Phone, dbo.tblContacts_Companies.Phone2, dbo.tblContacts_Companies.Fax, 
               dbo.tblContacts_Companies.Fax2, dbo.tblContacts_Companies.WebSite, dbo.tblContacts_Department.Name AS Department, tblContacts_Contacts_1.Division, 
               tblContacts_Contacts_1.[Group] AS GroupName, tblContacts_Contacts_1.KPU, tblContacts_Contacts_1.Barcode, tblContacts_Contacts_1.Comments, 
               tblContacts_Contacts_1.Category, tblContacts_Contacts_1.SubCategory, tblContacts_Contacts_1.IsUser, tblContacts_Contacts_1.UserID, 
               tblContacts_Contacts_1.EnableUser, tblContacts_Contacts_1.Deleted, dbo.tblSystem_RateCode.Code AS RateCode, tblContacts_Contacts_1.FName, 
               tblContacts_Contacts_1.MInitial, tblContacts_Contacts_1.LName
FROM  dbo.tblContacts_Contacts AS tblContacts_Contacts_1 LEFT OUTER JOIN
               dbo.tblSystem_RateCode ON tblContacts_Contacts_1.RateCodeUID = dbo.tblSystem_RateCode.UID LEFT OUTER JOIN
               dbo.tblContacts_Department ON tblContacts_Contacts_1.DepartmentUID = dbo.tblContacts_Department.UID LEFT OUTER JOIN
               dbo.tblContacts_Companies ON tblContacts_Contacts_1.CompanyUID = dbo.tblContacts_Companies.UID

GO
--/
--/

-- ** Data Collection

-- qryRptSrc_Std_DataCollection_Asset_AttributeData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_DataCollection_Asset_AttributeData]'))
DROP VIEW [dbo].[qryRptSrc_Std_DataCollection_Asset_AttributeData]
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_AttributeData]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_AttributeData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_AttributeData]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, 
                      dbo.tblSystem_Attribute_Group.Name AS GroupName, dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, 
                      dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, 
                      dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, 
                      dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, dbo.tblSystem_Attribute_CollectionInstanceData.Value
FROM         dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblAssetManagement_Assets.UID
ORDER BY AssetID, GroupName, GroupItemRow, GroupItemColumn

GO
--/
-- qryRptSrc_Std_DataCollection_Asset_CollectionData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_DataCollection_Asset_CollectionData]'))
DROP VIEW [dbo].[qryRptSrc_Std_DataCollection_Asset_CollectionData]
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_AssetManagement_CollectionData]'))
DROP VIEW [dbo].[qryRptSrc_Std_AssetManagement_CollectionData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_AssetManagement_CollectionData]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, 
                      dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_CollectionInstance.UID AS InstanceUID, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, 
                      dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, 
                      dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, 
                      dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, CASE WHEN tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent IS NULL 
                      THEN tblSystem_Attribute_CollectionInstanceData.Value ELSE tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent END AS Value
FROM         dbo.tblSystem_Attribute_Collection INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_AuditSummary.UID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID AND 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID AND 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID
ORDER BY AssetID, CollectionName, InstanceUID, GroupIndex, GroupItemRow, GroupItemColumn

GO
--/
-- 59220 qryRptSrc_Std_Variable_Group_Associations_SubQry
DROP VIEW [dbo].[qryRptSrc_Std_Variable_Group_Associations_SubQry]
GO



CREATE VIEW [dbo].[qryRptSrc_Std_Variable_Group_Associations_SubQry]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_Collection.Name AS DataCollection, 
                      CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'Asset_All' THEN 'All' WHEN 'Asset_Specific' THEN tblAssetManagement_Assets.ID WHEN 'AssetCategory'
                       THEN TblAssetManagement_Assets_Categories_1.Name + ' Category' WHEN 'AssetSubCategory' THEN TblAssetManagement_Assets_Categories.Name + ' Category/ '
                       + tblAssetManagement_Assets_SubCategories.Name + ' SubCategory' WHEN 'ContactGroup_All' THEN 'All Groups' WHEN 'ContactGroupMember_All' THEN 'All Group Members'
                       WHEN 'InventoryItem_All' THEN 'All Items' WHEN 'InventoryItem_Specific' THEN tblInventory_Item.Name WHEN 'InventoryItemBatch_All' THEN 'All Batches' WHEN 'InventoryItemBatch_Specific'
                       THEN tblInventory_Item.Name + ' Batches' WHEN 'InventoryItemSN_All' THEN 'All SNs' WHEN 'InventoryItemSN_Specific' THEN tblInventory_Item.Name + ' SNs' WHEN
                       'InventoryItemCategory' THEN tblInventory_Item_Category_1.Name + ' Category' WHEN 'InventoryItemSubCategory' THEN tblInventory_Item_Category.Name + ' Category / '
                       + tblInventory_Item_SubCategory.Name + ' SubCategory' WHEN 'InventoryItemCategoryBatch' THEN tblInventory_Item_Category_1.Name + ' Category Batches' WHEN
                       'InventoryItemCategorySN' THEN tblInventory_Item_Category_1.Name + ' Category SNs' WHEN 'InventoryItemSubCategoryBatch' THEN tblInventory_Item_Category.Name
                       + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory Batches' WHEN 'InventoryItemSubCategorySN' THEN tblInventory_Item_Category.Name + ' Category / '
                       + tblInventory_Item_SubCategory.Name + ' SubCategory SNs' WHEN 'InventoryTransaction' THEN 'All Transactions' WHEN 'InventoryTransaction_Adjust' THEN 'Adjust'
                       WHEN 'InventoryTransaction_Build' THEN 'Build' WHEN 'InventoryTransaction_Consume' THEN 'Consume' WHEN 'InventoryTransaction_Destroy' THEN 'Destroy' WHEN
                       'InventoryTransaction_Return' THEN 'Return' WHEN 'InventoryTransaction_Take' THEN 'Take' WHEN 'InventoryTransaction_Put' THEN 'Put' WHEN 'InventoryTransaction_Transfer'
                       THEN 'Transfer' WHEN 'InventoryReceipt' THEN 'Receipt' WHEN 'InventoryReceitpItem' THEN 'Receipt Items' WHEN 'Locale_All' THEN 'Locales' WHEN 'ProductionData'
                       THEN 'Production Data' WHEN 'PurchasingPO' THEN 'Purchasing PO' WHEN 'PurchasingReq' THEN 'Purchasing Req' WHEN 'WIPProcessRevisionAll' THEN 'All Processes'
                       WHEN 'WIPProcessRev' THEN tblWIP_Process.Name + ' / Rev ' + tblWIP_Process_Revision.Revision WHEN 'WorkTrackingOperationStep' THEN 'Step ' + tblWorkTracking_Operation_Step.Name
                       + ', Operation ' + tblWorkTracking_Operation.Name + ' / Rev ' + tblWorkTracking_Operation_Revision.Revision WHEN 'WorkTrackingProcessRev' THEN tblWorkTracking_Process.Name
                       + ' / Rev ' + tblWorkTracking_Process_Revision.Revision WHEN 'WorkTrackingWorkOrder' THEN 'All Work Orders' WHEN 'Collection' THEN tblSystem_Attribute_Collection.Name
                       WHEN 'WIPOperationStepCollectDataWO' THEN 'Step: ' + tblWIP_Operation_Step.Name + '/ Op: ' + tblWIP_Operation.Name + tblWIP_Operation_Revision.Revision WHEN
                       'WIPOperationStepCollectDataBatch' THEN 'Step: ' + tblWIP_Operation_Step_1.Name + '/ Op: ' + tblWIP_Operation_1.Name + tblWIP_Operation_Revision_1.Revision WHEN
                       'WIPOperationStepCollectDataSN' THEN 'Step: ' + tblWIP_Operation_Step_2.Name + '/ Op: ' + tblWIP_Operation_2.Name + tblWIP_Operation_Revision_2.Revision ELSE
                       'None' END AS DataCollectionAssociations, dbo.tblSystem_Attribute_CollectionAssociation.ObjectType, dbo.tblSystem_Attribute_Collection.UID AS DataCollectionUID, 
                      dbo.tblSystem_Attribute_CollectionAssociation.UID AS DataCollectionAssocUID
FROM         dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision RIGHT OUTER JOIN
                      dbo.tblWIP_Process RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_2 ON tblWIP_Operation_2.UID = tblWIP_Operation_Revision_2.OperationUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_2 ON tblWIP_Operation_Revision_2.UID = tblWIP_Operation_Step_2.OperationRevisionUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataSN.StepUID = tblWIP_Operation_Step_2.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataWO.UID ON 
                      dbo.tblWIP_Operation_Step_CollectDataSN.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch ON tblWIP_Operation_Step_1.UID = dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON 
                      tblWIP_Operation_Step_1.OperationRevisionUID = tblWIP_Operation_Revision_1.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation AS tblWIP_Operation_1 ON tblWIP_Operation_Revision_1.OperationUID = tblWIP_Operation_1.UID ON 
                      dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataBatch.UID ON 
                      dbo.tblWIP_Process_Revision.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID ON 
                      dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item_SubCategory.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category AS tblInventory_Item_Category_1 ON 
                      dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = tblInventory_Item_Category_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories AS tblAssetManagement_Assets_Categories_1 ON 
                      dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = tblAssetManagement_Assets_Categories_1.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Step ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblWorkTracking_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation ON dbo.tblWorkTracking_Operation_Revision.OperationUID = dbo.tblWorkTracking_Operation.UID ON 
                      dbo.tblWorkTracking_Operation_Step.OperationRevisionUID = dbo.tblWorkTracking_Operation_Revision.UID ON 
                      dbo.tblWorkTracking_Process_Revision.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID ON 
                      dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets_SubCategories.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblAssetManagement_Assets.UID ON 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionAssociation.CollectionUID ON 
                      dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_CollectDataWO.StepUID
WHERE     (CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'Asset_All' THEN 'All' WHEN 'Asset_Specific' THEN tblAssetManagement_Assets.ID WHEN 'AssetCategory'
                       THEN TblAssetManagement_Assets_Categories_1.Name + ' Category' WHEN 'AssetSubCategory' THEN TblAssetManagement_Assets_Categories.Name + ' Category/ '
                       + tblAssetManagement_Assets_SubCategories.Name + ' SubCategory' WHEN 'ContactGroup_All' THEN 'All Groups' WHEN 'ContactGroupMember_All' THEN 'All Group Members'
                       WHEN 'InventoryItem_All' THEN 'All Items' WHEN 'InventoryItem_Specific' THEN tblInventory_Item.Name WHEN 'InventoryItemBatch_All' THEN 'All Batches' WHEN 'InventoryItemBatch_Specific'
                       THEN tblInventory_Item.Name + ' Batches' WHEN 'InventoryItemSN_All' THEN 'All SNs' WHEN 'InventoryItemSN_Specific' THEN tblInventory_Item.Name + ' SNs' WHEN
                       'InventoryItemCategory' THEN tblInventory_Item_Category_1.Name + ' Category' WHEN 'InventoryItemSubCategory' THEN tblInventory_Item_Category.Name + ' Category / '
                       + tblInventory_Item_SubCategory.Name + ' SubCategory' WHEN 'InventoryItemCategoryBatch' THEN tblInventory_Item_Category_1.Name + ' Category Batches' WHEN
                       'InventoryItemCategorySN' THEN tblInventory_Item_Category_1.Name + ' Category SNs' WHEN 'InventoryItemSubCategoryBatch' THEN tblInventory_Item_Category.Name
                       + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory Batches' WHEN 'InventoryItemSubCategorySN' THEN tblInventory_Item_Category.Name + ' Category / '
                       + tblInventory_Item_SubCategory.Name + ' SubCategory SNs' WHEN 'InventoryTransaction' THEN 'All Transactions' WHEN 'InventoryTransaction_Adjust' THEN 'Adjust'
                       WHEN 'InventoryTransaction_Build' THEN 'Build' WHEN 'InventoryTransaction_Consume' THEN 'Consume' WHEN 'InventoryTransaction_Destroy' THEN 'Destroy' WHEN
                       'InventoryTransaction_Return' THEN 'Return' WHEN 'InventoryTransaction_Take' THEN 'Take' WHEN 'InventoryTransaction_Put' THEN 'Put' WHEN 'InventoryTransaction_Transfer'
                       THEN 'Transfer' WHEN 'InventoryReceipt' THEN 'Receipt' WHEN 'InventoryReceitpItem' THEN 'Receipt Items' WHEN 'Locale_All' THEN 'Locales' WHEN 'ProductionData'
                       THEN 'Production Data' WHEN 'PurchasingPO' THEN 'Purchasing PO' WHEN 'PurchasingReq' THEN 'Purchasing Req' WHEN 'WIPProcessRevisionAll' THEN 'All Processes'
                       WHEN 'WIPProcessRev' THEN tblWIP_Process.Name + ' / Rev ' + tblWIP_Process_Revision.Revision WHEN 'WorkTrackingOperationStep' THEN 'Step ' + tblWorkTracking_Operation_Step.Name
                       + ', Operation ' + tblWorkTracking_Operation.Name + ' / Rev ' + tblWorkTracking_Operation_Revision.Revision WHEN 'WorkTrackingProcessRev' THEN tblWorkTracking_Process.Name
                       + ' / Rev ' + tblWorkTracking_Process_Revision.Revision WHEN 'WorkTrackingWorkOrder' THEN 'All Work Orders' WHEN 'Collection' THEN tblSystem_Attribute_Collection.Name
                       WHEN 'WIPOperationStepCollectDataWO' THEN 'Step: ' + tblWIP_Operation_Step.Name + '/ Op: ' + tblWIP_Operation.Name + tblWIP_Operation_Revision.Revision WHEN
                       'WIPOperationStepCollectDataBatch' THEN 'Step: ' + tblWIP_Operation_Step_1.Name + '/ Op: ' + tblWIP_Operation_1.Name + tblWIP_Operation_Revision_1.Revision WHEN
                       'WIPOperationStepCollectDataSN' THEN 'Step: ' + tblWIP_Operation_Step_2.Name + '/ Op: ' + tblWIP_Operation_2.Name + tblWIP_Operation_Revision_2.Revision ELSE
                       'None' END IS NOT NULL)
ORDER BY DataCollection

GO
--/
-- 59220 qryRptSrc_Std_Data_Collection_Associations_Variables_RunRules
DROP VIEW [dbo].[qryRptSrc_Std_Data_Collection_Associations_Variables_RunRules]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Data_Collection_Associations_Variables_RunRules]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry.DataCollection, 
                      dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry.DataCollectionAssociations AS ObjectAssociatedToDataCollection, 
                      dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry.ObjectType AS TypeOfObjectAssociatedToDataCollection, 
                      CASE WHEN tblSystem_Attribute_Group.UID IS NULL THEN tblSystem_Attribute_Group_1.Name ELSE tblSystem_Attribute_Group.Name END AS VariableGroup, 
                      CASE WHEN tblSystem_Attribute_Group.UID IS NULL 
                      THEN tblSystem_Attribute_Group_1.ISActive ELSE tblSystem_Attribute_Group.IsActive END AS IsVariableGroupActive, 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectType, dbo.tblSystem_Attribute_CollectionGroup.[Index], CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.Caption ELSE tblSystem_Attribute_GroupItem.Caption END AS VariableCaption, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.DataType ELSE tblSystem_Attribute_GroupItem.DataType END AS VariableDataType, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.DefaultValue ELSE tblSystem_Attribute_GroupItem.DefaultValue END AS VariableDefaultValue, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.IsRequired ELSE tblSystem_Attribute_GroupItem.IsRequired END AS IsVariableRequired, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.IsActive ELSE tblSystem_Attribute_GroupItem.IsActive END AS IsVariableActive, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.Units ELSE tblSystem_Attribute_GroupItem.Units END AS VariableUnits, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.SampleSize ELSE tblSystem_Attribute_GroupItem.SampleSize END AS SampleSize, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.Range ELSE tblSystem_Attribute_GroupItem.Range END AS Range, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.Target ELSE tblSystem_Attribute_GroupItem.Target END AS Target, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.CalculatedLimits ELSE tblSystem_Attribute_GroupItem.CalculatedLimits END AS CalculatedLimits, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.CalculateByAllData ELSE tblSystem_Attribute_GroupItem.CalculateByAllData END AS CalculateByAllData, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.CalculateLastNSubGroups ELSE tblSystem_Attribute_GroupItem.CalculateLastNSubGroups END AS CalculateLastNSubGroups,
                       CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ReCalculateEveryKSubGroups ELSE tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups END AS ReCalculateEveryKSubGroups,
                       CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.UCLX ELSE tblSystem_Attribute_GroupItem.UCLX END AS UCLX, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.LCLX ELSE tblSystem_Attribute_GroupItem.LCLX END AS LCLX, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.UCLR ELSE tblSystem_Attribute_GroupItem.UCLR END AS UCLR, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.CLX ELSE tblSystem_Attribute_GroupItem.CLX END AS CLX, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.CLR ELSE tblSystem_Attribute_GroupItem.CLR END AS CLR, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.LCLR ELSE tblSystem_Attribute_GroupItem.LCLR END AS LCLR, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.USL ELSE tblSystem_Attribute_GroupItem.USL END AS USL, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.LSL ELSE tblSystem_Attribute_GroupItem.LSL END AS LSL, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.LRL ELSE tblSystem_Attribute_GroupItem.LRL END AS LRL, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.URL ELSE tblSystem_Attribute_GroupItem.URL END AS URL, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.HasRL ELSE tblSystem_Attribute_GroupItem.HasRL END AS HasRL, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.StatAllData ELSE tblSystem_Attribute_GroupItem.StatAllData END AS StatAllData, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.StatLastNSubGroups ELSE tblSystem_Attribute_GroupItem.StatLastNSubGroups END AS StatLastNSubGroups, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.StatEveryKSubGroups ELSE tblSystem_Attribute_GroupItem.StatEveryKSubGroups END AS StatEveryKSubGroups, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.Formula ELSE tblSystem_Attribute_GroupItem.Formula END AS Formula, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.Message ELSE tblSystem_Attribute_GroupItem.Message END AS Message, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.DocumentType ELSE tblSystem_Attribute_GroupItem.DocumentType END AS DocumentType, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL THEN tblSystem_Attribute_GroupItem_1.Row ELSE tblSystem_Attribute_GroupItem.Row END AS Row, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.[Column] ELSE tblSystem_Attribute_GroupItem.[Column] END AS [Column], 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.SpanTwoColumns ELSE tblSystem_Attribute_GroupItem.SpanTwoColumns END AS SpanTwoColumns, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.RowSpan ELSE tblSystem_Attribute_GroupItem.RowSpan END AS RowSpan, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ChartGroup ELSE tblSystem_Attribute_GroupItem.ChartGroup END AS ChartGroup, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ChartSubGroup ELSE tblSystem_Attribute_GroupItem.ChartSubGroup END AS ChartSubGroup, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ChartAutoDisplay ELSE tblSystem_Attribute_GroupItem.ChartAutoDisplay END AS ChartAutoDisplay, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ChartType ELSE tblSystem_Attribute_GroupItem.ChartType END AS ChartType, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ReqTerminator ELSE tblSystem_Attribute_GroupItem.ReqTerminator END AS ReqTerminator, 
                      CASE WHEN tblSystem_Attribute_GroupItem.UID IS NULL 
                      THEN tblSystem_Attribute_GroupItem_1.ReqCorrectiveActAndCause ELSE tblSystem_Attribute_GroupItem.ReqCorrectiveActAndCause END AS ReqCorrectiveActAndCause,
                       CASE WHEN tblSystem_Attribute_Collection_RunRule.Criteria <> '' THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE CASE WHEN tblSystem_Attribute_Collection_RunRule.Name
                       IS NULL THEN tblSystem_Attribute_RunRulesDef.Name ELSE tblSystem_Attribute_Collection_RunRule.Name END END AS CriteriaRunRule, 
                      dbo.tblSystem_Attribute_Collection_RunRule.Value, dbo.tblSystem_Attribute_Collection_RunRule.SendEmail, 
                      dbo.tblSystem_Attribute_Collection_RunRule.PromptSupervisor, dbo.tblSystem_Attribute_Collection_RunRule.RejectData, 
                      dbo.tblSystem_Attribute_Collection_RunRule.DisplayMessage, dbo.tblSystem_Attribute_Collection_RunRule.AssetGenerateWO, 
                      CASE WHEN AssetGenerateWO = 'True' THEN tblWorkTracking_Process_1.name + ' / Rev ' + tblWorkTracking_Process_Revision_1.Revision ELSE '' END AS AssetGenerateWOProcessRev,
                       dbo.tblSystem_Attribute_Collection_RunRule.AssetChangeState, dbo.tblSystem_Attribute_Collection_RunRule.AssetChangeStateTo, 
                      dbo.tblSystem_Attribute_Collection_RunRule.InventoryHold, dbo.tblInventory_Item_HoldReason.Value AS InventoryHoldReason, 
                      dbo.tblSystem_Attribute_Collection_RunRule.WIPHold, dbo.tblSystem_Attribute_Collection_RunRule.WIPProcessHold, 
                      dbo.tblSystem_Attribute_Collection_RunRule.SPCRequireEntry, dbo.tblSystem_Attribute_Collection_RunRule.Comment, dbo.tblWIP_Operation_Step.Name AS WIPStep,
                       dbo.tblSystem_Attribute_Collection_RunRule.Name AS RunRuleName, dbo.tblSystem_Attribute_RunRulesDef.Name AS RunRuleDefName, 
                      dbo.tblSystem_Attribute_Collection_RunRule.IgnoreIfDown
FROM         dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID ON 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID ON 
                      dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry.DataCollectionUID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_1 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_1 ON 
                      tblSystem_Attribute_Group_1.UID = tblSystem_Attribute_GroupItem_1.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef ON dbo.tblSystem_Attribute_Collection_RunRule.RunRuleDefUID = dbo.tblSystem_Attribute_RunRulesDef.UID ON 
                      tblSystem_Attribute_GroupItem_1.UID = dbo.tblSystem_Attribute_Collection_RunRule.GroupItemUID ON 
                      dbo.qryRptSrc_Std_Variable_Group_Associations_SubQry.DataCollectionAssocUID = dbo.tblSystem_Attribute_Collection_RunRule.AssociationUID ON 
                      dbo.tblWIP_Operation_Step.UID = dbo.tblSystem_Attribute_Collection_RunRule.WIPStepUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_HoldReason ON 
                      dbo.tblSystem_Attribute_Collection_RunRule.InventoryHoldReasonUID = dbo.tblInventory_Item_HoldReason.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision AS tblWorkTracking_Process_Revision_1 ON 
                      tblWorkTracking_Process_1.UID = tblWorkTracking_Process_Revision_1.ProcessUID ON 
                      dbo.tblSystem_Attribute_Collection_RunRule.AssetGenerateWOProcessRevUID = tblWorkTracking_Process_Revision_1.UID
ORDER BY VariableGroup

GO
--/
-- 59220 qryRptSrc_Std_Data_Collection_Non_SPC_Non_WIP
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Data_Collection_Non_SPC_Non_WIP]'))
DROP VIEW [dbo].[qryRptSrc_Std_Data_Collection_Non_SPC_Non_WIP]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Data_Collection_Non_SPC_Non_WIP]
AS
SELECT TOP (100) PERCENT CONVERT(VARCHAR(30), dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 120) AS DateForGroupBy, 
               dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_Attribute_Collection.Name AS CollectionName, 
               dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, 
               CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL 
               THEN tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblAssetManagement_Assets.ID IS NOT NULL 
               THEN tblAssetManagement_Assets.ID ELSE '' END END AS AssetID, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               CASE WHEN tblInventory_Item_4.Name IS NOT NULL THEN tblInventory_Item_4.Name ELSE CASE WHEN tblInventory_Item_3.Name IS NOT NULL 
               THEN tblInventory_Item_3.Name ELSE CASE WHEN tblInventory_Item.Name IS NOT NULL THEN tblInventory_Item.Name ELSE '' END END END AS InventoryItem, 
               CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
               THEN tblInventory_Item_Batch.BatchNumber ELSE CASE WHEN tblInventory_Item_Batch_3.BatchNumber IS NOT NULL 
               THEN tblInventory_Item_Batch_3.BatchNumber ELSE '' END END AS InventoryBatch, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber AS InventorySerialNumber, CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL 
               THEN 'Asset ID: ' + tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblInventory_Item_4.Name IS NOT NULL 
               THEN 'Item: ' + tblInventory_Item_4.Name ELSE CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
               THEN 'Batch#: ' + tblInventory_Item_Batch.BatchNumber + '  for Item: ' + tblInventory_Item_3.Name ELSE CASE WHEN tblInventory_Item_SerialNumber.SerialNumber
                IS NOT NULL 
               THEN 'SN: ' + tblInventory_Item_SerialNumber.SerialNumber + ' for Item: ' + tblInventory_Item.Name + ', Batch#: ' + tblInventory_Item_Batch_3.BatchNumber ELSE CASE
                WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN 'WO#: ' + CONVERT(varchar, tblWorkTracking_WorkOrder.ID) 
               + ' for Asset ID: ' + tblAssetManagement_Assets.ID ELSE 'WIP' END END END END END AS Object, CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL 
               THEN 'Asset' ELSE CASE WHEN tblInventory_Item_4.Name IS NOT NULL THEN 'Inv Item' ELSE CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
               THEN 'Inv Batch' ELSE CASE WHEN tblInventory_Item_SerialNumber.SerialNumber IS NOT NULL 
               THEN 'Inv SN' ELSE CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN 'Work Order' ELSE 'WIP' END END END END END AS ObjectType, 
               dbo.tblSystem_Attribute_GroupItem.DataType, 
               CASE dbo.tblSystem_Attribute_GroupItem.DataType WHEN 'Text' THEN tblSystem_Attribute_CollectionInstanceData.Value WHEN 'Date' THEN CONVERT(VARCHAR(30),
                tblSystem_Attribute_CollectionInstanceData.Value, 101) WHEN 'Number' THEN CAST(tblSystem_Attribute_CollectionInstanceData.Value AS Decimal(19, 7)) 
               WHEN 'List' THEN tblSystem_Attribute_CollectionInstanceData.Value WHEN 'Totalizer' THEN CAST(tblSystem_Attribute_CollectionInstanceData.Value AS Int) 
               WHEN 'Message' THEN tblSystem_Attribute_CollectionInstanceData.Value END AS Value, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC
FROM  dbo.tblSystem_Attribute_Collection RIGHT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionInstanceData LEFT OUTER JOIN
               dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceData.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItem ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionInstance ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
               dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_3 ON dbo.tblInventory_Item_SerialNumber.BatchNumberUID = tblInventory_Item_Batch_3.UID ON 
               dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_3 ON dbo.tblInventory_Item_Batch.ItemUID = tblInventory_Item_3.UID ON 
               dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_4 ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblInventory_Item_4.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblAssetManagement_Assets_1.UID ON 
               dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID
WHERE (CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL 
               THEN 'Asset ID: ' + tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblInventory_Item_4.Name IS NOT NULL 
               THEN 'Item: ' + tblInventory_Item_4.Name ELSE CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
               THEN 'Batch#: ' + tblInventory_Item_Batch.BatchNumber + '  for Item: ' + tblInventory_Item_3.Name ELSE CASE WHEN tblInventory_Item_SerialNumber.SerialNumber
                IS NOT NULL 
               THEN 'SN: ' + tblInventory_Item_SerialNumber.SerialNumber + ' for Item: ' + tblInventory_Item.Name + ', Batch#: ' + tblInventory_Item_Batch_3.BatchNumber ELSE CASE
                WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN 'WO#: ' + CONVERT(varchar, tblWorkTracking_WorkOrder.ID) 
               + ' for Asset ID: ' + tblAssetManagement_Assets.ID ELSE 'WIP' END END END END END <> 'WIP') AND (dbo.tblSystem_Attribute_Collection.Name IS NOT NULL) AND 
               (NOT (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC')))
ORDER BY CONVERT(VARCHAR(30), dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, 120) DESC

GO
--/
-- qryRptSrc_Std_Data_Collection_SPC_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Data_Collection_SPC_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Data_Collection_SPC_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Data_Collection_SPC_Subqry]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, 
                      dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_Attribute_GroupItem.SampleSize, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] AS SampleIndex, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLS, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLS, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLS, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.USL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Target, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LSL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.URL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LRL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.HasViolations, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Exclude, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 
                      CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.HasViolations = '1' THEN CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged
                       = '1' THEN 'Yes' ELSE CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'No' ELSE ' ' END END END AS Acknowledged, 
                      AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Mean, 
                      CASE WHEN tblSystem_Attribute_GroupItem.SampleSize > '1' THEN MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) ELSE ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (dbo.tblSystem_Attribute_GroupItem.Range - 1)))) 
                      END AS RangeOrMovingRange, CONVERT(nvarchar(MAX), dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Violations, 
                      STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS StDev, dbo.tblSystem_Attribute_Collection.Name AS CollectionName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, 
                      tblAssetManagement_Assets_1.ID AS AssetID, dbo.tblWIP_WorkOrder.Number AS WIPWorkOrderNumber, 
                      tblInventory_Item_Batch_1.BatchNumber AS WIPBatchNumber, tblInventory_Item_1.Name AS WIPBatchProductName, 
                      tblInventory_Item_2.Name AS WIPMainProductName, tblInventory_Item_SerialNumber_1.SerialNumber AS WIPSerialNumber, 
                      tblInventory_Item_4.Name AS InventoryItem, dbo.tblInventory_Item_Batch.BatchNumber AS InventoryBatch, tblInventory_Item_3.Name AS InventoryBatchItem, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber AS InventorySerialNumber, dbo.tblInventory_Item.Name AS InventorySerialNumberItem, 
                      tblInventory_Item_Batch_3.BatchNumber AS InventorySerialNumberBatch, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
                      dbo.tblAssetManagement_Assets.ID AS AssetIDViaWO, CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL 
                      THEN 'Asset ID: ' + tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblInventory_Item_4.Name IS NOT NULL 
                      THEN 'Item: ' + tblInventory_Item_4.Name ELSE CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
                      THEN 'Batch#: ' + tblInventory_Item_Batch.BatchNumber + '  for Item: ' + tblInventory_Item_3.Name ELSE CASE WHEN tblInventory_Item_SerialNumber.SerialNumber IS
                       NOT NULL 
                      THEN 'SN: ' + tblInventory_Item_SerialNumber.SerialNumber + ' for Item: ' + tblInventory_Item.Name + ', Batch#: ' + tblInventory_Item_Batch_3.BatchNumber ELSE CASE
                       WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL THEN 'WO#: ' + CONVERT(varchar, tblWorkTracking_WorkOrder.ID) 
                      + ' for Asset ID: ' + tblAssetManagement_Assets.ID ELSE CASE WHEN tblInventory_Item_SerialNumber_1.SerialNumber IS NOT NULL 
                      THEN 'SN: ' + tblInventory_Item_SerialNumber_1.SerialNumber + 'Batch#: ' + tblInventory_Item_Batch_1.BatchNumber + ', Product: ' + tblInventory_Item_1.Name + ' for WIPWO# '
                       + tblWIP_WorkOrder.Number ELSE CASE WHEN tblInventory_Item_Batch_1.BatchNumber IS NOT NULL 
                      THEN 'Batch#: ' + tblInventory_Item_Batch_1.BatchNumber + ', Product: ' + tblInventory_Item_1.Name + ' for WIPWO# ' + tblWIP_WorkOrder.Number ELSE CASE WHEN
                       tblWIP_WorkOrder.Number IS NOT NULL AND tblInventory_Item_SerialNumber_1.SerialNumber IS NULL AND tblInventory_Item_Batch_1.BatchNumber IS NULL 
                      THEN 'WIPWO# ' + tblWIP_WorkOrder.Number + ', Main Product: ' + tblInventory_Item_2.Name ELSE 'Unknown' END END END END END END END END AS Object, 
                      CASE WHEN tblAssetManagement_Assets_1.ID IS NOT NULL THEN 'Asset' ELSE CASE WHEN tblInventory_Item_4.Name IS NOT NULL 
                      THEN 'Inv Item' ELSE CASE WHEN tblInventory_Item_Batch.BatchNumber IS NOT NULL 
                      THEN 'Inv Batch' ELSE CASE WHEN tblInventory_Item_SerialNumber.SerialNumber IS NOT NULL 
                      THEN 'Inv SN' ELSE CASE WHEN tblWorkTracking_WorkOrder.ID IS NOT NULL 
                      THEN 'Work Order' ELSE CASE WHEN tblInventory_Item_SerialNumber_1.SerialNumber IS NOT NULL 
                      THEN 'WIP SN' ELSE CASE WHEN tblInventory_Item_Batch_1.BatchNumber IS NOT NULL 
                      THEN 'WIP Batch' ELSE CASE WHEN tblWIP_WorkOrder.Number IS NOT NULL AND tblInventory_Item_SerialNumber_1.SerialNumber IS NULL AND 
                      tblInventory_Item_Batch_1.BatchNumber IS NULL THEN 'WIP Work Order' ELSE 'Unknown' END END END END END END END END AS ObjectType
FROM         dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_3 ON dbo.tblInventory_Item_SerialNumber.BatchNumberUID = tblInventory_Item_Batch_3.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_3 ON dbo.tblInventory_Item_Batch.ItemUID = tblInventory_Item_3.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_4 ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblInventory_Item_4.UID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_2 LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON tblInventory_Item_Batch_2.ItemUID = tblInventory_Item_2.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON tblInventory_Item_Batch_2.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID ON 
                      dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID = dbo.tblWIP_WorkOrder_Batch.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchSN ON tblInventory_Item_SerialNumber_1.UID = dbo.tblWIP_WorkOrder_BatchSN.SerialNumberUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_CollectData ON dbo.tblWIP_WorkOrder_BatchSN.UID = dbo.tblWIP_WorkOrder_Event_CollectData.ItemSNUID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON tblInventory_Item_1.UID = tblInventory_Item_Batch_1.ItemUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON tblInventory_Item_Batch_1.UID = tblWIP_WorkOrder_Batch_1.BatchUID ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.ItemBatchUID = tblWIP_WorkOrder_Batch_1.BatchUID ON 
                      dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_CollectData.EventUID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblWIP_WorkOrder_Event_CollectData.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID = dbo.tblSystem_AuditSummary.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.USL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Target, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LSL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.URL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LRL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Exclude, dbo.tblSystem_Attribute_CollectionInstanceDataSample.HasViolations, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, CONVERT(nvarchar(MAX), dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), 
                      dbo.tblSystem_Attribute_GroupItem.Range, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLS, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLS, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLS, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_Attribute_Collection.Name, dbo.tblSystem_Attribute_GroupItem.Name, 
                      dbo.tblSystem_Attribute_GroupItem.Caption, tblAssetManagement_Assets_1.ID, dbo.tblWIP_WorkOrder.Number, tblInventory_Item_Batch_1.BatchNumber, 
                      tblInventory_Item_1.Name, tblInventory_Item_2.Name, tblInventory_Item_SerialNumber_1.SerialNumber, tblInventory_Item_4.Name, 
                      dbo.tblInventory_Item_Batch.BatchNumber, tblInventory_Item_3.Name, dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblInventory_Item.Name, 
                      tblInventory_Item_Batch_3.BatchNumber, 
                      CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.HasViolations = '1' THEN CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged
                       = '1' THEN 'Yes' ELSE CASE WHEN tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'No' ELSE ' ' END END END, 
                      dbo.tblWorkTracking_WorkOrder.ID, dbo.tblAssetManagement_Assets.ID, dbo.tblSystem_Attribute_GroupItem.SampleSize


GO
--/
-- qryRptSrc_Std_Data_Collection_SPC
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Data_Collection_SPC]'))
DROP VIEW [dbo].[qryRptSrc_Std_Data_Collection_SPC]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Data_Collection_SPC]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CreatedOnDateTimeUTC, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.GroupItemCaption, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.GroupItemName, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CollectionName, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.SampleIndex, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.UCLX, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CLX, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.LCLX, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.UCLR, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CLR, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.LCLR, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.UCLS, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CLS, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.LCLS, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.USL, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Target, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.LSL, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.URL, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.LRL, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.HasViolations, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Exclude, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Modified, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Acknowledged, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Mean, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.RangeOrMovingRange, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Violations, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.StDev, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.AssetID, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WIPWorkOrderNumber, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WIPBatchNumber, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WIPBatchProductName, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WIPMainProductName, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WIPSerialNumber, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventoryItem, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventoryBatch, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventoryBatchItem, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventorySerialNumber, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventorySerialNumberItem, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.InventorySerialNumberBatch, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.WorkOrderID, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.AssetIDViaWO, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CreatedByUser, dbo.tblSystem_Attribute_CollectionInstanceDataPoint.[Index] AS PointValueIndex, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent AS PointValue, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueReported AS OriginalPointValue, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.Object, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.ObjectType
FROM         dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint ON 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.UID = dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID
ORDER BY dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CreatedOnDateTimeUTC DESC, dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.CollectionName, 
                      dbo.qryRptSrc_Std_Data_Collection_SPC_Subqry.GroupItemName



GO
--/
--/

-- ** DataSources

-- qryRptSrc_Std_DataSources
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_DataSources]'))
DROP VIEW [dbo].[qryRptSrc_Std_DataSources]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_DataSources]
AS
SELECT     dbo.tblReports_DataSource.Name AS DataSourceName, dbo.tblReports_DataSource.Category AS DataSourceCategory, 
                      dbo.tblReports_DataSource.SourceType, CONVERT(nvarchar(4000), dbo.tblReports_DataSource.DataTableView) AS DataTableView, 
                      dbo.tblReports_DataSource.AllUserAccess, dbo.tblReports_DataSource.Active, dbo.tblReports_DataSource.DataTableViewAlias, 
                      dbo.tblReports_DataSource_Column.ColumnName, dbo.tblReports_DataSource_Column.DisplayName, dbo.tblReports_DataSource_Column.DataType, 
                      dbo.tblReports_DataSource_Column.CanColumn, dbo.tblReports_DataSource_Column.CanGroup, dbo.tblReports_DataSource_Column.CanSort, 
                      dbo.tblReports_DataSource_Column.CanFilter, dbo.tblReports_DataSource_Column.CanSelectFromList, 
                      dbo.tblReports_DataSource_Column.ListSource, dbo.tblReports_DataSource_Column.ListQuery, dbo.tblReports_DataSource_Column.HasSummary, 
                      dbo.tblReports_DataSource_Column.SummaryOperation, dbo.tblReports_DataSource_Column.SummaryFormula, 
                      dbo.tblReports_DataSource_Column.CanAutoSummarize, dbo.tblReports_DataSource_Column.AutoSummarizeOperation, 
                      dbo.tblReports_DataSource_Column.AutoSummarizeFormula, dbo.tblReports_DataSource_Column.SQLAlias, 
                      dbo.tblReports_DataSource_Column.ColumnSource
FROM         dbo.tblReports_DataSource LEFT OUTER JOIN
                      dbo.tblReports_DataSource_Column ON dbo.tblReports_DataSource.UID = dbo.tblReports_DataSource_Column.DataSourceUID
					  


GO
--/
--/

-- ** Documents

-- qryRptSrc_Std_Documents_Documents
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Documents_Documents]'))
DROP VIEW [dbo].[qryRptSrc_Std_Documents_Documents]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Documents_Documents]
AS
SELECT     dbo.tblDocuments_Documents.DisplayName, dbo.tblDocuments_Documents.FileName, dbo.tblDocuments_Documents.FileSize, 
                      dbo.tblDocuments_Documents.FileType, CONVERT(varchar(8000), dbo.tblDocuments_Documents.Description) AS Description, 
                      dbo.tblDocuments_Folders.Name AS FoldersName, dbo.tblDocuments_Drawers.Name AS DrawersName, 
                      dbo.tblDocuments_Cabinets.Name AS CabinetsName
FROM         dbo.tblDocuments_Cabinets RIGHT OUTER JOIN
                      dbo.tblDocuments_Drawers ON dbo.tblDocuments_Cabinets.UID = dbo.tblDocuments_Drawers.CabinetUID RIGHT OUTER JOIN
                      dbo.tblDocuments_Folders ON dbo.tblDocuments_Drawers.UID = dbo.tblDocuments_Folders.DrawerUID RIGHT OUTER JOIN
                      dbo.tblDocuments_Documents ON dbo.tblDocuments_Folders.UID = dbo.tblDocuments_Documents.FolderUID
WHERE     (dbo.tblDocuments_Cabinets.Name IS NOT NULL) AND (dbo.tblDocuments_Drawers.Name IS NOT NULL) AND 
                      (dbo.tblDocuments_Folders.Name IS NOT NULL)




GO
--/
--/

-- ** Inventory

-- qryRptSrc_Std_Inventory_Adjusted
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Adjusted]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Adjusted]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Adjusted]
AS
SELECT TOP (100) PERCENT tblInventory_Item.Name AS InventoryItemName, tblInventory_Item.DefaultUnit, tblInventory_Item.MfgPartNumber, 
               tblInventory_Item.PartNumber, tblInventory_Item.Type AS InventoryType, tblInventory_Item_Batch.BatchNumber, 
               dbo.tblInventory_Item_TransactionLog.Username, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS AdjustDate, 
               dbo.tblInventory_Item_TransactionLog.PreviousQuantity, dbo.tblInventory_Item_TransactionLog.TransQuantity, 
               dbo.tblInventory_Item_TransactionLog.BalanceQuantity, CONVERT(float, dbo.tblInventory_Item_TransactionLog.UnitPrice) AS Price, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice AS TotalCost, CONVERT(varchar(8000), 
               dbo.tblInventory_Item_TransactionLog.Comments) AS TransactionComments, dbo.tblInventory_Item_TransactionLog.TransType, 
               tblInventory_Item.Description AS InventoryDescription, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
               dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, dbo.qrySystem_Locale.FullLocaleName, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)))) AS AdjustDateOnly, 
               dbo.tblInventory_Item_TransactionLog.BalanceQuantity - dbo.tblInventory_Item_TransactionLog.PreviousQuantity AS DifferenceQuantity, 
               (dbo.tblInventory_Item_TransactionLog.BalanceQuantity - dbo.tblInventory_Item_TransactionLog.PreviousQuantity) 
               * dbo.tblInventory_Item_TransactionLog.UnitPrice AS DifferenceCost, dbo.tblInventory_Item_TransactionLog.UserDepartment, 
               dbo.tblInventory_Item_TransactionLog.UserDivision, dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue
FROM  dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblInventory_Item_TransactionLog.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = tblInventory_Item_Batch.UID ON 
               dbo.tblInventory_Item_TransactionLog.BatchUID = tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               dbo.tblInventory_Item_TransactionLog.ItemUID = tblInventory_Item.UID
WHERE (dbo.tblInventory_Item_TransactionLog.TransType = 'Adjust') OR
               (dbo.tblInventory_Item_TransactionLog.TransType = 'Reconcile')
ORDER BY AdjustDate DESC, InventoryItemName


GO
--/
-- qryRptSrc_Std_Inventory_Asset_Transactions
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Asset_Transactions]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Asset_Transactions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Asset_Transactions]
AS
SELECT TOP (100) PERCENT tblInventory_Item_TransactionLog_1.ItemName AS InventoryItemName, 
               tblInventory_Item_TransactionLog_1.ItemDesc AS InventoryItemDesc, tblInventory_Item_Batch_1.BatchNumber, 
               tblInventory_Item_SerialNumber_1.SerialNumber, tblInventory_Item_TransactionLog_1.Username, 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS ConsumeDateTime, tblInventory_Item_TransactionLog_1.TransType, 
               tblInventory_Item_TransactionLog_1.TransQuantity * - 1 AS TransQuantity, tblInventory_Item_TransactionLog_1.UnitName AS DefaultUnit, CONVERT(float, 
               tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) AS ConsumeDateOnly, tblSystem_Barcode_1.BarcodeValue AS InventoryBatchBarcodeValue, 
               tblSystem_Barcode_2.BarcodeValue AS InventorySNBarcodeValue, tblInventory_Item_TransactionLog_1.ObjectRefType, CASE WHEN CONVERT(varchar, 
               tblWorkTracking_WorkOrder.ID) IS NULL THEN 'None' ELSE CONVERT(varchar, tblWorkTracking_WorkOrder.ID) END AS WorkOrderID, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.ID ELSE tblAssetManagement_Assets_1.ID END
                AS AssetID, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetmanagement_Assets_Categories.Name ELSE tblAssetmanagement_Assets_Categories_1.Name
                END AS AssetCategory, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetmanagement_Assets_SubCategories.Name ELSE tblAssetmanagement_Assets_SubCategories_1.Name
                END AS AssetSubCategory, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN 'tblAssetManagement_Assets.Group' ELSE 'tblAssetManagement_Assets_1.Group'
                END AS AssetGroup, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.SubGroup ELSE tblAssetManagement_Assets_1.SubGroup
                END AS AssetSubGroup, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.Description ELSE tblAssetManagement_Assets_1.Description
                END AS AssetDescription, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.AssetNumber ELSE tblAssetManagement_Assets_1.AssetNumber
                END AS AssetNumber, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.CampusName ELSE qrySystem_Locale.CampusName END
                AS AssetCampus, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.BuildingName ELSE qrySystem_Locale.BuildingName END
                AS AssetBuilding, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.FloorName ELSE qrySystem_Locale.FloorName END AS
                AssetFloor, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.RoomName ELSE qrySystem_Locale.RoomName END AS
                AssetRoom, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.LocationName ELSE qrySystem_Locale.LocationName END
                AS AssetLocation, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN qrySystem_Locale_1.FullLocaleName ELSE qrySystem_Locale.FullLocaleName
                END AS AssetFullLocale, dbo.tblInventory_Item.PartNumber AS InventoryPartNumber, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
               dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, dbo.tblInventory_Item.Type AS InventoryType, 
               dbo.tblInventory_Item.Model AS InventoryModel, dbo.tblInventory_Item.MfgPartNumber AS InventoryMfgPartNumber, 
               dbo.tblInventory_Item.BarcodeValue AS InventoryItemBarcodeValue
FROM  dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 ON 
               dbo.tblInventory_Item.UID = tblInventory_Item_TransactionLog_1.ItemUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblAssetManagement_Assets_1.LocaleUID = dbo.qrySystem_Locale.UID ON 
               tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID ON 
               tblAssetmanagement_Assets_Categories_1.UID = tblAssetManagement_Assets_1.CategoryUID ON 
               tblInventory_Item_TransactionLog_1.ObjectRefUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON qrySystem_Locale_1.UID = dbo.tblAssetManagement_Assets.LocaleUID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder.AssetUID ON 
               tblInventory_Item_TransactionLog_1.ObjectRefUID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON tblSystem_Barcode_2.ObjectUID = tblInventory_Item_SerialNumber_1.UID ON 
               tblInventory_Item_TransactionLog_1.SerialNumberUID = tblInventory_Item_SerialNumber_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_SerialNumber_1.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 ON tblInventory_Item_Batch_1.UID = tblSystem_Barcode_1.ObjectUID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_Batch_1.ItemUID
WHERE (tblInventory_Item_TransactionLog_1.TransType = N'Consume') AND 
               (CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.ID ELSE tblAssetManagement_Assets_1.ID END
                IS NOT NULL) OR
               (tblInventory_Item_TransactionLog_1.TransType = N'Return') AND 
               (CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WorkOrder' THEN tblAssetManagement_Assets.ID ELSE tblAssetManagement_Assets_1.ID END
                IS NOT NULL)
ORDER BY ConsumeDateTime DESC, AssetID


GO
--/
-- qryRptSrc_Std_Inventory_Batch_AttributeData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Batch_AttributeData]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Batch_AttributeData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Batch_AttributeData]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblSystem_Attribute_Group.Name AS GroupName, dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, 
                      dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, 
                      dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, 
                      dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, dbo.tblSystem_Attribute_CollectionInstanceData.Value
FROM         dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID INNER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID
ORDER BY ItemName, dbo.tblInventory_Item_Batch.BatchNumber, GroupName, GroupItemRow, GroupItemColumn

GO
--/
-- qryRptSrc_Std_Inventory_Batch_CollectionData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Batch_CollectionData]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Batch_CollectionData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Batch_CollectionData]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_CollectionInstance.UID AS InstanceUID, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, 
                      dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, 
                      dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, 
                      dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, dbo.tblSystem_Attribute_CollectionInstanceData.Value
FROM         dbo.tblSystem_Attribute_Collection INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblInventory_Item INNER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON dbo.tblInventory_Item_Batch.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID INNER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_AuditSummary.UID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID AND 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID
ORDER BY ItemName, dbo.tblInventory_Item_Batch.BatchNumber, CollectionName, InstanceUID, GroupIndex, GroupItemRow, GroupItemColumn

GO
--/
-- qryRptSrc_Std_Inventory_BatchHoldReasons
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_BatchHoldReasons]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_BatchHoldReasons]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_BatchHoldReasons]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
                      dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Quantity.LocaleType, 
                      dbo.tblInventory_Quantity.Quantity, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity AS TotalCost, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
                      dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.tblInventory_Item_Batch.OnHold, 
                      dbo.tblInventory_Item_Batch.ExpDate, dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblInventory_Item_HoldReason.Value AS BatchHoldReason
FROM         dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblInventory_Item_HoldReason ON dbo.tblInventory_Item_Batch.HoldReasonUID = dbo.tblInventory_Item_HoldReason.UID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblInventory_Item_Batch.UID = dbo.tblSystem_Barcode.ObjectUID RIGHT OUTER JOIN
                      dbo.qrySystem_Locale INNER JOIN
                      dbo.tblInventory_Quantity ON dbo.qrySystem_Locale.UID = dbo.tblInventory_Quantity.LocaleUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblInventory_Quantity.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Quantity.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Quantity.BatchUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID
WHERE     (dbo.tblInventory_Item_Batch.OnHold = 1) AND (dbo.tblInventory_Quantity.LocaleType IS NOT NULL)
ORDER BY InventoryItem


GO
--/
-- qryRptSrc_Std_Inventory_BOM_OnHand
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_BOM_OnHand]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_BOM_OnHand]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_BOM_OnHand]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_BOM.Name AS BOMName, dbo.tblInventory_BOM.Description AS BOMDescription, 
               dbo.tblInventory_BOM.IsActive AS BOMIsActive, dbo.tblInventory_BOM.Notes AS BOMNotes, dbo.tblInventory_BOM_Item.[Index] AS BOMIndex, 
               dbo.tblInventory_BOM_Item.Quantity AS BOMQuantity, dbo.tblInventory_BOM_Item.IsRequired AS BOMIsRequired, 
               CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL THEN tblInventory_Item_Unit.UnitName ELSE tblInventory_Item.DefaultUnit END AS BOMUnit, 
               CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL THEN '' ELSE tblInventory_Item_Unit.Multiplier END AS BOMUnitMultiplier, 
               CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
               THEN tblInventory_Item_Unit.Multiplier * tblInventory_BOM_Item.Quantity ELSE tblInventory_BOM_Item.Quantity END AS BOMConvertedQty, 
               dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, dbo.tblInventory_Item.PartNumber, 
               dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.BarcodeValue AS InventoryBarcodeValue, CONVERT(float, 
               dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity AS TotalCostOnHand, 
               CASE WHEN tblInventory_Quantity.Quantity IS NULL THEN '0' ELSE tblInventory_Quantity.Quantity END AS QuantityOnHand, 
               dbo.tblInventory_Quantity.LocaleType, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_Batch.ExpDate, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber, 
               CASE dbo.tblInventory_Quantity.LocaleType WHEN 'Locale' THEN qrySystem_Locale.FullLocaleName ELSE tblContacts_Contacts.FullName END AS FullLocaleName,
                dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
               dbo.tblAssetManagement_Assets.AssetNumber
FROM  dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
               dbo.tblInventory_Quantity LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblInventory_Quantity.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Quantity.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID ON 
               dbo.tblInventory_Quantity.BatchUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblInventory_BOM LEFT OUTER JOIN
               dbo.tblInventory_BOM_Association ON dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Association.BOMUID LEFT OUTER JOIN
               dbo.tblInventory_BOM_Item LEFT OUTER JOIN
               dbo.tblInventory_Item_Unit ON dbo.tblInventory_BOM_Item.UnitUID = dbo.tblInventory_Item_Unit.UID ON 
               dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Item.BOMUID ON dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID ON 
               dbo.tblAssetManagement_Assets.UID = dbo.tblInventory_BOM_Association.AssociatedObjectUID
ORDER BY BOMName, InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_BOM_Quantity_Buildable  59220
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_BOM_Quantity_Buildable]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_BOM_Quantity_Buildable]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_BOM.Name AS BOMName, dbo.tblInventory_BOM.Description AS BOMDescription, 
                      dbo.tblInventory_BOM.IsActive AS BOMIsActive, dbo.tblInventory_BOM_Item.[Index] AS BOMIndex, dbo.tblInventory_BOM_Item.Quantity AS BOMQuantity, 
                      dbo.tblInventory_BOM_Item.IsRequired AS BOMIsRequired, CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.UnitName ELSE tblInventory_Item.DefaultUnit END AS BOMUnit, CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL 
                      THEN '' ELSE tblInventory_Item_Unit.Multiplier END AS BOMUnitMultiplier, CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.Multiplier * tblInventory_BOM_Item.Quantity ELSE tblInventory_BOM_Item.Quantity END AS BOMConvertedQty, 
                      dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.BarcodeValue AS InventoryBarcodeValue, CONVERT(float, 
                      dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity AS TotalCostOnHand, 
                      SUM(CASE WHEN tblInventory_Quantity.Quantity IS NULL THEN '0' ELSE tblInventory_Quantity.Quantity END) AS QuantityOnHand, 
                      dbo.Division(SUM(CASE WHEN tblInventory_Quantity.Quantity IS NULL THEN '0' ELSE tblInventory_Quantity.Quantity END), 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.Multiplier * tblInventory_BOM_Item.Quantity ELSE tblInventory_BOM_Item.Quantity END) AS RatioOnHandToBOMQty
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblInventory_Quantity LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblInventory_Quantity.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      dbo.tblInventory_Quantity.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID ON 
                      dbo.tblInventory_Quantity.BatchUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Association ON dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Association.BOMUID LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_BOM_Item.UnitUID = dbo.tblInventory_Item_Unit.UID ON 
                      dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Item.BOMUID ON dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblInventory_BOM_Association.AssociatedObjectUID
GROUP BY dbo.tblInventory_BOM.Name, dbo.tblInventory_BOM.Description, dbo.tblInventory_BOM_Item.[Index], dbo.tblInventory_BOM_Item.Quantity, 
                      dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.MfgPartNumber, 
                      dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.BarcodeValue, CONVERT(float, dbo.tblInventory_Item.Price), 
                      dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity, dbo.tblInventory_BOM.IsActive, dbo.tblInventory_BOM_Item.IsRequired, 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL THEN tblInventory_Item_Unit.UnitName ELSE tblInventory_Item.DefaultUnit END, 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL THEN '' ELSE tblInventory_Item_Unit.Multiplier END, 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.Multiplier * tblInventory_BOM_Item.Quantity ELSE tblInventory_BOM_Item.Quantity END
ORDER BY BOMName, InventoryItem

GO
--/
-- qryRptSrc_Std_Inventory_Consumed  ***************Revised to include WIP WO Number and Manufacturer and Full Locale Name; Revised 6-2-15 to include WT Work Order Step as reference object source
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Consumed]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Consumed]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Consumed]
AS
SELECT TOP (100) PERCENT tblInventory_Item_TransactionLog_1.ItemName AS InventoryItemName, tblInventory_Item_1.MfgPartNumber, 
               tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, tblInventory_Item_Batch_1.BatchNumber, 
               tblInventory_Item_SerialNumber_1.SerialNumber, tblInventory_Item_TransactionLog_1.Username, 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS ConsumeDateTime, tblInventory_Item_TransactionLog_1.TransType, 
               tblInventory_Item_TransactionLog_1.PreviousQuantity, tblInventory_Item_TransactionLog_1.TransQuantity, 
               tblInventory_Item_TransactionLog_1.BalanceQuantity, CONVERT(float, tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.UnitName AS DefaultUnit, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, tblInventory_Item_TransactionLog_1.TransTypeRefUID, dbo.tblInventory_Item.Name AS KitItemBuilt, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber AS KitSerialNumber, dbo.tblInventory_Item_Batch.BatchNumber AS KitBatchNumber, 
               tblInventory_Item_TransactionLog_1.ItemDesc AS InventoryDescription, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
               dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)))) AS ConsumeDateOnly, 
               tblInventory_Item_TransactionLog_1.LocaleType, 
               CASE tblInventory_Item_TransactionLog_1.LocaleType WHEN 'User' THEN tblContacts_Contacts.FullName ELSE qrySystem_Locale.FullLocaleName END AS ConsumedFrom,
                tblSystem_Barcode_1.BarcodeValue AS InventoryBatchBarcodeValue, tblSystem_Barcode_2.BarcodeValue AS InventorySNBarcodeValue, 
               tblSystem_Barcode_3.BarcodeValue AS KitBatchBarcodeValue, dbo.tblSystem_Barcode.BarcodeValue AS KitSNBarcodeValue, 
               tblInventory_Item_TransactionLog_1.ObjectRefType, CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrder' THEN CONVERT(varchar, 
               tblWorkTracking_WorkOrder.ID) ELSE CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrderStep' THEN CONVERT(varchar, 
               tblWorkTracking_WorkOrder_1.ID) ELSE tblWIP_WorkOrder.Number END END AS WorkOrderID, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets.ID ELSE CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType
                = 'WTWorkOrderStep' AND tblAssetManagement_Assets_2.UID IS NOT NULL 
               THEN tblAssetManagement_Assets_2.ID ELSE CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrderStep' AND 
               tblAssetManagement_Assets_2.UID IS NULL THEN tblAssetManagement_Assets_3.ID ELSE tblAssetManagement_Assets_1.ID END END END AS AssetID, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ItemUID = '00000000-0000-0000-0000-000000000000' THEN 'NonTracked' ELSE 'Tracked' END AS TrackedVsNonTracked,
                dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.tblContacts_Companies.ID AS ManufacturerID, dbo.tblContacts_Companies.Name AS ManufacturerName, 
               dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Item_TransactionLog.SerialNumberUID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_3 RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON tblSystem_Barcode_3.ObjectUID = dbo.tblInventory_Item_Batch.UID ON 
               dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_Batch.UID AND 
               dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_Batch.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 ON tblInventory_Item_Batch_1.UID = tblSystem_Barcode_1.ObjectUID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_3 ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_3.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_2 ON 
               dbo.tblWorkTracking_WorkOrder_Step.AssetUID = tblAssetManagement_Assets_2.UID ON 
               tblWorkTracking_WorkOrder_1.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 ON 
               dbo.tblWorkTracking_WorkOrder.UID = tblInventory_Item_TransactionLog_1.ObjectRefUID ON 
               dbo.tblWorkTracking_WorkOrder_Step.UID = tblInventory_Item_TransactionLog_1.ObjectRefUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event ON tblInventory_Item_TransactionLog_1.ObjectRefUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblInventory_Item_TransactionLog_1.ObjectRefUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON tblInventory_Item_TransactionLog_1.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblInventory_Item_TransactionLog_1.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON tblSystem_Barcode_2.ObjectUID = tblInventory_Item_SerialNumber_1.UID ON 
               tblInventory_Item_TransactionLog_1.SerialNumberUID = tblInventory_Item_SerialNumber_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_SerialNumber_1.ItemUID ON 
               tblInventory_Item_Batch_1.UID = tblInventory_Item_TransactionLog_1.BatchUID AND 
               tblInventory_Item_Batch_1.ItemUID = tblInventory_Item_TransactionLog_1.ItemUID ON 
               dbo.tblInventory_Item_TransactionLog.UID = tblInventory_Item_TransactionLog_1.TransTypeRefUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category RIGHT OUTER JOIN
               dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
               dbo.tblContacts_Companies RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblContacts_Companies.UID = tblInventory_Item_1.ManufacturerUID ON 
               dbo.tblInventory_Item_SubCategory.UID = tblInventory_Item_1.SubCategoryUID ON dbo.tblInventory_Item_Category.UID = tblInventory_Item_1.CategoryUID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID
WHERE (tblInventory_Item_TransactionLog_1.TransType = N'Consume') OR
               (tblInventory_Item_TransactionLog_1.TransType = N'Return')
ORDER BY ConsumeDateTime DESC, 
               CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets.ID ELSE CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType
                = 'WTWorkOrderStep' AND tblAssetManagement_Assets_2.UID IS NOT NULL 
               THEN tblAssetManagement_Assets_2.ID ELSE CASE WHEN tblInventory_Item_TransactionLog_1.ObjectRefType = 'WTWorkOrderStep' AND 
               tblAssetManagement_Assets_2.UID IS NULL THEN tblAssetManagement_Assets_3.ID ELSE tblAssetManagement_Assets_1.ID END END END, InventoryItemName
GO
--/
-- qryRptSrc_Std_Inventory_Detail_Screen_Verification
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Detail_Screen_Verification]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Detail_Screen_Verification]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Detail_Screen_Verification]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, 
                      dbo.tblInventory_Item.Model, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, 
                      CONVERT(nvarchar(4000), dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired AS IsBatched, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, dbo.tblInventory_Item.IsActive, 
                      dbo.tblInventory_Item_Unit.UnitName AS AdditionalUnitOfMeasure, dbo.tblInventory_Item_Unit.Multiplier AS AdditionalUnitMultiplier, 
                      dbo.tblInventory_Item.DoesExpire, dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsSerialized, 
                      dbo.tblInventory_Item.CatalogName, dbo.tblInventory_Item.CatalogPage, tblSystem_Print_1.Name AS LabelForItem, 
                      dbo.tblSystem_Print.Name AS LabelForBatch, tblSystem_Print_2.Name AS LabelForSN, dbo.tblInventory_Item.Type
FROM         dbo.tblSystem_Print AS tblSystem_Print_2 RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON tblSystem_Print_2.UID = dbo.tblInventory_Item.SerialNumberLabelUID LEFT OUTER JOIN
                      dbo.tblSystem_Print AS tblSystem_Print_1 ON dbo.tblInventory_Item.BatchLabelUID = tblSystem_Print_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Print ON dbo.tblInventory_Item.PrintLabelUID = dbo.tblSystem_Print.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Unit.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                      dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Details_and_Links_Verification
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Details_and_Links_Verification]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Details_and_Links_Verification]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Details_and_Links_Verification]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.Type, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), dbo.tblInventory_Item.Comments) AS Comments, 
                      dbo.tblInventory_Item.BatchRequired AS IsBatched, dbo.tblInventory_Item_Category.Name AS CategoryName, 
                      dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, tblContacts_Companies_1.Name AS ManufacturerName, 
                      tblContacts_Companies_1.ID AS ManufacturerID, dbo.tblInventory_Item.IsActive, tblInventory_Item_Unit_1.UnitName AS AdditionalUnitOfMeasure, 
                      tblInventory_Item_Unit_1.Multiplier AS AdditionalUnitMultiplier, dbo.tblInventory_Item.DoesExpire, dbo.tblInventory_Item.ReceiveBatchOnHold, 
                      dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.CatalogName, dbo.tblInventory_Item.CatalogPage, 
                      tblSystem_Print_1.Name AS LabelForItem, dbo.tblSystem_Print.Name AS LabelForBatch, tblSystem_Print_2.Name AS LabelForSN, 
                      dbo.qrySystem_Locale.FullLocaleName AS LocaleLocationMgt, dbo.tblInventory_Item_Locale.QtyMin AS LocaleQtyMin, 
                      dbo.tblInventory_Item_Locale.QtyMax AS LocaleQtyMax, dbo.tblInventory_Item_Locale.IsDefault AS LocaleIsDefault, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS SupplierIsDefault, dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, 
                      dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierUnitMultiplier
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Category RIGHT OUTER JOIN
                      dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_Locale ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Locale.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblSystem_Print AS tblSystem_Print_2 ON dbo.tblInventory_Item.SerialNumberLabelUID = tblSystem_Print_2.UID LEFT OUTER JOIN
                      dbo.tblSystem_Print AS tblSystem_Print_1 ON dbo.tblInventory_Item.BatchLabelUID = tblSystem_Print_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Print ON dbo.tblInventory_Item.PrintLabelUID = dbo.tblSystem_Print.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_1 ON dbo.tblInventory_Item.UID = tblInventory_Item_Unit_1.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                      dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID ON 
                      dbo.tblInventory_Item_Category.UID = dbo.tblInventory_Item.CategoryUID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblInventory_Item_Locale.LocaleUID
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Duplicate_Mfg_Part_Numbers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Duplicate_Mfg_Part_Numbers]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Mfg_Part_Numbers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Mfg_Part_Numbers]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.MfgPartNumber, tblInventory_Item_1.Name AS OtherName,
                       tblInventory_Item_1.Description AS OtherDesc, tblInventory_Item_1.MfgPartNumber AS OtherMfgPartNumber
FROM         dbo.tblInventory_Item INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item.MfgPartNumber = tblInventory_Item_1.MfgPartNumber
WHERE     (NOT (dbo.tblInventory_Item.UID = tblInventory_Item_1.UID)) AND (dbo.tblInventory_Item.MfgPartNumber <> N' ') AND (tblInventory_Item_1.MfgPartNumber <> N'')
ORDER BY dbo.tblInventory_Item.MfgPartNumber DESC

GO
--/
-- qryRptSrc_Std_Inventory_Duplicate_Part_Numbers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Duplicate_Part_Numbers]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Part_Numbers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Part_Numbers]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      tblInventory_Item_1.Name AS OtherName, tblInventory_Item_1.Description AS OtherDesc, tblInventory_Item_1.PartNumber AS OtherPartNumber, 
                      dbo.tblInventory_Item.UID, tblInventory_Item_1.UID AS Expr1
FROM         dbo.tblInventory_Item INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item.PartNumber = tblInventory_Item_1.PartNumber
WHERE     (NOT (dbo.tblInventory_Item.UID = tblInventory_Item_1.UID)) AND (dbo.tblInventory_Item.PartNumber <> N' ')
ORDER BY dbo.tblInventory_Item.PartNumber DESC



GO
--/
-- qryRptSrc_Std_Inventory_Duplicate_Supplier_Part_Numbers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Duplicate_Supplier_Part_Numbers]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Supplier_Part_Numbers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Duplicate_Supplier_Part_Numbers]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, 
                      dbo.tblContacts_Companies.Name AS Supplier, tblInventory_Item_1.Name AS OtherName, tblInventory_Item_1.Description AS OtherDesc, 
                      tblContacts_Companies_1.Name AS OtherSupplier, tblInventory_Item_Supplier_1.PartNumber AS OtherSupplierPartNumber
FROM         dbo.tblContacts_Companies RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Supplier AS tblInventory_Item_Supplier_1 INNER JOIN
                      dbo.tblInventory_Item_Supplier ON tblInventory_Item_Supplier_1.PartNumber = dbo.tblInventory_Item_Supplier.PartNumber LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON tblInventory_Item_Supplier_1.CompanyUID = tblContacts_Companies_1.UID ON 
                      dbo.tblContacts_Companies.UID = dbo.tblInventory_Item_Supplier.CompanyUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON tblInventory_Item_Supplier_1.ItemUID = tblInventory_Item_1.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID
WHERE     (dbo.tblInventory_Item_Supplier.PartNumber <> N'') AND (tblInventory_Item_Supplier_1.PartNumber <> N'') AND 
                      (NOT (dbo.tblInventory_Item_Supplier.UID = tblInventory_Item_Supplier_1.UID))
ORDER BY dbo.tblInventory_Item_Supplier.PartNumber DESC

GO
--/
-- qryRptSrc_Std_Inventory_Item_AttributeData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Item_AttributeData]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Item_AttributeData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Item_AttributeData]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, 
                      dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, 
                      dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, 
                      dbo.tblSystem_Attribute_CollectionInstanceData.Value
FROM         dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblInventory_Item.UID
ORDER BY ItemName, GroupName, GroupItemRow, GroupItemColumn

GO
--/
-- qryRptSrc_Std_Inventory_Item_Cheat_Sheet
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Item_Cheat_Sheet]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Cheat_Sheet]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Cheat_Sheet]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      dbo.tblInventory_Item.Type, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      tblContacts_Companies_1.ID AS ManufacturerID, tblContacts_Companies_1.Name AS ManufacturerName, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier, dbo.tblInventory_Item.CatalogName, dbo.tblInventory_Item.CatalogPage
FROM         dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                      dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
					  
					  


GO
--/
-- qryRptSrc_Std_Inventory_Item_CollectionData
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Item_CollectionData]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Item_CollectionData]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Item_CollectionData]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, 
                      dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_CollectionInstance.UID AS InstanceUID, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, dbo.tblSystem_Attribute_GroupItem.Name AS GroupItemName, 
                      dbo.tblSystem_Attribute_GroupItem.Caption AS GroupItemCaption, dbo.tblSystem_Attribute_GroupItem.Row AS GroupItemRow, 
                      dbo.tblSystem_Attribute_GroupItem.[Column] AS GroupItemColumn, dbo.tblSystem_Attribute_GroupItem.LRL AS LowerSpecLimit, 
                      dbo.tblSystem_Attribute_GroupItem.URL AS UpperSpecLimit, dbo.tblSystem_Attribute_CollectionInstanceData.Value
FROM         dbo.tblSystem_AuditSummary INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID INNER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblSystem_AuditSummary.UID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID AND 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item.UID
ORDER BY ItemName, CollectionName, InstanceUID, GroupIndex, GroupItemRow, GroupItemColumn

GO
--/
-- qryRptSrc_Std_Inventory_Item_Status_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Item_Status_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Status_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Status_Subqry]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_Item.UID AS ItemUID, SUM(CASE WHEN tblInventory_Quantity.Quantity IS NULL 
               THEN 0 ELSE tblInventory_Quantity.Quantity END) AS OnHandQuantity, dbo.tblInventory_Item.Name
FROM  dbo.tblInventory_Item LEFT OUTER JOIN
               dbo.tblInventory_Quantity ON dbo.tblInventory_Item.UID = dbo.tblInventory_Quantity.ItemUID
GROUP BY dbo.tblInventory_Item.UID, dbo.tblInventory_Item.Name
ORDER BY dbo.tblInventory_Item.Name

GO
--/
-- qryRptSrc_Std_Inventory_Item_Status
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Item_Status]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Status]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Item_Status]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_Item.PartNumber, 
               dbo.tblInventory_Item.DefaultUnit AS Units, dbo.tblInventory_Item_Category.Name AS CategoryName, 
               dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, CASE WHEN tblInventory_Quantity.Quantity IS NULL 
               THEN 0 ELSE tblInventory_Quantity.Quantity END AS CurrentQty,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog
                    WHERE (TransType = 'Consume') AND (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (CAST(TransDateTimeUTC AS DATE) = CAST(GETDATE() AS DATE))) 
               AS ConsumesToday,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1
                    WHERE (TransType = 'Consume') AND (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (DATEPART(ww, TransDateTimeUTC) = DATEPART(ww, GETDATE()))) 
               AS ConsumesThisWeek,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_2
                    WHERE (TransType = 'Consume') AND (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (DATEPART(mm, TransDateTimeUTC) = DATEPART(mm, GETDATE()))) 
               AS ConsumesThisMonth,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_3
                    WHERE (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (CAST(TransDateTimeUTC AS DATE) = CAST(GETDATE() AS DATE))) 
               AS QtyChangeToday,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1
                    WHERE (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (DATEPART(ww, TransDateTimeUTC) = DATEPART(ww, GETDATE()))) 
               AS QtyChangeThisWeek,
                   (SELECT SUM(TransQuantity) AS Expr1
                    FROM   dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_2
                    WHERE (ItemUID = dbo.tblInventory_Quantity.ItemUID) AND (BatchUID = dbo.tblInventory_Quantity.BatchUID) AND 
                                   (SerialNumberUID = dbo.tblInventory_Quantity.SerialNumberUID) AND (DATEPART(mm, TransDateTimeUTC) = DATEPART(mm, GETDATE()))) 
               AS QtyChangeThisMonth
FROM  dbo.tblInventory_Item_SubCategory INNER JOIN
               dbo.tblInventory_Item_Category INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Category.UID = dbo.tblInventory_Item.CategoryUID ON 
               dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID AND 
               dbo.tblInventory_Item_SubCategory.CategoryUID = dbo.tblInventory_Item.CategoryUID LEFT OUTER JOIN
               dbo.tblInventory_Quantity ON dbo.tblInventory_Item.UID = dbo.tblInventory_Quantity.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Quantity.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Quantity.BatchUID = dbo.tblInventory_Item_Batch.UID
WHERE (dbo.tblInventory_Item.Type = N'Material')
ORDER BY ItemName

GO
--/
-- qryRptSrc_Std_Inventory_Items_Added_To_TME 59220
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, '' AS CampusName, 
                      '' AS BuildingName, '' AS FloorName, '' AS RoomName, '' AS LocationName, '' AS FullLocaleName, '' AS LocaleQtyMin, '' AS LocaleQtyMax, '' AS IsDefaultLocale, 
                      dbo.tblSystem_Attribute_Group.Name AS AttributeGroup, 
                      CASE WHEN tblSystem_Attribute_GroupItem.Caption = '' THEN tblSystem_Attribute_GroupItem.Name ELSE tblSystem_Attribute_GroupItem.Caption END AS AttributeCaptionOrName,
                       dbo.tblSystem_Attribute_CollectionInstanceData.Value AS AttributeValue, '' AS DataCollectionAssociated
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData ON dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblInventory_Item.DefaultItemWIPProcessUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID
UNION
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, '' AS CampusName, 
                      '' AS BuildingName, '' AS FloorName, '' AS RoomName, '' AS LocationName, '' AS FullLocaleName, '' AS LocaleQtyMin, '' AS LocaleQtyMax, '' AS IsDefaultLocale, 
                      '' AS AttributeGroup, '' AS AttributeCaptionOrName, '' AS AttributeValue, dbo.tblSystem_Attribute_Collection.Name AS DataCollectionAssociated
FROM         dbo.tblSystem_Attribute_CollectionAssociation LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionAssociation.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblInventory_Item.DefaultItemWIPProcessUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID
UNION
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item_Locale.QtyMin AS LocaleQtyMin, 
                      dbo.tblInventory_Item_Locale.QtyMax AS LocaleQtyMax, dbo.tblInventory_Item_Locale.IsDefault AS IsDefaultLocale, '' AS AttributeGroup, 
                      '' AS AttributeCaptionOrName, '' AS AttributeValue, '' AS DataCollectionAssociated
FROM         dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_WIPProcess.UID = dbo.tblInventory_Item.DefaultItemWIPProcessUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Locale LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Locale.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Items_Added_To_TME_Attrs_Union 59220
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_Attrs_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_Attrs_Union]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, '' AS CampusName, 
                      '' AS BuildingName, '' AS FloorName, '' AS RoomName, '' AS LocationName, '' AS FullLocaleName, '' AS LocaleQtyMin, '' AS LocaleQtyMax, '' AS IsDefaultLocale, 
                      dbo.tblSystem_Attribute_Group.Name AS AttributeGroup, 
                      CASE WHEN tblSystem_Attribute_GroupItem.Caption = '' THEN tblSystem_Attribute_GroupItem.Name ELSE tblSystem_Attribute_GroupItem.Caption END AS AttributeCaptionOrName,
                       dbo.tblSystem_Attribute_CollectionInstanceData.Value AS AttributeValue, '' AS DataCollectionAssociated
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData ON dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblInventory_Item.DefaultItemWIPProcessUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID

GO
--/
-- qryRptSrc_Std_Inventory_Items_Added_To_TME_DCAssoc_Union 59220
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_DCAssoc_Union]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_DCAssoc_Union]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, '' AS CampusName, 
                      '' AS BuildingName, '' AS FloorName, '' AS RoomName, '' AS LocationName, '' AS FullLocaleName, '' AS LocaleQtyMin, '' AS LocaleQtyMax, '' AS IsDefaultLocale, 
                      '' AS AttributeGroup, '' AS AttributeCaptionOrName, '' AS AttributeValue, dbo.tblSystem_Attribute_Collection.Name AS DataCollectionAssociated
FROM         dbo.tblSystem_Attribute_CollectionAssociation LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionAssociation.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblInventory_Item.DefaultItemWIPProcessUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID

GO
--/
-- qryRptSrc_Std_Inventory_Items_Added_To_TME_Locales_Union 59220
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_Locales_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Items_Added_To_TME_Locales_Union]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), 
                      dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC AS CreatedOnDate, 
                      dbo.tblSystem_AuditSummary.CreatedByUser, dbo.tblSystem_AuditSummary.CreatedByApp, dbo.tblSystem_AuditSummary.CreatedByForm, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.CatalogName, 
                      dbo.tblInventory_Item.CatalogPage, tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, 
                      dbo.tblInventory_Item.IsSerialized, dbo.tblInventory_Item.IsKit, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.DoesExpire, 
                      dbo.tblInventory_Item.ReceiveBatchOnHold, dbo.tblInventory_Item.AllUserAccess, dbo.tblInventory_Item.TriggeredMinMaxNotificationOn, 
                      dbo.tblWIP_AutoBatchConfig.Name AS WIPAutoBatchRule, dbo.tblWIP_AutoSerialConfig.Name AS WIPAutoSerialRule, dbo.tblInventory_Item.WIPDefaultReleaseQty, 
                      dbo.tblInventory_Item_Conversion.Name AS WIPDefaultConversion, dbo.tblInventory_Item.WIPCanAdjust, dbo.tblInventory_Item.WIPStrictAdjust, 
                      dbo.tblWIP_Process.Name AS WIPDefaultProcess, dbo.tblInventory_Item.WIPCanCreateMultipleWO, dbo.tblInventory_Item.AllowNegativeQty, 
                      dbo.tblContacts_Companies.ID AS SupplierID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item_Locale.QtyMin AS LocaleQtyMin, 
                      dbo.tblInventory_Item_Locale.QtyMax AS LocaleQtyMax, dbo.tblInventory_Item_Locale.IsDefault AS IsDefaultLocale, '' AS AttributeGroup, 
                      '' AS AttributeCaptionOrName, '' AS AttributeValue, '' AS DataCollectionAssociated
FROM         dbo.tblInventory_Item_WIPProcess LEFT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_WIPProcess.UID = dbo.tblInventory_Item.DefaultItemWIPProcessUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Conversion ON dbo.tblInventory_Item.WIPDefaultConversionUID = dbo.tblInventory_Item_Conversion.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoBatchConfig ON dbo.tblInventory_Item.WIPAutoBatchRuleUID = dbo.tblWIP_AutoBatchConfig.UID LEFT OUTER JOIN
                      dbo.tblWIP_AutoSerialConfig ON dbo.tblInventory_Item.WIPAutoSerialRuleUID = dbo.tblWIP_AutoSerialConfig.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Locale LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Locale.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblInventory_Item.UID = dbo.tblSystem_AuditSummary.UID
ORDER BY InventoryItem

GO
--/
-- qryRptSrc_Std_Inventory_Kits_3_Level_BOM
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_3_Level_BOM]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_3_Level_BOM]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_3_Level_BOM]
AS
SELECT     TOP (100) PERCENT tblInventory_Item_2.Name AS BoMItemName, tblInventory_Item_2.Description AS BoMItemDesc, dbo.tblInventory_Item.Name AS ItemName, 
                      dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_BOM_Item.Quantity, dbo.tblInventory_Item.Price, 
                      CASE WHEN dbo.tblInventory_Item.IsKit = 'True' THEN 'Y' ELSE 'N' END AS IsKit, tblInventory_Item_1.Name AS ItemNameTwo, 
                      tblInventory_Item_1.Description AS ItemDescTwo, tblInventory_BOM_Item_1.Quantity AS QuantityTwo, tblInventory_Item_1.Price AS PriceTwo, 
                      CASE WHEN tblInventory_Item_1.IsKit = 'True' THEN 'Y' ELSE 'N' END AS IsKitTwo, tblInventory_Item_3.Name AS ItemNameThree, 
                      tblInventory_Item_3.Description AS ItemDescThree, tblInventory_BOM_Item_2.Quantity AS QuantityThree, tblInventory_Item_3.Price AS PriceThree
FROM         dbo.tblInventory_BOM AS tblInventory_BOM_2 INNER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_2 ON tblInventory_BOM_2.UID = tblInventory_BOM_Item_2.BOMUID INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_3 ON tblInventory_BOM_Item_2.ItemUID = tblInventory_Item_3.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 INNER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_1 INNER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_1 ON tblInventory_BOM_Item_1.BOMUID = tblInventory_BOM_1.UID ON 
                      tblInventory_Item_1.UID = tblInventory_BOM_Item_1.ItemUID ON tblInventory_BOM_2.UID = tblInventory_Item_1.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM INNER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Item.BOMUID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_BOM_Item.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON dbo.tblInventory_BOM.UID = tblInventory_Item_2.BOMUID ON 
                      tblInventory_BOM_1.UID = dbo.tblInventory_Item.BOMUID
ORDER BY BoMItemName, ItemName, ItemNameTwo, ItemNameThree


GO
--/
-- qryRptSrc_Std_Inventory_Kits_4_Level_BOM
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_4_Level_BOM]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_4_Level_BOM]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_4_Level_BOM]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_Item.IsKit, 
                      tblInventory_Item_1.Name AS ItemNameOne, tblInventory_Item_1.Description AS ItemDescOne, tblInventory_Item_1.UID, 
                      dbo.tblInventory_BOM_Item.Quantity AS QuantityOne, tblInventory_Item_1.IsKit AS IsKitOne, tblInventory_Item_2.Name AS ItemNameTwo, 
                      tblInventory_Item_2.Description AS ItemDescTwo, tblInventory_BOM_Item_1.Quantity AS QuantityTwo, tblInventory_Item_2.IsKit AS IsKitTwo, 
                      tblInventory_Item_3.Name AS ItemNameThree, tblInventory_Item_3.Description AS ItemDescThree, tblInventory_BOM_Item_2.Quantity AS QuantityThree, 
                      tblInventory_Item_3.IsKit AS IsKitThree, tblInventory_Item_4.Name AS ItemNameFour, tblInventory_Item_4.Description AS ItemDescFour, 
                      tblInventory_BOM_Item_3.Quantity AS QuantityFour, tblInventory_Item_4.IsKit AS IsKitFour
FROM         dbo.tblInventory_BOM AS tblInventory_BOM_2 INNER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_2 ON tblInventory_BOM_2.UID = tblInventory_BOM_Item_2.BOMUID INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_3 ON tblInventory_BOM_Item_2.ItemUID = tblInventory_Item_3.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Item INNER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_BOM_Item.ItemUID = tblInventory_Item_1.UID ON 
                      dbo.tblInventory_Item.BOMUID = dbo.tblInventory_BOM.UID LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_1 INNER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_1 ON tblInventory_BOM_Item_1.BOMUID = tblInventory_BOM_1.UID INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON tblInventory_BOM_Item_1.ItemUID = tblInventory_Item_2.UID ON 
                      tblInventory_Item_1.BOMUID = tblInventory_BOM_1.UID ON tblInventory_BOM_2.UID = tblInventory_Item_2.BOMUID LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_3 INNER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_3 ON tblInventory_BOM_Item_3.BOMUID = tblInventory_BOM_3.UID INNER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_4 ON tblInventory_BOM_Item_3.ItemUID = tblInventory_Item_4.UID ON 
                      tblInventory_Item_3.BOMUID = tblInventory_BOM_3.UID
ORDER BY ItemName, ItemNameOne, ItemNameTwo, ItemNameThree, ItemNameFour


GO
--/
-- qryRptSrc_Std_Inventory_Kits_6_Level_BOM_Pricing
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CASE WHEN IsKit = 'True' THEN dbo.tblInventory_BOM_Item.Quantity * BOMCost2 ELSE (CONVERT(Float,
                       dbo.tblInventory_Item.Price) * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN '1' ELSE Multiplier END) END) 
                      AS BOMCost1
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry ON 
                      dbo.tblInventory_Item.BOMUID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CASE WHEN IsKit = 'True' THEN dbo.tblInventory_BOM_Item.Quantity * BOMCost3 ELSE (CONVERT(Float,
                       dbo.tblInventory_Item.Price) * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN '1' ELSE Multiplier END) END) 
                      AS BOMCost2
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry ON 
                      dbo.tblInventory_Item.BOMUID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CASE WHEN IsKit = 'True' THEN dbo.tblInventory_BOM_Item.Quantity * BOMCost4 ELSE (CONVERT(Float,
                       dbo.tblInventory_Item.Price) * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN '1' ELSE Multiplier END) END) 
                      AS BOMCost3
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry ON 
                      dbo.tblInventory_Item.BOMUID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CASE WHEN IsKit = 'True' THEN dbo.tblInventory_BOM_Item.Quantity * BOMCost5 ELSE (CONVERT(Float,
                       dbo.tblInventory_Item.Price) * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN 1 ELSE Multiplier END) END) 
                      AS BOMCost4
FROM         dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry.BOMUID = dbo.tblInventory_Item.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CONVERT(Float, dbo.tblInventory_Item.Price) 
                      * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN '1' ELSE Multiplier END) AS BOMCost5
FROM         dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_BOM_Item.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry]
AS
SELECT     dbo.tblInventory_BOM.UID AS BOMUID, SUM(CASE WHEN IsKit = 'True' THEN dbo.tblInventory_BOM_Item.Quantity * BOMCost1 ELSE (CONVERT(Float,
                       dbo.tblInventory_Item.Price) * dbo.tblInventory_BOM_Item.Quantity * CASE WHEN Multiplier IS NULL THEN '1' ELSE Multiplier END) END) 
                      AS BOMCostProduct
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry ON 
                      dbo.tblInventory_Item.BOMUID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
GROUP BY dbo.tblInventory_BOM.UID


GO
--------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_Pricing]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_Pricing]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_6_Level_BOM_Pricing]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS ItemName, dbo.tblInventory_Item.Description AS ItemDesc, dbo.tblInventory_Item.IsKit, 
                      dbo.tblInventory_Item.PartNumber, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.MfgPartNumber, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry.BOMCostProduct, tblInventory_Item_1.Name AS ItemNameOne, 
                      tblInventory_Item_1.Description AS ItemDescOne, tblInventory_Item_1.PartNumber AS PartNumberOne, CONVERT(float, tblInventory_Item_1.Price) 
                      AS PriceOne, tblInventory_Item_1.IsKit AS IsKitOne, tblInventory_Item_1.MfgPartNumber AS MfgPartNumberOne, 
                      dbo.tblInventory_BOM_Item.Quantity AS QuantityOne, dbo.tblInventory_Item_Unit.UnitName AS UnitOne, 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL THEN '1' ELSE tblInventory_Item_Unit.Multiplier END AS UnitMultiplierOne, CONVERT(float, 
                      tblInventory_Item_1.Price) * dbo.tblInventory_BOM_Item.Quantity * (CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit.Multiplier END) AS TotalCostOne, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry.BOMCost1, tblInventory_Item_2.Name AS ItemNameTwo, 
                      tblInventory_Item_2.Description AS ItemDescTwo, tblInventory_Item_2.PartNumber AS PartNumberTwo, CONVERT(float, tblInventory_Item_2.Price) 
                      AS PriceTwo, tblInventory_Item_2.MfgPartNumber AS MfgPartNumberTwo, tblInventory_Item_2.IsKit AS IsKitTwo, 
                      tblInventory_BOM_Item_1.Quantity AS QuantityTwo, tblInventory_Item_Unit_1.UnitName AS UnitTwo, 
                      CASE WHEN tblInventory_Item_Unit_1.Multiplier IS NULL THEN '1' ELSE tblInventory_Item_Unit_1.Multiplier END AS UnitMultiplierTwo, 
                      CONVERT(float, tblInventory_Item_2.Price) * tblInventory_BOM_Item_1.Quantity * (CASE WHEN tblInventory_Item_Unit_1.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit_1.Multiplier END) AS TotalCostTwo, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry.BOMCost2, tblInventory_Item_3.Name AS ItemNameThree, 
                      tblInventory_Item_3.Description AS ItemDescThree, tblInventory_Item_3.PartNumber AS PartNumberThree, CONVERT(float, tblInventory_Item_3.Price) 
                      AS PriceThree, tblInventory_Item_3.MfgPartNumber AS MfgPartNumberThree, tblInventory_Item_3.IsKit AS IsKitThree, 
                      tblInventory_BOM_Item_2.Quantity AS QuantityThree, tblInventory_Item_Unit_2.UnitName AS UnitThree, 
                      CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL THEN '1' ELSE tblInventory_Item_Unit_2.Multiplier END AS UnitMultiplierThree, CONVERT(float, 
                      tblInventory_Item_3.Price) * tblInventory_BOM_Item_2.Quantity * (CASE WHEN tblInventory_Item_Unit_2.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit_2.Multiplier END) AS TotalCostThree, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry.BOMCost3, tblInventory_Item_4.Name AS ItemNameFour, 
                      tblInventory_Item_4.Description AS ItemDescFour, tblInventory_Item_4.PartNumber AS PartNumberFour, CONVERT(float, tblInventory_Item_4.Price) 
                      AS PriceFour, tblInventory_Item_4.MfgPartNumber AS MfgPartNumberFour, tblInventory_Item_4.IsKit AS IsKitFour, 
                      tblInventory_BOM_Item_3.Quantity AS QuantityFour, tblInventory_Item_Unit_3.UnitName AS UnitFour, 
                      CASE WHEN tblInventory_Item_Unit_3.Multiplier IS NULL THEN '1' ELSE tblInventory_Item_Unit_3.Multiplier END AS UnitMultiplierFour, 
                      CONVERT(float, tblInventory_Item_4.Price) * tblInventory_BOM_Item_3.Quantity * (CASE WHEN tblInventory_Item_Unit_3.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit_3.Multiplier END) AS TotalCostFour, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry.BOMCost4, tblInventory_Item_5.Name AS ItemNameFive, 
                      tblInventory_Item_5.Description AS ItemDescFive, tblInventory_Item_5.PartNumber AS PartNumberFive, CONVERT(float, tblInventory_Item_5.Price) 
                      AS PriceFive, tblInventory_Item_5.MfgPartNumber AS MfgPartNumberFive, tblInventory_Item_5.IsKit AS IsKitFive, 
                      tblInventory_BOM_Item_4.Quantity AS QuantityFive, tblInventory_Item_Unit_4.UnitName AS UnitFive, 
                      CASE WHEN tblInventory_Item_Unit_4.Multiplier IS NULL THEN '1' ELSE tblInventory_Item_Unit_4.Multiplier END AS UnitMultiplierFive, 
                      CONVERT(float, tblInventory_Item_5.Price) * tblInventory_BOM_Item_4.Quantity * (CASE WHEN tblInventory_Item_Unit_4.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit_4.Multiplier END) AS TotalCostFive, 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry.BOMCost5, tblInventory_Item_6.Name AS ItemNameSix, 
                      tblInventory_Item_6.Description AS ItemDescSix, tblInventory_Item_6.PartNumber AS PartNumberSix, CONVERT(float, tblInventory_Item_6.Price) 
                      AS PriceSix, tblInventory_Item_6.MfgPartNumber AS MfgPartNumberSix, tblInventory_Item_6.IsKit AS IsKitSix, 
                      tblInventory_BOM_Item_5.Quantity AS QuantitySix, tblInventory_Item_Unit_5.UnitName AS UnitSix, 
                      tblInventory_Item_Unit_5.Multiplier AS UnitMultiplierSix, CONVERT(float, tblInventory_Item_6.Price) 
                      * tblInventory_BOM_Item_5.Quantity * (CASE WHEN tblInventory_Item_Unit_5.Multiplier IS NULL 
                      THEN '1' ELSE tblInventory_Item_Unit_5.Multiplier END) AS TotalCostSix
FROM         dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_1 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_1 LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry ON 
                      tblInventory_BOM_1.UID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost1_SubQry.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON tblInventory_BOM_1.UID = tblInventory_Item_1.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_BOM_Item.UnitUID = dbo.tblInventory_Item_Unit.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCostProduct_SubQry.BOMUID = dbo.tblInventory_BOM.UID ON 
                      dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_BOM.UID = dbo.tblInventory_Item.BOMUID ON 
                      tblInventory_Item_1.UID = dbo.tblInventory_BOM_Item.ItemUID ON tblInventory_BOM_Item_1.BOMUID = tblInventory_BOM_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_1 ON tblInventory_BOM_Item_1.UnitUID = tblInventory_Item_Unit_1.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_2 ON 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost2_SubQry.BOMUID = tblInventory_BOM_2.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_3 ON 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost3_SubQry.BOMUID = tblInventory_BOM_3.UID LEFT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_4 LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry ON 
                      tblInventory_BOM_4.UID = dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost4_SubQry.BOMUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_5 ON 
                      dbo.qryRptSrc_Std_Inventory_Kits_6_Level_BOM_KitCost5_SubQry.BOMUID = tblInventory_BOM_5.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_5 RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_6 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_5 ON tblInventory_Item_6.UID = tblInventory_BOM_Item_5.ItemUID ON 
                      tblInventory_Item_Unit_5.UID = tblInventory_BOM_Item_5.UnitUID ON 
                      tblInventory_BOM_5.UID = tblInventory_BOM_Item_5.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_5 ON tblInventory_BOM_5.UID = tblInventory_Item_5.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_4 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_4 ON tblInventory_Item_Unit_4.UID = tblInventory_BOM_Item_4.UnitUID ON 
                      tblInventory_Item_5.UID = tblInventory_BOM_Item_4.ItemUID ON tblInventory_BOM_4.UID = tblInventory_BOM_Item_4.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_4 ON tblInventory_BOM_4.UID = tblInventory_Item_4.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_3 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_3 ON tblInventory_Item_Unit_3.UID = tblInventory_BOM_Item_3.UnitUID ON 
                      tblInventory_Item_4.UID = tblInventory_BOM_Item_3.ItemUID ON tblInventory_BOM_3.UID = tblInventory_BOM_Item_3.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_3 ON tblInventory_BOM_3.UID = tblInventory_Item_3.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_2 LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_2 ON tblInventory_BOM_Item_2.UnitUID = tblInventory_Item_Unit_2.UID ON 
                      tblInventory_Item_3.UID = tblInventory_BOM_Item_2.ItemUID ON tblInventory_BOM_2.UID = tblInventory_BOM_Item_2.BOMUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON tblInventory_BOM_2.UID = tblInventory_Item_2.BOMUID ON 
                      tblInventory_BOM_Item_1.ItemUID = tblInventory_Item_2.UID
ORDER BY ItemName, ItemNameOne, ItemNameTwo, ItemNameThree, ItemNameFour, ItemNameFive, ItemNameSix


GO
--/
-- qryRptSrc_Std_Inventory_Kits_Built
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Built]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Built]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Built]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS KitItemBuilt, tblInventory_Item_1.Description AS KitDescription, 
               dbo.tblInventory_Item_Category.Name AS KitCategory, dbo.tblInventory_Item_SubCategory.Name AS KitSubCategory, tblInventory_Item_1.DefaultUnit, 
               tblInventory_Item_1.MfgPartNumber, tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, dbo.tblInventory_Item_Batch.BatchNumber, 
               tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, dbo.tblInventory_Item_SerialNumber.SerialNumber, 
               dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue, dbo.tblInventory_Item_TransactionLog.Username, 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS BuiltDate, dbo.tblInventory_Item_TransactionLog.PreviousQuantity, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity, dbo.tblInventory_Item_TransactionLog.BalanceQuantity, CONVERT(float, 
               dbo.tblInventory_Item_TransactionLog.UnitPrice) AS Price, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               dbo.tblInventory_Item_TransactionLog.Comments) AS TransactionComments, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               dbo.tblInventory_Item_TransactionLog.UserDepartment, dbo.tblInventory_Item_TransactionLog.UserDivision, CONVERT(DATETIME, CONVERT(varchar, 
               MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, 
               DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, 
               YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)))) AS BuiltDateOnly
FROM  dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblInventory_Item_TransactionLog.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
               dbo.tblSystem_Barcode ON dbo.tblInventory_Item_SerialNumber.UID = dbo.tblSystem_Barcode.ObjectUID ON 
               dbo.tblInventory_Item_TransactionLog.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_Batch.UID ON 
               dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item_SubCategory.UID = tblInventory_Item_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               dbo.tblInventory_Item_TransactionLog.ItemUID = tblInventory_Item_1.UID
WHERE (dbo.tblInventory_Item_TransactionLog.TransType = 'Build')
ORDER BY KitItemBuilt


GO
--/
-- qryRptSrc_Std_Inventory_Kits_Genealogy
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS InventoryItemName, tblInventory_Item_1.Description AS InventoryDescription, 
               dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
               tblInventory_Item_Batch_1.BatchNumber, tblSystem_Barcode_3.BarcodeValue AS InventoryBatchBarcodeValue, 
               tblInventory_Item_SerialNumber_1.SerialNumber, tblSystem_Barcode_2.BarcodeValue AS InventorySNBarcodeValue, tblInventory_Item_1.DefaultUnit, 
               tblInventory_Item_1.MfgPartNumber, tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, 
               tblInventory_Item_TransactionLog_1.Username, tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS ConsumeDateTime, CONVERT(DATETIME, 
               CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) 
               AS ConsumeDateOnly, tblInventory_Item_TransactionLog_1.LocaleType, 
               CASE tblInventory_Item_TransactionLog_1.LocaleType WHEN 'User' THEN tblContacts_Contacts.FullName ELSE qrySystem_Locale.FullLocaleName END AS ConsumedFrom,
                tblInventory_Item_TransactionLog_1.TransType, tblInventory_Item_TransactionLog_1.PreviousQuantity, tblInventory_Item_TransactionLog_1.TransQuantity, 
               tblInventory_Item_TransactionLog_1.BalanceQuantity, CONVERT(float, tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, dbo.tblInventory_Item.Name AS KitItemBuilt, dbo.tblInventory_Item.Description AS KitItemDescription, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber AS KitSerialNumber, dbo.tblSystem_Barcode.BarcodeValue AS KitBatchBarcodeValue, 
               dbo.tblInventory_Item_Batch.BatchNumber AS KitBatchNumber, tblSystem_Barcode_1.BarcodeValue AS KitSNBarcodeValue, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity AS KitQtyBuilt
FROM  dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON 
               tblSystem_Barcode_2.ObjectUID = tblInventory_Item_SerialNumber_1.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 ON 
               dbo.tblContacts_Contacts.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               dbo.qrySystem_Locale.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               tblInventory_Item_SerialNumber_1.UID = tblInventory_Item_TransactionLog_1.SerialNumberUID AND 
               tblInventory_Item_SerialNumber_1.ItemUID = tblInventory_Item_TransactionLog_1.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_3 ON tblInventory_Item_Batch_1.UID = tblSystem_Barcode_3.ObjectUID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_Batch_1.ItemUID LEFT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Item_TransactionLog.SerialNumberUID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Item_TransactionLog.BatchUID AND 
               dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_TransactionLog.ItemUID ON 
               dbo.tblInventory_Item_TransactionLog.UID = tblInventory_Item_TransactionLog_1.TransTypeRefUID RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON tblInventory_Item_1.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID
WHERE (tblInventory_Item_TransactionLog_1.TransType = N'Consume') AND (dbo.tblInventory_Item.Name IS NOT NULL)
ORDER BY InventoryItemName


GO
--/
-- qryRptSrc_Std_Inventory_Kits_Genealogy_Reverse
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_Reverse]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_Reverse]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_Reverse]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS InventoryItemName, tblInventory_Item_1.Description AS InventoryDescription, 
               dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
               tblInventory_Item_Batch_1.BatchNumber, tblSystem_Barcode_3.BarcodeValue AS InventoryBatchBarcodeValue, 
               tblInventory_Item_SerialNumber_1.SerialNumber, tblSystem_Barcode_2.BarcodeValue AS InventorySNBarcodeValue, tblInventory_Item_1.DefaultUnit, 
               tblInventory_Item_1.MfgPartNumber, tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, 
               tblInventory_Item_TransactionLog_1.Username, tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS ConsumeDateTime, CONVERT(DATETIME, 
               CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) 
               AS ConsumeDateOnly, tblInventory_Item_TransactionLog_1.LocaleType, 
               CASE tblInventory_Item_TransactionLog_1.LocaleType WHEN 'User' THEN tblContacts_Contacts.FullName ELSE qrySystem_Locale.FullLocaleName END AS ConsumedFrom,
                tblInventory_Item_TransactionLog_1.TransType, tblInventory_Item_TransactionLog_1.PreviousQuantity, 
               tblInventory_Item_TransactionLog_1.TransQuantity * - 1 AS TransQuantity, tblInventory_Item_TransactionLog_1.BalanceQuantity, CONVERT(float, 
               tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, dbo.tblInventory_Item.Name AS KitItemBuilt, dbo.tblInventory_Item.Description AS KitItemDescription, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber AS KitSerialNumber, dbo.tblSystem_Barcode.BarcodeValue AS KitBatchBarcodeValue, 
               dbo.tblInventory_Item_Batch.BatchNumber AS KitBatchNumber, tblSystem_Barcode_1.BarcodeValue AS KitSNBarcodeValue, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity AS KitQtyBuilt
FROM  dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON 
               tblSystem_Barcode_2.ObjectUID = tblInventory_Item_SerialNumber_1.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 ON 
               dbo.tblContacts_Contacts.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               dbo.qrySystem_Locale.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               tblInventory_Item_SerialNumber_1.UID = tblInventory_Item_TransactionLog_1.SerialNumberUID AND 
               tblInventory_Item_SerialNumber_1.ItemUID = tblInventory_Item_TransactionLog_1.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_3 ON tblInventory_Item_Batch_1.UID = tblSystem_Barcode_3.ObjectUID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_Batch_1.ItemUID LEFT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Item_TransactionLog.SerialNumberUID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Item_TransactionLog.BatchUID AND 
               dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_TransactionLog.ItemUID ON 
               dbo.tblInventory_Item_TransactionLog.UID = tblInventory_Item_TransactionLog_1.TransTypeRefUID RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON tblInventory_Item_1.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID
WHERE (tblInventory_Item_TransactionLog_1.TransType = N'Consume') AND (dbo.tblInventory_Item.Name IS NOT NULL)
ORDER BY InventoryItemName


GO
--/
-- qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN]
AS
SELECT     TOP (100) PERCENT MAX(dbo.tblInventory_Receipt.ID) AS ReceiptID, dbo.tblInventory_Receipt_Item.ItemUID, 
                      dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumberUID
FROM         dbo.tblInventory_Receipt_Item INNER JOIN
                      dbo.tblInventory_Receipt ON dbo.tblInventory_Receipt_Item.ReceiptUID = dbo.tblInventory_Receipt.UID LEFT OUTER JOIN
                      dbo.tblInventory_Receipt_Item_SerialNumber ON 
                      dbo.tblInventory_Receipt_Item.UID = dbo.tblInventory_Receipt_Item_SerialNumber.ReceiptItemUID
GROUP BY dbo.tblInventory_Receipt_Item.ItemUID, dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumberUID
ORDER BY ReceiptID, dbo.tblInventory_Receipt_Item.ItemUID


GO
-------------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID]
AS
SELECT     TOP (100) PERCENT MAX(dbo.tblInventory_Receipt.ID) AS ReceiptID, dbo.tblInventory_Receipt_Item.ItemUID, 
                      dbo.tblInventory_Receipt_Item.BatchUID
FROM         dbo.tblInventory_Receipt_Item INNER JOIN
                      dbo.tblInventory_Receipt ON dbo.tblInventory_Receipt_Item.ReceiptUID = dbo.tblInventory_Receipt.UID LEFT OUTER JOIN
                      dbo.tblInventory_Receipt_Item_SerialNumber ON 
                      dbo.tblInventory_Receipt_Item.UID = dbo.tblInventory_Receipt_Item_SerialNumber.ReceiptItemUID
GROUP BY dbo.tblInventory_Receipt_Item.ItemUID, dbo.tblInventory_Receipt_Item.BatchUID
ORDER BY ReceiptID, dbo.tblInventory_Receipt_Item.ItemUID, dbo.tblInventory_Receipt_Item.BatchUID


GO
-------------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier]
AS
SELECT     dbo.tblInventory_Receipt.ID AS ReceiptID, dbo.tblContacts_Companies.Name AS SupplierName, 
                      dbo.tblInventory_Receipt.RecDateTimeUTC AS ReceiptDate
FROM         dbo.tblInventory_Receipt INNER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Receipt.CompanyUID = dbo.tblContacts_Companies.UID
GROUP BY dbo.tblInventory_Receipt.ID, dbo.tblContacts_Companies.Name, dbo.tblInventory_Receipt.RecDateTimeUTC


GO
-------------------------------------------------
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS InventoryItemName, tblInventory_Item_1.DefaultUnit, tblInventory_Item_1.MfgPartNumber, 
               tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, tblInventory_Item_Batch_1.BatchNumber, 
               tblSystem_Barcode_2.BarcodeValue AS BatchBarcodeValue, tblInventory_Item_SerialNumber_1.SerialNumber, 
               tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue, tblInventory_Item_TransactionLog_1.Username, 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS ConsumeDateTime, tblInventory_Item_TransactionLog_1.TransType, 
               tblInventory_Item_TransactionLog_1.PreviousQuantity, tblInventory_Item_TransactionLog_1.TransQuantity, 
               tblInventory_Item_TransactionLog_1.BalanceQuantity, CONVERT(float, tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, dbo.tblInventory_Item.Name AS KitItemBuilt, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber AS KitSerialNumber, tblSystem_Barcode_3.BarcodeValue AS KitSNBarcodeValue, 
               dbo.tblInventory_Item_Batch.BatchNumber AS KitBatchNumber, dbo.tblSystem_Barcode.BarcodeValue AS KitBatchBarcodeValue, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity AS KitQtyBuilt, tblInventory_Item_1.Description AS InventoryDescription, 
               dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, CONVERT(DATETIME, 
               CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) 
               + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) 
               AS ConsumeDateOnly, tblInventory_Item_TransactionLog_1.LocaleType, 
               CASE tblInventory_Item_TransactionLog_1.LocaleType WHEN 'User' THEN tblContacts_Contacts.FullName ELSE qrySystem_Locale.FullLocaleName END AS ConsumedFrom,
                CASE WHEN qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN.SerialNumberUID IS NULL 
               THEN qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier.ReceiptDate ELSE qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier_1.ReceiptDate
                END AS ReceiptDate, CASE WHEN qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN.SerialNumberUID IS NULL 
               THEN qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier.SupplierName ELSE qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier_1.SupplierName
                END AS SupplierName
FROM  dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_3 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_3.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_SerialNumber.ItemUID AND 
               dbo.tblInventory_Item_TransactionLog.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Item_TransactionLog.BatchUID AND 
               dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID ON 
               dbo.tblInventory_Item.UID = dbo.tblInventory_Item_TransactionLog.ItemUID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 LEFT OUTER JOIN
               dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier AS qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier_1
                INNER JOIN
               dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN ON 
               qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier_1.ReceiptID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN.ReceiptID
                ON tblInventory_Item_TransactionLog_1.ItemUID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN.ItemUID AND 
               tblInventory_Item_TransactionLog_1.SerialNumberUID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID_SN.SerialNumberUID
                LEFT OUTER JOIN
               dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID INNER JOIN
               dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier ON 
               dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID.ReceiptID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_Receipt_Supplier.ReceiptID
                ON tblInventory_Item_TransactionLog_1.ItemUID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID.ItemUID AND 
               tblInventory_Item_TransactionLog_1.BatchUID = dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID.BatchUID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON tblInventory_Item_TransactionLog_1.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblInventory_Item_TransactionLog_1.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON tblSystem_Barcode_1.ObjectUID = tblInventory_Item_SerialNumber_1.UID ON 
               tblInventory_Item_TransactionLog_1.SerialNumberUID = tblInventory_Item_SerialNumber_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_SerialNumber_1.ItemUID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON tblSystem_Barcode_2.ObjectUID = tblInventory_Item_Batch_1.UID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_Batch_1.ItemUID ON 
               dbo.tblInventory_Item_TransactionLog.UID = tblInventory_Item_TransactionLog_1.TransTypeRefUID RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON tblInventory_Item_1.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID
WHERE (dbo.tblInventory_Item.Name IS NOT NULL) AND (tblInventory_Item_TransactionLog_1.TransType = N'Consume') AND 
               (dbo.qryRptSrc_Std_Inventory_Kits_Genealogy_With_ItemSupplier_Subqry_MaxReceiptID.BatchUID IS NOT NULL)
ORDER BY InventoryItemName


GO
--/
-- qryRptSrc_Std_Inventory_List_Additional_Units
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_Additional_Units]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_Additional_Units]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_Additional_Units]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.Type, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, CONVERT(nvarchar(4000), dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      CASE WHEN UnitName IS NULL THEN 'None' ELSE UnitName END AS AddtionalUnits, 
                      dbo.tblInventory_Item_Unit.Multiplier AS AddtionalUnitMultiplier
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Unit.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_List_CountSheet
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_CountSheet]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      dbo.tblInventory_Item.Type, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      tblContacts_Companies_1.ID AS ManufacturerID, tblContacts_Companies_1.Name AS ManufacturerName, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item.Comments, '__________' AS Counts, dbo.tblInventory_Item_Supplier.DefaultSupplier, 
                      dbo.tblContacts_Companies.ID AS DefaultSupplierID, dbo.tblContacts_Companies.Name AS DefaultSupplierName, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblInventory_Item_Batch.BatchNumber, 
                      tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue
FROM         dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 ON dbo.tblInventory_Item_Batch.UID = tblSystem_Barcode_1.ObjectUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                      dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
WHERE     (dbo.tblInventory_Item_Supplier.DefaultSupplier = 1) OR
                      (dbo.tblInventory_Item_Supplier.DefaultSupplier IS NULL)
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry]
AS
SELECT     dbo.tblInventory_Item.UID, dbo.tblContacts_Companies.Name AS SupplierName
FROM         dbo.tblInventory_Item_Supplier RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID
WHERE     (dbo.tblInventory_Item_Supplier.DefaultSupplier = 1)


GO
--/
-- qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.Type, 
                      dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, tblContacts_Companies_1.ID AS ManufacturerID, 
                      tblContacts_Companies_1.Name AS ManufacturerName, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, 
                      dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item.Comments, '__________' AS Counts, 
                      dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item_Batch.BatchNumber, tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.CampusName, 
                      CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END AS Quantity, dbo.qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry.UID, 
                      dbo.qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry.SupplierName AS DefaultSupplier
FROM         dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Locale LEFT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.tblInventory_Quantity.LocaleUID AND 
                      dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Quantity.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Item_Batch.ItemUID ON 
                      tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Item_SerialNumber.ItemUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.qrySystem_Locale.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry ON 
                      dbo.tblInventory_Item.UID = dbo.qryRptSrc_Std_Inventory_List_CountSheet_LocationMgt_SubQry.UID ON 
                      dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID ON 
                      dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID
ORDER BY InventoryItem

GO
--/
-- qryRptSrc_Std_Inventory_List_CountSheet_with_Quantity
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_CountSheet_with_Quantity]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_with_Quantity]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_CountSheet_with_Quantity]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      dbo.tblInventory_Item.Type, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      tblContacts_Companies_1.ID AS ManufacturerID, tblContacts_Companies_1.Name AS ManufacturerName, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item_Supplier.DefaultSupplier, dbo.tblContacts_Companies.ID AS DefaultSupplierID, 
                      dbo.tblContacts_Companies.Name AS DefaultSupplierName, dbo.tblInventory_Item_SerialNumber.SerialNumber, 
                      dbo.tblInventory_Item_Batch.BatchNumber, tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue, dbo.tblInventory_Quantity.Quantity, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName, '__________' AS Counts
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblInventory_Quantity LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Quantity.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 ON dbo.tblInventory_Item_Batch.UID = tblSystem_Barcode_1.ObjectUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_SerialNumber.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                      dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
GROUP BY dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item_Category.Name, 
                      dbo.tblInventory_Item_SubCategory.Name, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, 
                      dbo.tblInventory_Item.Price), tblContacts_Companies_1.ID, tblContacts_Companies_1.Name, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, 
                      dbo.tblContacts_Companies.ID, dbo.tblContacts_Companies.Name, dbo.tblInventory_Item_SerialNumber.SerialNumber, 
                      dbo.tblInventory_Item_Batch.BatchNumber, tblSystem_Barcode_1.BarcodeValue, dbo.tblSystem_Barcode.BarcodeValue, 
                      dbo.tblInventory_Quantity.Quantity, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item_Supplier.DefaultSupplier, 
                      dbo.tblInventory_Quantity.LocaleType, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName
HAVING      (dbo.tblInventory_Quantity.LocaleType = N'Locale')
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_List_No_Barcode
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_No_Barcode]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_No_Barcode]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_No_Barcode]
AS
SELECT     dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
                      dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, 
                      dbo.tblInventory_Item.IsActive
FROM         dbo.tblInventory_Item_Supplier RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
WHERE     (dbo.tblInventory_Item.BarcodeValue = N' ')



GO
--/
-- qryRptSrc_Std_Inventory_List_Suppliers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_List_Suppliers]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_List_Suppliers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_List_Suppliers]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
               dbo.tblInventory_Item.Type, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MfgPartNumber, 
               dbo.tblInventory_Item.Model, dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, 
               CONVERT(nvarchar(4000), dbo.tblInventory_Item.Comments) AS Comments, dbo.tblInventory_Item.BatchRequired, 
               dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, 
               tblContacts_Companies_1.Name AS ManufacturerName, tblContacts_Companies_1.ID AS ManufacturerID, dbo.tblContacts_Companies.ID AS SupplierID, 
               dbo.tblContacts_Companies.Name AS SupplierName, dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, CONVERT(float, 
               dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, 
               dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, dbo.tblInventory_Item_Unit.UnitName AS SupplierOrderByUnit, 
               dbo.tblInventory_Item_Unit.Multiplier AS SupplierOrderByUnitMultiplier, dbo.tblContacts_Companies.Street AS SupplierStreet, 
               dbo.tblContacts_Companies.City AS SupplierCity, dbo.tblContacts_Companies.State AS SupplierState, dbo.tblContacts_Companies.Zip AS SupplierZip, 
               dbo.tblContacts_Companies.Country AS SupplierCountry, dbo.tblContacts_Companies.Phone AS SupplierPhone, dbo.tblContacts_Companies.Fax AS SupplierFax, 
               dbo.qrySystem_Locale.FullLocaleName AS ManagedFullLocale, dbo.qrySystem_Locale.CampusName AS ManagedCampus, 
               dbo.qrySystem_Locale.BuildingName AS ManagedBuilding, dbo.qrySystem_Locale.FloorName AS ManagedFloor, 
               dbo.qrySystem_Locale.RoomName AS ManagedRoom, dbo.qrySystem_Locale.LocationName AS ManagedLocation, 
               dbo.tblInventory_Item_Locale.IsDefault AS IsDefaultManagedLocale, dbo.tblContacts_Contacts.FullName AS SupplierContact
FROM  dbo.tblContacts_Companies RIGHT OUTER JOIN
               dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblInventory_Item_Supplier.ContactUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID ON 
               dbo.tblContacts_Companies.UID = dbo.tblInventory_Item_Supplier.CompanyUID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblInventory_Item_Locale ON dbo.qrySystem_Locale.UID = dbo.tblInventory_Item_Locale.LocaleUID RIGHT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Item.UID ON 
               dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
ORDER BY InventoryItem


GO
--/
-- qryRptSrc_Std_Inventory_OnHand_All_Locales_In_TME
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_OnHand_All_Locales_In_TME]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand_All_Locales_In_TME]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand_All_Locales_In_TME]
AS
SELECT TOP (100) PERCENT dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               dbo.qrySystem_Locale.LabelValue AS LocaleBarcodeValue, CASE WHEN tblInventory_Item.Name IS NULL 
               THEN 'No Inventory' ELSE tblInventory_Item.Name END AS InventoryItem, CASE WHEN tblInventory_Item.Name IS NULL 
               THEN 'No Inventory' ELSE tblInventory_Item.Description END AS InventoryDescription, CASE WHEN tblInventory_Item.Name IS NULL 
               THEN 'No Inventory' ELSE tblInventory_Item.PartNumber END AS PartNumber, dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.DefaultUnit, 
               dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.IsActive, 
               dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, CONVERT(float, 
               dbo.tblInventory_Item.Price) AS Price, dbo.tblContacts_Companies.ID AS ManufacturerID, dbo.tblContacts_Companies.Name AS ManufacturerName, 
               dbo.tblInventory_Item.BarcodeValue AS InventoryBarcodeValue, CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END AS Quantity, 
               dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_Batch.ExpDate, dbo.tblInventory_Item_SerialNumber.SerialNumber, CONVERT(varchar(MAX), 
               dbo.tblInventory_Item_Batch.Comments) AS BatchNumberComments, CONVERT(varchar(MAX), dbo.tblInventory_Item.Comments) AS InventoryItemComments, 
               dbo.tblInventory_Item_Batch.CreateDateTimeUTC AS BatchCreatedDateTimeUTC
FROM  dbo.tblInventory_Item_SerialNumber RIGHT OUTER JOIN
               dbo.tblInventory_Quantity ON dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Quantity.SerialNumberUID AND 
               dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Quantity.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.BatchNumberUID = dbo.tblInventory_Quantity.BatchUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item_Batch.ItemUID AND 
               dbo.tblInventory_Quantity.BatchUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblInventory_Item LEFT OUTER JOIN
               dbo.tblContacts_Companies ON dbo.tblInventory_Item.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID
ORDER BY dbo.qrySystem_Locale.CampusName

GO
--/
-- qryRptSrc_Std_Inventory_MyInventory_OnHand
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_MyInventory_OnHand]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_MyInventory_OnHand]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_MyInventory_OnHand]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
                      dbo.tblInventory_Quantity.Quantity, dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item_Batch.BatchNumber, tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue, 
                      dbo.tblInventory_Quantity.LocaleType AS LocationType, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity AS TotalCost, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
                      dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
                      (CASE dbo.tblInventory_Quantity.LocaleType WHEN 'Locale' THEN qrySystem_Locale.Name ELSE tblContacts_Contacts.FullName END) 
                      AS UserName
FROM         dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblSystem_Barcode ON dbo.tblInventory_Item_SerialNumber.UID = dbo.tblSystem_Barcode.ObjectUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch LEFT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 ON dbo.tblInventory_Item_Batch.UID = tblSystem_Barcode_1.ObjectUID RIGHT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Quantity.ItemUID AND 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Quantity.BatchUID ON 
                      dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Quantity.ItemUID AND 
                      dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Quantity.SerialNumberUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblInventory_Quantity.LocaleUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID
WHERE     (dbo.tblInventory_Quantity.LocaleType = N'User')
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_OnHand
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_OnHand]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
               dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
               dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.DefaultUnit, 
               CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, 
               dbo.tblInventory_Item.BarcodeValue AS InventoryBarcodeValue, dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, 
               dbo.tblInventory_Item.MaximumQty, CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END AS Quantity, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               (CASE dbo.tblInventory_Quantity.LocaleType WHEN 'Locale' THEN qrySystem_Locale.FullLocaleName ELSE tblContacts_Contacts_1.FullName END) 
               AS LocaleUserName, dbo.tblInventory_Quantity.LocaleType AS LocationType, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_Batch.ExpDate, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.qrySystem_Locale.FullLocaleName, CONVERT(float, dbo.tblInventory_Item.Price) 
               * (CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END) AS TotalCost, tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue,
                   (SELECT TOP (1) BarcodeValue
                    FROM   dbo.tblSystem_Barcode AS Contact
                    WHERE (ObjectUID = dbo.tblInventory_Item_Batch.UID)) AS BatchBarcodeValue, SupplierData.SupplierID, SupplierData.SupplierName, 
               SupplierData.SupplierContactName, dbo.tblInventory_Item_Batch.CreateDateTimeUTC AS BatchCreatedDateTimeUTC
FROM  dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblSystem_Barcode ON dbo.tblInventory_Item_Batch.UID = dbo.tblSystem_Barcode.ObjectUID RIGHT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
               dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID RIGHT OUTER JOIN
               dbo.tblInventory_Quantity ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Quantity.ItemUID ON 
               dbo.tblInventory_Item_SerialNumber.BatchNumberUID = dbo.tblInventory_Quantity.BatchUID AND 
               dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Quantity.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblInventory_Quantity.SerialNumberUID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Quantity.BatchUID AND 
               dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Quantity.ItemUID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblInventory_Quantity.LocaleUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.qrySystem_Locale.UID = dbo.tblInventory_Quantity.LocaleUID RIGHT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                   (SELECT tblInventory_Item_Supplier_1.DefaultSupplier, tblInventory_Item_1.UID AS ItemUID, tblContacts_Companies_1.ID AS SupplierID, 
                                   tblContacts_Companies_1.Name AS SupplierName, dbo.tblContacts_Contacts.FullName AS SupplierContactName
                    FROM   dbo.tblContacts_Contacts RIGHT OUTER JOIN
                                   dbo.tblInventory_Item_Supplier AS tblInventory_Item_Supplier_1 ON 
                                   dbo.tblContacts_Contacts.UID = tblInventory_Item_Supplier_1.ContactUID LEFT OUTER JOIN
                                   dbo.tblContacts_Companies AS tblContacts_Companies_1 ON 
                                   tblInventory_Item_Supplier_1.CompanyUID = tblContacts_Companies_1.UID RIGHT OUTER JOIN
                                   dbo.tblInventory_Item AS tblInventory_Item_1 ON tblInventory_Item_Supplier_1.ItemUID = tblInventory_Item_1.UID
                    WHERE (tblInventory_Item_Supplier_1.DefaultSupplier = 1)) AS SupplierData ON SupplierData.ItemUID = dbo.tblInventory_Item.UID
ORDER BY InventoryItem, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber

GO
--/
-- qryRptSrc_Std_Inventory_OnHand_Zero_Quantity
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_OnHand_Zero_Quantity]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand_Zero_Quantity]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_OnHand_Zero_Quantity]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item_Category.Name AS CategoryName, dbo.tblInventory_Item_SubCategory.Name AS SubCategoryName, dbo.tblInventory_Item.Type, 
                      dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, tblContacts_Companies_1.ID AS ManufacturerID, 
                      tblContacts_Companies_1.Name AS ManufacturerName, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.BarcodeValue, 
                      dbo.tblInventory_Item.IsActive, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CASE WHEN Quantity IS NULL 
                      THEN '0' ELSE Quantity END AS Quantity, CASE WHEN tblContacts_Companies.ID IS NULL THEN 'None' ELSE tblContacts_Companies.ID END AS SupplierID, 
                      CASE WHEN tblContacts_Companies.Name IS NULL THEN 'None' ELSE tblContacts_Companies.Name END AS SupplierName, CASE WHEN DefaultSupplier IS NULL 
                      THEN '1' ELSE DefaultSupplier END AS IsDefaultSupplier, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
                      dbo.tblInventory_Quantity.LocaleType
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.qrySystem_Locale.UID = dbo.tblInventory_Quantity.LocaleUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item_Supplier.CompanyUID = dbo.tblContacts_Companies.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Supplier.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item.ManufacturerUID = tblContacts_Companies_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID
GROUP BY dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item_Category.Name, 
                      dbo.tblInventory_Item_SubCategory.Name, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.DefaultUnit, CONVERT(float, dbo.tblInventory_Item.Price), 
                      tblContacts_Companies_1.ID, tblContacts_Companies_1.Name, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, CASE WHEN Quantity IS NULL 
                      THEN '0' ELSE Quantity END, dbo.tblInventory_Item.IsActive, CASE WHEN tblContacts_Companies.ID IS NULL THEN 'None' ELSE tblContacts_Companies.ID END, 
                      CASE WHEN tblContacts_Companies.Name IS NULL THEN 'None' ELSE tblContacts_Companies.Name END, CASE WHEN DefaultSupplier IS NULL 
                      THEN '1' ELSE DefaultSupplier END, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
                      dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Quantity.LocaleType
HAVING      (CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END = 0)
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Overstock
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Overstock]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Overstock]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Overstock]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
                      dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.MfgPartNumber, 
                      SUM(dbo.tblInventory_Quantity.Quantity) AS Quantity, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MinimumQty, 
                      dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item.Model, SUM(dbo.tblInventory_Quantity.Quantity) 
                      - dbo.tblInventory_Item.MaximumQty AS OverstockQty, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, (SUM(dbo.tblInventory_Quantity.Quantity) 
                      - dbo.tblInventory_Item.MaximumQty) * dbo.tblInventory_Item.Price AS OverstockCost, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
                      dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory
FROM         dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.tblInventory_Item.UID = dbo.tblInventory_Quantity.ItemUID
GROUP BY dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item.Model, 
                      CONVERT(float, dbo.tblInventory_Item.Price), dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item_Category.Name, 
                      dbo.tblInventory_Item_SubCategory.Name
HAVING      (SUM(dbo.tblInventory_Quantity.Quantity) > dbo.tblInventory_Item.MaximumQty) AND (dbo.tblInventory_Item.MaximumQty > '0')
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Receipt_Item_Print_Labels
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Receipt_Item_Print_Labels]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Receipt_Item_Print_Labels]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Receipt_Item_Print_Labels]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Receipt.ID, dbo.tblInventory_Receipt.RecDateTimeUTC AS ReceiptDate, dbo.qrySystem_Locale.FullLocaleName, 
                      CASE WHEN tblInventory_Item.Name IS NULL THEN tblInventory_Receipt_Item.ItemDesc ELSE tblInventory_Item.Name END AS ItemName, 
                      CASE WHEN tblInventory_Item.Description IS NULL THEN tblInventory_Receipt_Item.ItemDesc ELSE tblInventory_Item.Description END AS Description, 
                      dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumber, tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue, CASE WHEN SerialNumber IS NOT NULL 
                      THEN '1' ELSE ReceiptQty END AS ReceiptQty, dbo.tblInventory_Receipt_Item.UnitName, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, 
                      dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, CONVERT(varchar(8000), dbo.tblInventory_Receipt.Comment) AS ReceiptComments, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName
FROM         dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt_Item_SerialNumber ON 
                      tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumberUID RIGHT OUTER JOIN
                      dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt_Item LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Receipt_Item.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Receipt_Item.BatchUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblInventory_Receipt_Item.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblInventory_Receipt_Item_SerialNumber.ReceiptItemUID = dbo.tblInventory_Receipt_Item.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt ON dbo.tblInventory_Receipt_Item.ReceiptUID = dbo.tblInventory_Receipt.UID
ORDER BY dbo.tblInventory_Receipt.ID DESC

GO
--/
-- qryRptSrc_Std_Inventory_Receipt_Items
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Receipt_Items]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Receipt_Items]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Receipt_Items]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Receipt.ID, dbo.tblInventory_Receipt.RecDateTimeUTC AS ReceiptDate, dbo.qrySystem_Locale.FullLocaleName, 
                      dbo.tblContacts_Contacts.FullName AS UserFullName, dbo.tblContacts_Companies.ID AS CompanyID, 
                      dbo.tblContacts_Companies.Name AS CompanyName, dbo.tblPurchasing_PurchaseOrder.POID, dbo.tblPurchasing_PurchaseOrder.PONumber, 
                      dbo.tblInventory_Receipt.ExtPO, CASE WHEN tblInventory_Item.Name IS NULL 
                      THEN tblInventory_Receipt_Item.ItemDesc ELSE tblInventory_Item.Name END AS ItemName, CASE WHEN tblInventory_Item.Description IS NULL 
                      THEN tblInventory_Receipt_Item.ItemDesc ELSE tblInventory_Item.Description END AS Description, 
                      dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
                      dbo.tblInventory_Item.BarcodeValue, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, 
                      dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumber, tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue, 
                      CASE WHEN SerialNumber IS NOT NULL THEN '1' ELSE ReceiptQty END AS ReceiptQty, dbo.tblInventory_Receipt_Item.UnitName, 
                      dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, 
                      CONVERT(varchar(8000), dbo.tblInventory_Receipt.Comment) AS ReceiptComments, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName
FROM         dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt_Item_SerialNumber ON 
                      tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Receipt_Item_SerialNumber.SerialNumberUID RIGHT OUTER JOIN
                      dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt_Item LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Receipt_Item.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Receipt_Item.BatchUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SubCategory.UID = dbo.tblInventory_Item.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblInventory_Receipt_Item.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblInventory_Receipt_Item_SerialNumber.ReceiptItemUID = dbo.tblInventory_Receipt_Item.UID RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblInventory_Receipt ON dbo.tblContacts_Contacts.UID = dbo.tblInventory_Receipt.UserUID ON 
                      dbo.tblInventory_Receipt_Item.ReceiptUID = dbo.tblInventory_Receipt.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Receipt.CompanyUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder ON dbo.tblInventory_Receipt.POUID = dbo.tblPurchasing_PurchaseOrder.UID
ORDER BY dbo.tblInventory_Receipt.ID



GO
--/
-- qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry]
AS
SELECT     TOP (100) PERCENT SUM(CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END) AS Quantity, dbo.tblInventory_Item_Locale.UID
FROM         dbo.tblInventory_Item_Locale LEFT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.tblInventory_Quantity.LocaleUID AND 
                      dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Quantity.ItemUID
GROUP BY dbo.tblInventory_Item_Locale.UID
ORDER BY dbo.tblInventory_Item_Locale.UID

GO
--/
-- qryRptSrc_Std_Inventory_ReOrder_byLocation
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_byLocation]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
                      dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item_Locale.QtyMin, dbo.tblInventory_Item_Locale.QtyMax, dbo.tblInventory_Item.DefaultUnit, 
                      dbo.tblInventory_Item.Type, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, 
                      dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.Quantity, 
                      dbo.tblInventory_Item_Locale.QtyMin - SUM(dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.Quantity) AS Difference, 
                      dbo.tblInventory_Item_Locale.QtyMax - SUM(dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.Quantity) AS MaxQtyToOrder, 
                      dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
                      dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, tblContacts_Companies_1.ID AS SupplierID, tblContacts_Companies_1.Name AS SupplierName, 
                      tblContacts_Companies_1.Phone AS SupplierPhone, dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, 
                      dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, dbo.tblInventory_Item_Supplier.Price AS SupplierPrice, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierUnitMultiplier, 
                      dbo.tblContacts_Companies.ID AS ManufacturerID, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblContacts_Companies.Name AS ManfacturerName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.tblInventory_Item.IsActive
FROM         dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Locale ON dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.UID = dbo.tblInventory_Item_Locale.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblContacts_Companies.UID = dbo.tblInventory_Item.ManufacturerUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item_Supplier.CompanyUID = tblContacts_Companies_1.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
                      dbo.tblInventory_Item_Locale.ItemUID = dbo.tblInventory_Item.UID
GROUP BY dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item_Locale.QtyMin, 
                      dbo.tblInventory_Item_Locale.QtyMax, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.Model, dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item_Category.Name, dbo.tblInventory_Item_SubCategory.Name, 
                      tblContacts_Companies_1.ID, tblContacts_Companies_1.Name, tblContacts_Companies_1.Phone, dbo.tblInventory_Item_Supplier.DefaultSupplier, 
                      dbo.tblInventory_Item_Supplier.PartNumber, dbo.tblInventory_Item_Supplier.LeadTime, dbo.tblInventory_Item_Supplier.Price, dbo.tblInventory_Item_Unit.UnitName, 
                      dbo.tblInventory_Item_Unit.Multiplier, dbo.tblContacts_Companies.ID, dbo.tblContacts_Companies.Name, CONVERT(float, dbo.tblInventory_Item.Price), 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.Quantity, dbo.tblInventory_Item.IsActive
HAVING      (dbo.tblInventory_Item_Locale.QtyMin IS NOT NULL) AND 
                      (dbo.tblInventory_Item_Locale.QtyMin - SUM(dbo.qryRptSrc_Std_Inventory_ReOrder_byLocation_SubQry.Quantity) > '0') AND (dbo.tblInventory_Item.IsActive = 1)
ORDER BY InventoryItem

GO
--/
-- qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry]
AS
SELECT     dbo.tblInventory_Item.UID, SUM(dbo.tblPurchasing_PurchaseOrder_Item.QtyRequested - dbo.tblPurchasing_PurchaseOrder_Item.QtyReceived) 
                      AS QtyOnOrder
FROM         dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder_Item ON dbo.tblInventory_Item.UID = dbo.tblPurchasing_PurchaseOrder_Item.InventoryItemUID
WHERE     (dbo.tblPurchasing_PurchaseOrder_Item.Status <> N'Received')
GROUP BY dbo.tblInventory_Item.UID
HAVING      (SUM(dbo.tblPurchasing_PurchaseOrder_Item.QtyRequested - dbo.tblPurchasing_PurchaseOrder_Item.QtyReceived) > 0)

GO
--/
-- qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry2
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry2]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry2]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry2]
AS
SELECT     TOP (100) PERCENT SUM(CASE WHEN Quantity IS NULL THEN '0' ELSE Quantity END) AS Quantity, dbo.tblInventory_Item.UID
FROM         dbo.tblInventory_Quantity RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID
GROUP BY dbo.tblInventory_Item.UID

GO
--/
-- qryRptSrc_Std_Inventory_ReOrder_Overall
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_ReOrder_Overall]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, 
                      dbo.tblInventory_Item.Type AS InventoryType, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item.MfgPartNumber, SUM(dbo.tblInventory_Quantity.Quantity) 
                      AS Quantity, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, dbo.tblInventory_Item.Model, 
                      dbo.tblInventory_Item.MinimumQty - SUM(dbo.tblInventory_Quantity.Quantity) AS Difference, 
                      dbo.tblInventory_Item.MaximumQty - SUM(dbo.tblInventory_Quantity.Quantity) AS MaxQtyToOrder, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
                      dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, dbo.tblInventory_Item_Supplier.DefaultSupplier AS IsDefaultSupplier, 
                      tblContacts_Companies_1.ID AS SupplierID, tblContacts_Companies_1.Name AS SupplierName, tblContacts_Companies_1.Phone AS SupplierPhone, 
                      dbo.tblInventory_Item_Supplier.PartNumber AS SupplierPartNumber, dbo.tblInventory_Item_Supplier.LeadTime AS SupplierLeadTime, 
                      dbo.tblInventory_Item_Unit.UnitName AS SupplierUnit, dbo.tblInventory_Item_Unit.Multiplier AS SupplierUnitMultiplier, 
                      dbo.tblContacts_Companies.ID AS ManufacturerID, dbo.tblContacts_Companies.Name AS ManufacturerName, CONVERT(float, dbo.tblInventory_Item.Price) AS Price, 
                      CONVERT(float, dbo.tblInventory_Item_Supplier.Price) AS SupplierPrice, dbo.qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry.QtyOnOrder, 
                      dbo.tblInventory_Item.IsActive
FROM         dbo.qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry.UID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblInventory_Item.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Supplier LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit ON dbo.tblInventory_Item_Supplier.OrderByUnitUID = dbo.tblInventory_Item_Unit.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies AS tblContacts_Companies_1 ON dbo.tblInventory_Item_Supplier.CompanyUID = tblContacts_Companies_1.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Supplier.ItemUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID LEFT OUTER JOIN
                      dbo.tblInventory_Quantity ON dbo.tblInventory_Item.UID = dbo.tblInventory_Quantity.ItemUID
GROUP BY dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.Type, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.MinimumQty, dbo.tblInventory_Item.MaximumQty, 
                      dbo.tblInventory_Item.Model, dbo.tblInventory_Item_Category.Name, dbo.tblInventory_Item_SubCategory.Name, tblContacts_Companies_1.ID, 
                      tblContacts_Companies_1.Name, tblContacts_Companies_1.Phone, dbo.tblInventory_Item_Supplier.DefaultSupplier, dbo.tblInventory_Item_Supplier.PartNumber, 
                      dbo.tblInventory_Item_Supplier.LeadTime, dbo.tblInventory_Item_Unit.UnitName, dbo.tblInventory_Item_Unit.Multiplier, dbo.tblContacts_Companies.ID, 
                      dbo.tblContacts_Companies.Name, CONVERT(float, dbo.tblInventory_Item.Price), CONVERT(float, dbo.tblInventory_Item_Supplier.Price), 
                      dbo.qryRptSrc_Std_Inventory_ReOrder_Overall_SubQry.QtyOnOrder, dbo.tblInventory_Item.IsActive
HAVING      (SUM(dbo.tblInventory_Quantity.Quantity) < dbo.tblInventory_Item.MinimumQty) AND (dbo.tblInventory_Item.IsActive = 1)
ORDER BY InventoryItem



GO
--/
-- qryRptSrc_Std_Inventory_Transactions
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Transactions]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Transactions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Transactions]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS InventoryItemName, tblInventory_Item_1.BarcodeValue, tblInventory_Item_1.MfgPartNumber, 
               tblInventory_Item_1.PartNumber, tblInventory_Item_1.Type AS InventoryType, tblInventory_Item_Batch_1.BatchNumber, 
               dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, tblInventory_Item_SerialNumber_1.SerialNumber, 
               tblSystem_Barcode_3.BarcodeValue AS SNBarcodeValue, tblInventory_Item_TransactionLog_1.Username, 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS TransactionDate, tblInventory_Item_TransactionLog_1.TransType, 
               tblInventory_Item_TransactionLog_1.PreviousQuantity, tblInventory_Item_TransactionLog_1.TransQuantity, 
               tblInventory_Item_TransactionLog_1.BalanceQuantity, tblInventory_Item_TransactionLog_1.UnitName AS DefautlUnit, CONVERT(float, 
               tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, tblInventory_Item_TransactionLog_1.UserDepartment, 
               tblInventory_Item_TransactionLog_1.UserDivision, tblInventory_Item_TransactionLog_1.TransTypeRefUID, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblInventory_Item.Name ELSE ' ' END AS KitItemBuilt, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblInventory_Item.BarcodeValue ELSE ' ' END AS KitBarcodeValue, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblInventory_Item_Batch.BatchNumber ELSE ' ' END AS KitBatchNumber, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblSystem_Barcode_1.BarcodeValue ELSE ' ' END AS KitBatchBarcodeValue, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblInventory_Item_SerialNumber.SerialNumber ELSE ' ' END AS KitSerialNumber, 
               CASE WHEN tblInventory_Item.ISKit = 1 THEN tblSystem_Barcode_2.BarcodeValue ELSE ' ' END AS KitSNBarcodeValue, 
               tblInventory_Item_1.Description AS InventoryDescription, dbo.tblInventory_Item_Category.Name AS InventoryCategory, 
               dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) AS TransactionDateOnly, tblInventory_Item_TransactionLog_1.LocaleType, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               CASE tblInventory_Item_TransactionLog_1.LocaleType WHEN 'User' THEN tblContacts_Contacts.FullName ELSE qrySystem_Locale.FullLocaleName END AS LocationName,
                dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblSystem_Barcode AS tblSystem_Barcode_3 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON 
               tblSystem_Barcode_3.ObjectUID = tblInventory_Item_SerialNumber_1.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 ON 
               dbo.tblContacts_Contacts.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               dbo.qrySystem_Locale.UID = tblInventory_Item_TransactionLog_1.LocaleUID ON 
               tblInventory_Item_SerialNumber_1.UID = tblInventory_Item_TransactionLog_1.SerialNumberUID AND 
               tblInventory_Item_SerialNumber_1.ItemUID = tblInventory_Item_TransactionLog_1.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblSystem_Barcode ON tblInventory_Item_Batch_1.UID = dbo.tblSystem_Barcode.ObjectUID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID AND 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_Batch_1.ItemUID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_Batch.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_2 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON tblSystem_Barcode_2.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_SerialNumber.ItemUID AND 
               dbo.tblInventory_Item_TransactionLog.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblInventory_Item_TransactionLog.BatchUID AND 
               dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item_TransactionLog.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item.UID ON 
               tblInventory_Item_TransactionLog_1.TransTypeRefUID = dbo.tblInventory_Item_TransactionLog.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON tblInventory_Item_1.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID
ORDER BY InventoryItemName



GO
--/
-- qryRptSrc_Std_Inventory_Transferred
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Inventory_Transferred]'))
DROP VIEW [dbo].[qryRptSrc_Std_Inventory_Transferred]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Inventory_Transferred]
AS
SELECT TOP (100) PERCENT tblInventory_Item_1.Name AS InventoryItemName, tblInventory_Item_1.Description AS InventoryDescription, 
               dbo.tblInventory_Item_Category.Name AS InventoryCategory, dbo.tblInventory_Item_SubCategory.Name AS InventorySubCategory, 
               tblInventory_Item_1.BarcodeValue, tblInventory_Item_1.DefaultUnit, tblInventory_Item_1.MfgPartNumber, tblInventory_Item_1.PartNumber, 
               tblInventory_Item_1.Type AS InventoryType, tblInventory_Item_Batch_1.BatchNumber, dbo.tblSystem_Barcode.BarcodeValue AS BatchBarcodeValue, 
               tblInventory_Item_SerialNumber_1.SerialNumber, tblSystem_Barcode_1.BarcodeValue AS SNBarcodeValue, tblInventory_Item_TransactionLog_1.Username, 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS TransferDate, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), tblInventory_Item_TransactionLog_1.TransDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               tblInventory_Item_TransactionLog_1.TransDateTimeUTC)))) AS TransferDateOnly, tblInventory_Item_TransactionLog_1.PreviousQuantity, 
               tblInventory_Item_TransactionLog_1.TransQuantity, tblInventory_Item_TransactionLog_1.BalanceQuantity, CONVERT(float, 
               tblInventory_Item_TransactionLog_1.UnitPrice) AS Price, 
               tblInventory_Item_TransactionLog_1.TransQuantity * tblInventory_Item_TransactionLog_1.UnitPrice * - 1 AS TotalCost, CONVERT(varchar(8000), 
               tblInventory_Item_TransactionLog_1.Comments) AS TransactionComments, qrySystem_Locale_1.CampusName AS FromCampus, 
               qrySystem_Locale_1.BuildingName AS FromBuilding, qrySystem_Locale_1.FloorName AS FromFloor, qrySystem_Locale_1.RoomName AS FromRoom, 
               qrySystem_Locale_1.LocationName AS FromLocation, qrySystem_Locale_1.FullLocaleName AS FromFullLocaleName, 
               tblInventory_Item_TransactionLog_1.UserDepartment, tblInventory_Item_TransactionLog_1.UserDivision, tblInventory_Item_TransactionLog_1.TransType, 
               dbo.qrySystem_Locale.CampusName AS ToCampus, dbo.qrySystem_Locale.BuildingName AS ToBuilding, dbo.qrySystem_Locale.FloorName AS ToFloor, 
               dbo.qrySystem_Locale.RoomName AS ToRoom, dbo.qrySystem_Locale.LocationName AS ToLocation, 
               dbo.qrySystem_Locale.FullLocaleName AS ToFullLocaleName
FROM  dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 LEFT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON dbo.qrySystem_Locale.UID = dbo.tblInventory_Item_TransactionLog.LocaleUID ON 
               tblInventory_Item_TransactionLog_1.TransTypeRefUID = dbo.tblInventory_Item_TransactionLog.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON tblInventory_Item_TransactionLog_1.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 ON tblSystem_Barcode_1.ObjectUID = tblInventory_Item_SerialNumber_1.UID ON 
               tblInventory_Item_TransactionLog_1.SerialNumberUID = tblInventory_Item_SerialNumber_1.UID LEFT OUTER JOIN
               dbo.tblSystem_Barcode RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON dbo.tblSystem_Barcode.ObjectUID = tblInventory_Item_Batch_1.UID ON 
               tblInventory_Item_TransactionLog_1.BatchUID = tblInventory_Item_Batch_1.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SubCategory RIGHT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item_SubCategory.UID = tblInventory_Item_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category ON tblInventory_Item_1.CategoryUID = dbo.tblInventory_Item_Category.UID ON 
               tblInventory_Item_TransactionLog_1.ItemUID = tblInventory_Item_1.UID
WHERE (tblInventory_Item_TransactionLog_1.TransType = 'TransferFrom')
ORDER BY InventoryItemName



GO
--/
--/

-- ** Locales

-- qryRptSrc_Std_Locale_Cheat_Sheet
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Locale_Cheat_Sheet]'))
DROP VIEW [dbo].[qryRptSrc_Std_Locale_Cheat_Sheet]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Locale_Cheat_Sheet]
AS
SELECT     Name, LabelValue, CampusName, BuildingName, FloorName, RoomName, LocationName, FullLocaleName
FROM         dbo.qrySystem_Locale



GO
--/
-- qryRptSrc_Std_Locale_Management_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Locale_Management_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Locale_Management_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Locale_Management_SubQry]
AS
SELECT     dbo.tblSystem_Locale.UID, CASE WHEN UseSystemTimeZone = 'True' THEN
                          (SELECT     Value
                            FROM          dbo.tblSystem_Info
                            WHERE      (Name = 'timezone')) ELSE tblSystem_Locale.TimeZone END AS TimeZone
FROM         dbo.tblSystem_Locale LEFT OUTER JOIN
                      dbo.tblSystem_Info ON dbo.tblSystem_Locale.TimeZone = dbo.tblSystem_Info.Name
WHERE     (dbo.tblSystem_Locale.ParentUID = '00000000-0000-0000-0000-000000000000')


GO
--/
-- qryRptSrc_Std_Locale_Management
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Locale_Management]'))
DROP VIEW [dbo].[qryRptSrc_Std_Locale_Management]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Locale_Management]
AS
SELECT     dbo.qrySystem_Locale.Type, dbo.qrySystem_Locale.Description, dbo.qrySystem_Locale.LabelValue, dbo.qrySystem_Locale.AllAccess, 
                      CASE WHEN tblContacts_Contact_Group.Name IS NULL THEN 'N/A-All Access' ELSE tblContacts_Contact_Group.Name END AS AccessGroupName, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.qrySystem_Locale.UseSystemTimeZone, dbo.qrySystem_Locale.IsInventory, 
                      CONVERT(nvarchar, dbo.qryRptSrc_Std_Locale_Management_SubQry.TimeZone) AS TimeZone
FROM         dbo.tblContacts_Contact_Group RIGHT OUTER JOIN
                      dbo.tblContacts_Contact_GroupAccess ON dbo.tblContacts_Contact_Group.UID = dbo.tblContacts_Contact_GroupAccess.GroupUID RIGHT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblContacts_Contact_GroupAccess.ObjectUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_Locale_Management_SubQry ON dbo.qrySystem_Locale.CampusUID = dbo.qryRptSrc_Std_Locale_Management_SubQry.UID
GROUP BY dbo.qrySystem_Locale.Type, dbo.qrySystem_Locale.Description, dbo.qrySystem_Locale.LabelValue, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName, dbo.qrySystem_Locale.UID, dbo.qrySystem_Locale.AllAccess, CASE WHEN tblContacts_Contact_Group.Name IS NULL 
                      THEN 'N/A-All Access' ELSE tblContacts_Contact_Group.Name END, dbo.qrySystem_Locale.UseSystemTimeZone, dbo.qrySystem_Locale.IsInventory, 
                      CONVERT(nvarchar, dbo.qryRptSrc_Std_Locale_Management_SubQry.TimeZone)


GO
--/
--/

-- ** Production

-- qryRptSrc_Std_Production_Log
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Production_Log]'))
DROP VIEW [dbo].[qryRptSrc_Std_Production_Log]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Production_Log]
AS
SELECT dbo.tblProduction_Log.LogDateTimeUTC AS LogDate, dbo.tblProduction_Log.ProductionTime, dbo.tblProduction_Log.Username, 
               dbo.tblProduction_Capacity.Product, dbo.tblProduction_Capacity.Units, dbo.tblProduction_Capacity.Quantity, dbo.tblProduction_Capacity.Time, 
               dbo.tblAssetManagement_Assets.ID, CONVERT(varchar, dbo.tblAssetManagement_Assets.Description) AS Description, dbo.tblProduction_Log.TotalUnits, 
               dbo.tblProduction_Log.DefectiveUnits, dbo.tblProduction_Log.Comments, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblProduction_Log.LogDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblProduction_Log.LogDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblProduction_Log.LogDateTimeUTC)))) AS DateOnly
FROM  dbo.tblProduction_Capacity LEFT OUTER JOIN
               dbo.tblProduction_Log ON dbo.tblProduction_Capacity.UID = dbo.tblProduction_Log.CapacityUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblProduction_Capacity.AssetUID = dbo.tblAssetManagement_Assets.UID

GO
--/
--/

-- ** Purchasing

-- qryRptSrc_Std_Purchasing_Purchase_Order
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Purchasing_Purchase_Order]'))
DROP VIEW [dbo].[qryRptSrc_Std_Purchasing_Purchase_Order]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Purchasing_Purchase_Order]
AS

SELECT     TOP (100) PERCENT dbo.tblPurchasing_PurchaseOrder.POID, dbo.tblPurchasing_PurchaseOrder.PONumber, dbo.tblPurchasing_PurchaseOrder.Name, 
                      dbo.tblPurchasing_PurchaseOrder.Description, dbo.tblPurchasing_PurchaseOrder.Status, dbo.tblContacts_Companies.ID AS SupplierID, 
                      dbo.tblContacts_Companies.Name AS SupplierName, dbo.tblPurchasing_PurchaseOrder.EffectiveDate, 
                      dbo.tblPurchasing_PurchaseOrder.RequiredDate AS DateRequired, dbo.tblPurchasing_PurchaseOrder_Item.ItemIndex, 
                      dbo.tblPurchasing_PurchaseOrder_Item.ItemName, dbo.tblPurchasing_PurchaseOrder_Item.ItemDesc, 
                      dbo.tblPurchasing_PurchaseOrder_Item.ItemMfg, dbo.tblPurchasing_PurchaseOrder_Item.Unit, dbo.tblPurchasing_PurchaseOrder_Item.UnitPrice, 
                      dbo.tblPurchasing_PurchaseOrder_Item.QtyRequested, dbo.tblPurchasing_PurchaseOrder_Item.QtyReceived, 
                      dbo.tblPurchasing_PurchaseOrder_Item.TotalPrice, CASE WHEN tblPurchasing_PurchaseOrder_Item.Status IS NULL 
                      THEN 'Pending' ELSE tblPurchasing_PurchaseOrder_Item.Status END AS ItemStatus, dbo.tblPurchasing_PurchaseOrder.ShipToName, 
                      dbo.tblPurchasing_PurchaseOrder.ShipToAddress, dbo.tblPurchasing_PurchaseOrder.ShipToCity, dbo.tblPurchasing_PurchaseOrder.ShipToState, 
                      dbo.tblPurchasing_PurchaseOrder.ShipToZip, dbo.tblPurchasing_PurchaseOrder.BillToName, dbo.tblPurchasing_PurchaseOrder.BillToAddress, 
                      dbo.tblPurchasing_PurchaseOrder.BillToCity, dbo.tblPurchasing_PurchaseOrder.BillToState, dbo.tblPurchasing_PurchaseOrder.BillToZip, 
                      dbo.tblPurchasing_PurchaseOrder.Carrier, dbo.tblPurchasing_PurchaseOrder.MethodOfShipment, 
                      dbo.tblPurchasing_PurchaseOrder.InsuranceRequired, dbo.tblPurchasing_PurchaseOrder.BlanketPONum, 
                      dbo.tblPurchasing_PurchaseOrder.RequestorName, dbo.tblPurchasing_PurchaseOrder.RequestorEmail, 
                      dbo.tblPurchasing_PurchaseOrder.RequestorPhone, dbo.tblPurchasing_PurchaseOrder.RequestorDept, 
                      dbo.tblPurchasing_PurchaseOrder.ReleasedBy, dbo.tblPurchasing_PurchaseOrder.ReleasedDateTimeUTC AS ReleasedDate, 
                      dbo.tblPurchasing_PurchaseOrder.IsDeleted, dbo.tblPurchasing_PurchaseOrder.TaxStatus, dbo.tblPurchasing_PurchaseOrder.Type, 
                      dbo.tblPurchasing_PurchaseOrder.ExpirationDate, CONVERT(varchar(8000), dbo.tblPurchasing_PurchaseOrder.Comments) AS POComments, 
                      dbo.tblPurchasing_PurchaseOrder_Item.ItemMfgPartNum, dbo.tblContacts_Companies.Street AS SupplierStreet, 
                      dbo.tblContacts_Companies.City AS SupplierCity, dbo.tblContacts_Companies.State AS SupplierState, dbo.tblContacts_Companies.Zip AS SupplierZip, 
                      dbo.tblContacts_Companies.Country AS SupplierCountry, dbo.tblContacts_Companies.Phone AS SupplierPhone, 
                      dbo.tblContacts_Companies.Fax AS SupplierFax, dbo.tblPurchasing_Requisition.ReqID, dbo.tblPurchasing_Requisition.ReqNumber, 
                      dbo.tblPurchasing_AccountNumber.Name AS AccountNumber, dbo.tblInventory_Item.Type AS ItemType, 
                      dbo.tblInventory_Item_Category.Name AS ItemCategory, dbo.tblInventory_Item_SubCategory.Name AS ItemSubCategory, 
                      dbo.tblInventory_Item.PartNumber AS ItemPartNumber, dbo.tblInventory_Item.BarcodeValue AS ItemBarcodeValue, 
                      dbo.tblPurchasing_Location.Name AS PO_Location
FROM         dbo.tblContacts_Companies RIGHT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder LEFT OUTER JOIN
                      dbo.tblPurchasing_Location ON dbo.tblPurchasing_PurchaseOrder.LocationUID = dbo.tblPurchasing_Location.UID ON 
                      dbo.tblContacts_Companies.UID = dbo.tblPurchasing_PurchaseOrder.SupplierUID LEFT OUTER JOIN
                      dbo.tblInventory_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item.SubCategoryUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Category ON dbo.tblInventory_Item.CategoryUID = dbo.tblInventory_Item_Category.UID RIGHT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder_Item ON dbo.tblInventory_Item.UID = dbo.tblPurchasing_PurchaseOrder_Item.InventoryItemUID LEFT OUTER JOIN
                      dbo.tblPurchasing_AccountNumber ON 
                      dbo.tblPurchasing_PurchaseOrder_Item.AccountNumberUID = dbo.tblPurchasing_AccountNumber.UID LEFT OUTER JOIN
                      dbo.tblPurchasing_Requisition_Item LEFT OUTER JOIN
                      dbo.tblPurchasing_Requisition ON dbo.tblPurchasing_Requisition_Item.RequisitionUID = dbo.tblPurchasing_Requisition.UID ON 
                      dbo.tblPurchasing_PurchaseOrder_Item.ReqItemUID = dbo.tblPurchasing_Requisition_Item.UID ON 
                      dbo.tblPurchasing_PurchaseOrder.UID = dbo.tblPurchasing_PurchaseOrder_Item.POUID
ORDER BY dbo.tblPurchasing_PurchaseOrder.PONumber, dbo.tblPurchasing_PurchaseOrder.Name, dbo.tblPurchasing_PurchaseOrder_Item.ItemIndex


GO
--/
-- qryRptSrc_Std_Purchasing_Requisition_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Purchasing_Requisition_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_Purchasing_Requisition_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Purchasing_Requisition_SubQry]
AS
SELECT     dbo.tblInventory_Item_Locale.ItemUID, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
                      dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM         dbo.tblInventory_Item_Locale LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Item_Locale.LocaleUID = dbo.qrySystem_Locale.UID
WHERE     (dbo.tblInventory_Item_Locale.IsDefault = 1)


GO
--/
-- qryRptSrc_Std_Purchasing_Requisition
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Purchasing_Requisition]'))
DROP VIEW [dbo].[qryRptSrc_Std_Purchasing_Requisition]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Purchasing_Requisition]
AS
SELECT     dbo.tblPurchasing_Requisition.ReqID, dbo.tblPurchasing_Requisition.ReqNumber, dbo.tblPurchasing_Requisition.EffectiveDate, 
                      dbo.tblPurchasing_Requisition.ExpirationDate, dbo.tblPurchasing_Requisition.Name, dbo.tblPurchasing_Requisition.Status AS ReqStatus, 
                      dbo.tblPurchasing_Requisition.Description, dbo.tblPurchasing_Requisition.Priority, dbo.tblPurchasing_Requisition.Type, 
                      dbo.tblPurchasing_Requisition.RequiredDate AS DateRequired, CONVERT(varchar(8000), dbo.tblPurchasing_Requisition.Comments) AS Comments, 
                      dbo.tblPurchasing_Requisition.ShipToName, dbo.tblPurchasing_Requisition.ShipToAddress, dbo.tblPurchasing_Requisition.ShipToCity, 
                      dbo.tblPurchasing_Requisition.ShipToState, dbo.tblPurchasing_Requisition.ShipToZip, dbo.tblPurchasing_Requisition.Carrier, 
                      dbo.tblPurchasing_Requisition.MethodOfShipment, dbo.tblPurchasing_Requisition.InsuranceRequired, dbo.tblPurchasing_Requisition.RequestorName, 
                      dbo.tblPurchasing_Requisition.RequestorEmail, dbo.tblPurchasing_Requisition.RequestorPhone, dbo.tblPurchasing_Requisition.RequestorDept, 
                      dbo.tblPurchasing_Requisition.ApprovedBy, dbo.tblPurchasing_Requisition.IsDeleted, dbo.tblPurchasing_Location.Name AS ReqLocation, 
                      dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblPurchasing_Requisition_Item.ItemName, 
                      dbo.tblPurchasing_Requisition_Item.ItemDesc, dbo.tblPurchasing_Requisition_Item.ItemMfg, dbo.tblPurchasing_Requisition_Item.SupplierName, 
                      dbo.tblPurchasing_Requisition_Item.SupplierPartNum, dbo.tblPurchasing_Requisition_Item.Unit, dbo.tblPurchasing_Requisition_Item.UnitPrice, 
                      dbo.tblPurchasing_Requisition_Item.QtyRequested, dbo.tblPurchasing_Requisition_Item.QtyReceived, dbo.tblPurchasing_Requisition_Item.TotalPrice, 
                      dbo.tblPurchasing_Requisition_Item.Status AS ItemStatus, dbo.tblPurchasing_Requisition_Item.ItemMfgPartNum, dbo.tblContacts_Companies.ID AS SupplierID, 
                      dbo.tblPurchasing_PurchaseOrder.POID, dbo.tblPurchasing_PurchaseOrder.PONumber, dbo.tblContacts_Companies.Street AS SupplierStreet, 
                      dbo.tblContacts_Companies.City AS SupplierCity, dbo.tblContacts_Companies.State AS SupplierState, dbo.tblContacts_Companies.Zip AS SupplierZip, 
                      dbo.tblContacts_Companies.Country AS SupplierCountry, dbo.tblContacts_Companies.Phone AS SupplierPhone, dbo.tblContacts_Companies.Fax AS SupplierFax, 
                      dbo.tblPurchasing_AccountNumber.Name AS AccountNumber, dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.CampusName AS CampusNameDefault, 
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.BuildingName AS BuildingNameDefault, 
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.FloorName AS FloorNameDefault, 
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.RoomName AS RoomNameDefault, 
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.LocationName AS LocationNameDefault, 
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.FullLocaleName AS FullLocaleNameDefault
FROM         dbo.tblPurchasing_AccountNumber RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry RIGHT OUTER JOIN
                      dbo.tblPurchasing_Requisition_Item ON dbo.qryRptSrc_Std_Purchasing_Requisition_SubQry.ItemUID = dbo.tblPurchasing_Requisition_Item.InventoryItemUID ON 
                      dbo.tblPurchasing_AccountNumber.UID = dbo.tblPurchasing_Requisition_Item.AccountNumberUID LEFT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder_Item LEFT OUTER JOIN
                      dbo.tblPurchasing_PurchaseOrder ON dbo.tblPurchasing_PurchaseOrder_Item.POUID = dbo.tblPurchasing_PurchaseOrder.UID ON 
                      dbo.tblPurchasing_Requisition_Item.POItemUID = dbo.tblPurchasing_PurchaseOrder_Item.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON dbo.tblPurchasing_Requisition_Item.SupplierUID = dbo.tblContacts_Companies.UID RIGHT OUTER JOIN
                      dbo.tblPurchasing_Requisition ON dbo.tblPurchasing_Requisition_Item.RequisitionUID = dbo.tblPurchasing_Requisition.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
                      dbo.tblPurchasing_Requisition.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder.AssetUID ON 
                      dbo.tblPurchasing_Requisition.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
                      dbo.tblPurchasing_Location ON dbo.tblPurchasing_Requisition.LocationUID = dbo.tblPurchasing_Location.UID
					  

GO
--/
--/

-- ** Reporting

-- qryRptSrc_Std_Reports
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Reports]'))
DROP VIEW [dbo].[qryRptSrc_Std_Reports]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Reports]
AS
SELECT     TOP (100) PERCENT dbo.tblReports_Report.Name AS ReportName, dbo.tblReports_Report.Description, dbo.tblReports_Report.Folder, 
                      dbo.tblReports_Report.SubFolder, dbo.tblReports_DataSource.Name AS DataSource, dbo.tblReports_Report.Title, dbo.tblReports_Report.AccessType, 
                      tblContacts_Contacts_1.FullName AS OwnerName, dbo.tblReports_Report.LastViewedBy, 
                      dbo.tblReports_Report.LastViewedDateTimeUTC AS LastViewedDate, dbo.tblReports_Report.RenderFormat, 
                      dbo.tblReports_Report_AccessGroups.AccessType AS TypeOfAccess, 
                      CASE WHEN tblReports_Report_AccessGroups.AccessType = 'User' THEN tblContacts_Contacts.FullName ELSE tblContacts_Contact_Group.Name END
                       AS GroupOrUser
FROM         dbo.tblReports_Report_AccessGroups LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblReports_Report_AccessGroups.AccessGroupUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblReports_Report_AccessGroups.AccessGroupUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.tblReports_Report ON dbo.tblReports_Report_AccessGroups.ReportUID = dbo.tblReports_Report.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblReports_Report.OwnerUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
                      dbo.tblReports_DataSource ON dbo.tblReports_Report.DataSourceUID = dbo.tblReports_DataSource.UID
ORDER BY ReportName



GO
--/
-- qryRptSrc_Std_Reports_Subscriptions
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Reports_Subscriptions]'))
DROP VIEW [dbo].[qryRptSrc_Std_Reports_Subscriptions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Reports_Subscriptions]
AS
SELECT     dbo.tblReports_Report_Subscriptions.Name AS SubscriptionName, dbo.tblReports_Report_Subscriptions.Active, 
                      dbo.tblReports_Report_Subscriptions.Type AS SubscriptionType, 
                      CASE WHEN tblReports_Report_Subscriptions.Type = 'Email' THEN tblReports_Report_Subscriptions.EmailAttachment ELSE 'None' END AS EmailAttachment,
                       CASE WHEN tblReports_Report_Subscriptions.Type = 'File' THEN tblReports_Report_Subscriptions.FileType ELSE 'None' END AS FileType, 
                      dbo.tblReports_Report_Subscriptions.NextSendDate, dbo.tblReports_Report_Subscriptions.ScheduleOccurs, 
                      dbo.tblReports_Report_Subscriptions.ScheduleInterval, dbo.tblReports_Report_Subscriptions.ScheduleOccurance, 
                      dbo.tblReports_Report_Subscriptions.ScheduleDays, dbo.tblReports_Report_Subscriptions.ScheduleMonths, 
                      dbo.tblReports_Report_Subscriptions.ScheduleName, dbo.tblReports_Report.Name AS ReportName, 
                      dbo.tblReports_Report.Description AS ReportDescription, dbo.tblReports_Report.Folder, dbo.tblReports_Report.SubFolder, 
                      tblContacts_Contacts_1.FullName AS ReportOwner, dbo.tblReports_Report_Subscriptions_Recipients.Type AS RecipientType, 
                      CASE WHEN tblReports_Report_Subscriptions_Recipients.Type = 'Group' THEN dbo.tblContacts_Contact_Group.Name ELSE 'None' END AS RecipientGroup,
                       CASE WHEN tblReports_Report_Subscriptions_Recipients.Type = 'Address' THEN tblReports_Report_Subscriptions_Recipients.EmailAddress ELSE CASE
                       WHEN tblReports_Report_Subscriptions_Recipients.Type = 'User' THEN tblContacts_Contacts_2.FullName ELSE tblContacts_Contacts.FullName END END
                       AS Recipient, CASE WHEN tblReports_Report_Subscriptions.Type = 'Printer' THEN tblSystem_Printer.PrinterName ELSE 'None' END AS PrinterName, 
                      CASE WHEN tblReports_Report_Subscriptions.Type = 'File' THEN tblReports_Report_Subscriptions.FilePath ELSE 'None' END AS FilePath, 
                      CASE WHEN tblReports_Report_Subscriptions.Type = 'File' THEN tblReports_Report_Subscriptions.FileName ELSE 'None' END AS FileName, 
                      CASE WHEN tblReports_Report_Subscriptions.Type = 'File' THEN tblReports_Report_Subscriptions.FileOverwrite ELSE 'False' END AS FileOverwrite
FROM         dbo.tblReports_Report LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblReports_Report.OwnerUID = tblContacts_Contacts_1.UID RIGHT OUTER JOIN
                      dbo.tblContacts_Contact_GroupMember RIGHT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupMember.GroupUID = dbo.tblContacts_Contact_Group.UID RIGHT OUTER JOIN
                      dbo.tblReports_Report_Subscriptions_Recipients LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_2 ON dbo.tblReports_Report_Subscriptions_Recipients.EmailUID = tblContacts_Contacts_2.UID ON 
                      dbo.tblContacts_Contact_Group.UID = dbo.tblReports_Report_Subscriptions_Recipients.EmailUID RIGHT OUTER JOIN
                      dbo.tblSystem_Printer RIGHT OUTER JOIN
                      dbo.tblReports_Report_Subscriptions ON dbo.tblSystem_Printer.UID = dbo.tblReports_Report_Subscriptions.PrinterUID ON 
                      dbo.tblReports_Report_Subscriptions_Recipients.SubscriptionUID = dbo.tblReports_Report_Subscriptions.UID ON 
                      dbo.tblReports_Report.UID = dbo.tblReports_Report_Subscriptions.ReportUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblContacts_Contact_GroupMember.ContactUID = dbo.tblContacts_Contacts.UID



GO
--/
--/

-- ** SPC Data Collection

-- qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery
DROP VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery]
AS
SELECT     dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.USL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Target, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LSL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.URL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LRL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cp, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cpk, dbo.tblSystem_Attribute_CollectionInstanceDataSample.NewCL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.NewStat, dbo.tblSystem_Attribute_CollectionInstanceDataSample.HasViolations, CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations) AS Violations, CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.AssignableCause) AS AssignableCause, CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CorrectiveAction) AS CorrectiveAction, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Exclude, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, dbo.tblSystem_Attribute_CollectionInstanceDataSample.SupervisorName, 
                      MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Range, 
                      AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) AS Mean, ABS(AVG(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      -
                          (SELECT     AVG(p.ValueCurrent) AS Expr1
                            FROM          dbo.tblSystem_Attribute_CollectionInstanceDataSample AS s INNER JOIN
                                                   dbo.tblSystem_Attribute_CollectionInstanceDataPoint AS p ON s.UID = p.SampleUID
                            WHERE      (s.GroupItemUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID) AND 
                                                   (s.[Index] = dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index] - (MAX(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                                                   - MIN(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) - 1)))) AS MovingRange, CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Comments) AS Comments, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLS, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLS, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLS, 
                      CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END AS Acknowledged, CONVERT(varchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Terminator) AS Terminator, STDEV(dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent) 
                      AS StandardDeviation
FROM         dbo.tblSystem_Attribute_CollectionInstanceDataPoint INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID
GROUP BY dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.GroupItemUID, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CollectionInstanceUID, dbo.tblSystem_Attribute_CollectionInstanceDataSample.[Index], 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLX, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLX, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.USL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Target, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LSL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.URL, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LRL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cp, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cpk, dbo.tblSystem_Attribute_CollectionInstanceDataSample.SupervisorName, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.NewCL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.NewStat, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.HasViolations, CONVERT(nvarchar(MAX), dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations), 
                      CONVERT(nvarchar(MAX), dbo.tblSystem_Attribute_CollectionInstanceDataSample.AssignableCause), CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CorrectiveAction), dbo.tblSystem_Attribute_CollectionInstanceDataSample.Exclude, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLS, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CLS, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLS, CONVERT(nvarchar(MAX), 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Comments), 
                      CASE WHEN dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged = '0' THEN 'False' ELSE 'True' END, CONVERT(varchar, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Terminator)



GO
--/
-- qryRptSrc_Std_SPC_Data_Charts_WIP
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_SPC_Data_Charts_WIP]'))
DROP VIEW [dbo].[qryRptSrc_Std_SPC_Data_Charts_WIP]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_SPC_Data_Charts_WIP]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableGroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      dbo.tblSystem_Attribute_GroupItem.SampleSize, dbo.tblSystem_Attribute_GroupItem.CalculatedLimits, dbo.tblSystem_Attribute_GroupItem.CalculateByAllData, 
                      dbo.tblSystem_Attribute_GroupItem.CalculateLastNSubGroups, dbo.tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.IsActive AS IsGroupItemActive, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
                      dbo.tblSystem_Attribute_Collection.IsActive AS IsCollectionActive, dbo.tblSystem_Attribute_GroupItem.DataType, tblSystem_AuditSummary_1.UpdatedByUser, 
                      tblSystem_AuditSummary_1.CreatedByUser, tblSystem_AuditSummary_1.CreatedOnDateTimeUTC, tblSystem_AuditSummary_1.UpdatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.TableName, CONVERT(DATETIME, CONVERT(varchar, MONTH(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC))) AS CreatedOnDateOnly, CONVERT(DATETIME, CONVERT(varchar, 
                      MONTH(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC))) AS UpdatedOnDateOnly, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.[Index], 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLX, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLR, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.USL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Target, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LSL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.URL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LRL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cp, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cpk, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewCL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewStat, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.HasViolations, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Violations, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.AssignableCause, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CorrectiveAction, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Modified, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.SupervisorName, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Range, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.MovingRange, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Comments, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLS, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Acknowledged, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Terminator, 
                      dbo.tblWIP_WorkOrder.ID AS WIPWOID, dbo.tblWIP_WorkOrder.Number AS WIPWONumber, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Operation.Name AS OperationName, 
                      dbo.tblWIP_Operation.Name + ' / Rev: ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
                      tblInventory_Item_Batch_1.BatchNumber AS BatchCollectedTo, tblInventory_Item_1.Name AS BatchItemCollectedTo, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber AS SNCollectedTo, tblInventory_Item_2.Name AS SNItemCollectedTo, 
                      dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber, dbo.tblInventory_Item.Name AS MainProduct, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.StandardDeviation, 
                      CASE WHEN qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude = 'True' THEN NULL 
                      ELSE qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean END AS XbarForCalcs
FROM         dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
                      dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Step.WorkOrderUID ON 
                      dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
                      dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON dbo.tblInventory_Item_SerialNumber.ItemUID = tblInventory_Item_2.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_CollectData ON dbo.tblInventory_Item_SerialNumber.UID = dbo.tblWIP_WorkOrder_Event_CollectData.ItemSNUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON tblInventory_Item_Batch_1.ItemUID = tblInventory_Item_1.UID ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.ItemBatchUID = tblInventory_Item_Batch_1.UID ON 
                      dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_CollectData.EventUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CollectionInstanceUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary AS tblSystem_AuditSummary_1 ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = tblSystem_AuditSummary_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID
WHERE     (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC')) AND 
                      (dbo.tblSystem_AuditSummary.TableName = N'tblWIP_WorkOrder_Event_CollectData')
ORDER BY tblSystem_AuditSummary_1.CreatedOnDateTimeUTC DESC, WIPWOID DESC, VariableGroupName

GO
--/
-- qryRptSrc_Std_SPC_Data_Collection_Sample_NonWIP_Assets
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_NonWIP_Assets]'))
DROP VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_NonWIP_Assets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_NonWIP_Assets]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, 
                      dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableGroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      tblSystem_AuditSummary_1.CreatedOnDateTimeUTC, tblSystem_AuditSummary_1.CreatedByUser, tblSystem_AuditSummary_1.UpdatedOnDateTimeUTC, 
                      tblSystem_AuditSummary_1.UpdatedByUser, dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupSequence, dbo.tblSystem_Attribute_GroupItem.Row, 
                      dbo.tblSystem_Attribute_GroupItem.[Column], dbo.tblSystem_Attribute_GroupItem.SampleSize, dbo.tblSystem_Attribute_GroupItem.CalculatedLimits, 
                      dbo.tblSystem_Attribute_GroupItem.CalculateByAllData, dbo.tblSystem_Attribute_GroupItem.CalculateLastNSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.[Index], dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLX, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLX, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLR, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLR, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.USL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Target, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LSL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.URL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LRL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cp, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cpk, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewCL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewStat, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.HasViolations, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Violations, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.AssignableCause, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CorrectiveAction, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Modified, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.SupervisorName, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Range, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.MovingRange, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Comments, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLS, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLS, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Acknowledged, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Terminator, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.StandardDeviation, 
                      CASE WHEN qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude = 'True' THEN NULL 
                      ELSE qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean END AS XbarForCalcs
FROM         dbo.tblSystem_Attribute_GroupItem RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.GroupItemUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary AS tblSystem_AuditSummary_1 ON dbo.tblSystem_Attribute_CollectionInstance.UID = tblSystem_AuditSummary_1.UID ON 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID ON 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID AND 
                      dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblSystem_Attribute_GroupItem.DataType = N'SPC') AND (dbo.tblSystem_Attribute_Collection.IsActive = 1) AND (dbo.tblSystem_Attribute_Group.IsActive = 1) AND 
                      (dbo.tblSystem_Attribute_GroupItem.IsActive = 1) AND (dbo.tblSystem_Attribute_CollectionGroup.IsActive = 1)
ORDER BY AssetID, CollectionName, tblSystem_AuditSummary_1.CreatedOnDateTimeUTC, GroupSequence, dbo.tblSystem_Attribute_GroupItem.Row, 
                      dbo.tblSystem_Attribute_GroupItem.[Column]

GO
--/
-- qryRptSrc_Std_SPC_Data_Collection_Sample_with_NonWIP_Objects  59220
DROP VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_with_NonWIP_Objects]
GO


CREATE VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_with_NonWIP_Objects]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableGroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      dbo.tblSystem_Attribute_GroupItem.SampleSize, dbo.tblSystem_Attribute_GroupItem.CalculatedLimits, dbo.tblSystem_Attribute_GroupItem.CalculateByAllData, 
                      dbo.tblSystem_Attribute_GroupItem.CalculateLastNSubGroups, dbo.tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.IsActive AS IsGroupItemActive, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
                      dbo.tblSystem_Attribute_Collection.IsActive AS IsCollectionActive, dbo.tblSystem_Attribute_GroupItem.DataType, tblSystem_AuditSummary_1.UpdatedByUser, 
                      tblSystem_AuditSummary_1.CreatedByUser, tblSystem_AuditSummary_1.CreatedOnDateTimeUTC, tblSystem_AuditSummary_1.UpdatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.TableName, CASE WHEN tblAssetManagement_Assets_1.UID IS NOT NULL 
                      THEN 'Asset' ELSE CASE WHEN tblWorkTracking_WorkOrder_1.UID IS NOT NULL THEN 'Work Order' ELSE CASE WHEN tblInventory_Item_Batch.UID IS NOT NULL 
                      THEN 'Batch #' ELSE CASE WHEN tblWorkTracking_WorkOrder_Step_1.UID IS NOT NULL 
                      THEN 'Work Order Step' ELSE CASE WHEN tblInventory_Item_2.UID IS NOT NULL 
                      THEN 'Inventory Item' ELSE CASE WHEN tblInventory_Item_SerialNumber.UID IS NOT NULL 
                      THEN 'Serial Number' ELSE 'Other' END END END END END END AS ObjectType, CASE WHEN tblAssetManagement_Assets_1.UID IS NOT NULL 
                      THEN tblAssetManagement_Assets.ID ELSE CASE WHEN tblWorkTracking_WorkOrder_1.UID IS NOT NULL THEN CONVERT(varchar, 
                      tblWorkTracking_WorkOrder_1.ID) ELSE CASE WHEN tblInventory_Item_Batch.UID IS NOT NULL 
                      THEN 'Batch#: ' + tblInventory_Item_Batch.BatchNumber + ' / Item: ' + tblInventory_Item_1.Name ELSE CASE WHEN tblWorkTracking_WorkOrder_Step_1.UID IS NOT NULL
                       THEN CONVERT(varchar, tblWorkTracking_WorkOrder_2.ID) ELSE CASE WHEN tblInventory_Item_2.UID IS NOT NULL 
                      THEN tblInventory_Item_2.Name ELSE CASE WHEN tblInventory_Item_SerialNumber.UID IS NOT NULL 
                      THEN 'SN#: ' + tblInventory_Item_SerialNumber.SerialNumber + ' / Item: ' + tblInventory_Item.Name ELSE 'Other' END END END END END END AS ObjectID, 
                      CASE WHEN tblAssetManagement_Assets_1.UID IS NOT NULL 
                      THEN tblAssetManagement_Assets.Description ELSE CASE WHEN tblWorkTracking_WorkOrder_1.UID IS NOT NULL THEN CONVERT(varchar, 
                      tblWorkTracking_WorkOrder_1.Description) ELSE CASE WHEN tblInventory_Item_Batch.UID IS NOT NULL 
                      THEN 'Item: ' + tblInventory_Item_1.Description ELSE CASE WHEN tblWorkTracking_WorkOrder_Step_1.UID IS NOT NULL THEN CONVERT(varchar, 
                      tblWorkTracking_WorkOrder_2.Description) ELSE CASE WHEN tblInventory_Item_2.UID IS NOT NULL 
                      THEN tblInventory_Item_2.Description ELSE CASE WHEN tblInventory_Item_SerialNumber.UID IS NOT NULL 
                      THEN 'Item: ' + tblInventory_Item.Description ELSE 'Other' END END END END END END AS ObjectDescription, CONVERT(DATETIME, CONVERT(varchar, 
                      MONTH(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC))) AS CreatedOnDateOnly, CONVERT(DATETIME, CONVERT(varchar, 
                      MONTH(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC))) AS UpdatedOnDateOnly, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.[Index], 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLX, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLR, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.USL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Target, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LSL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.URL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LRL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cp, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cpk, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewCL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewStat, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.HasViolations, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Violations, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.AssignableCause, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CorrectiveAction, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Modified, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.SupervisorName, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Range, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.MovingRange, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Comments, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLS, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Acknowledged, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Terminator, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.StandardDeviation, tblWorkTracking_WorkOrder_1.UID AS WorkOrderUID, 
                      tblWorkTracking_WorkOrder_Step_1.UID, dbo.tblAssetManagement_Assets.ID AS AssetID, tblWorkTracking_WorkOrder_1.ID AS WorkOrderID
FROM         dbo.tblSystem_Attribute_Collection RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets INNER JOIN
                      dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON 
                      dbo.tblAssetManagement_Assets.UID = tblWorkTracking_WorkOrder_1.AssetUID RIGHT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      tblInventory_Item_2.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON tblInventory_Item_1.UID = dbo.tblInventory_Item_Batch.ItemUID ON 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_2 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Step AS tblWorkTracking_WorkOrder_Step_1 ON 
                      tblWorkTracking_WorkOrder_2.UID = tblWorkTracking_WorkOrder_Step_1.WorkOrderUID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblWorkTracking_WorkOrder_Step_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.GroupItemUID ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CollectionInstanceUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
                      dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = tblAssetManagement_Assets_1.UID ON 
                      tblWorkTracking_WorkOrder_1.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary AS tblSystem_AuditSummary_1 ON dbo.tblSystem_Attribute_CollectionInstance.UID = tblSystem_AuditSummary_1.UID ON 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionInstance.CollectionUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC')) AND 
                      (dbo.tblSystem_AuditSummary.TableName <> N'tblWIP_WorkOrder_Event_CollectData')
ORDER BY tblSystem_AuditSummary_1.CreatedOnDateTimeUTC DESC

GO
--/
-- qryRptSrc_Std_SPC_Data_Collection_Sample_with_WIP_Only
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_with_WIP_Only]'))
DROP VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_with_WIP_Only]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_SPC_Data_Collection_Sample_with_WIP_Only]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableGroupItemName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      dbo.tblSystem_Attribute_GroupItem.SampleSize, dbo.tblSystem_Attribute_GroupItem.CalculatedLimits, dbo.tblSystem_Attribute_GroupItem.CalculateByAllData, 
                      dbo.tblSystem_Attribute_GroupItem.CalculateLastNSubGroups, dbo.tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.IsActive AS IsGroupItemActive, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
                      dbo.tblSystem_Attribute_Collection.IsActive AS IsCollectionActive, dbo.tblSystem_Attribute_GroupItem.DataType, tblSystem_AuditSummary_1.UpdatedByUser, 
                      tblSystem_AuditSummary_1.CreatedByUser, tblSystem_AuditSummary_1.CreatedOnDateTimeUTC, tblSystem_AuditSummary_1.UpdatedOnDateTimeUTC, 
                      dbo.tblSystem_AuditSummary.TableName, CONVERT(DATETIME, CONVERT(varchar, MONTH(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblSystem_AuditSummary.CreatedOnDateTimeUTC))) AS CreatedOnDateOnly, CONVERT(DATETIME, CONVERT(varchar, 
                      MONTH(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) + '/' + CONVERT(varchar, DAY(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC)) 
                      + '/' + CONVERT(varchar, YEAR(dbo.tblSystem_AuditSummary.UpdatedOnDateTimeUTC))) AS UpdatedOnDateOnly, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Mean, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.[Index], 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLX, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLX, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLR, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLR, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.USL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Target, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LSL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.URL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LRL, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cp, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Cpk, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewCL, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.NewStat, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.HasViolations, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Violations, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.AssignableCause, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CorrectiveAction, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Exclude, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Modified, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.SupervisorName, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Range, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.MovingRange, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Comments, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.UCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CLS, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.LCLS, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Acknowledged, dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.Terminator, 
                      dbo.tblWIP_WorkOrder.ID AS WIPWOID, dbo.tblWIP_WorkOrder.Number AS WIPWONumber, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Operation.Name AS OperationName, 
                      dbo.tblWIP_Operation.Name + ' / Rev: ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
                      tblInventory_Item_Batch_1.BatchNumber AS BatchCollectedTo, tblInventory_Item_1.Name AS BatchItemCollectedTo, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber AS SNCollectedTo, tblInventory_Item_2.Name AS SNItemCollectedTo, 
                      dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber, dbo.tblInventory_Item.Name AS MainProduct, 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.StandardDeviation
FROM         dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
                      dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Step.WorkOrderUID ON 
                      dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
                      dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON dbo.tblInventory_Item_SerialNumber.ItemUID = tblInventory_Item_2.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_CollectData ON dbo.tblInventory_Item_SerialNumber.UID = dbo.tblWIP_WorkOrder_Event_CollectData.ItemSNUID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON tblInventory_Item_Batch_1.ItemUID = tblInventory_Item_1.UID ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.ItemBatchUID = tblInventory_Item_Batch_1.UID ON 
                      dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_CollectData.EventUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.CollectionInstanceUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON 
                      dbo.qryRptSrc_Std_SPC_Data_Collection_Sample_SubQuery.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary ON dbo.tblSystem_Attribute_CollectionInstance.ObjectUID = dbo.tblSystem_AuditSummary.UID LEFT OUTER JOIN
                      dbo.tblSystem_AuditSummary AS tblSystem_AuditSummary_1 ON 
                      dbo.tblSystem_Attribute_CollectionInstance.UID = tblSystem_AuditSummary_1.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID
WHERE     (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC')) AND 
                      (dbo.tblSystem_AuditSummary.TableName = N'tblWIP_WorkOrder_Event_CollectData')
ORDER BY CollectionName, VariableGroupName, tblSystem_AuditSummary_1.CreatedOnDateTimeUTC DESC, WIPWOID DESC

GO
--/
--/

-- ** Users

-- qryRptSrc_Std_User_Count
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_User_Count]'))
DROP VIEW [dbo].[qryRptSrc_Std_User_Count]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_User_Count]
AS
SELECT     COUNT(UID) AS UserCount
FROM         dbo.tblContacts_Contacts
WHERE     (IsUser = 1) AND (Deleted = 0) AND (EnableUser = 1)

GO
--/
-- qryRptSrc_Std_Users_Access_and_Email_Groups   ***************Added fields for Certification and Expiration
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_Access_and_Email_Groups]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_Access_and_Email_Groups]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_Access_and_Email_Groups]
AS
SELECT TOP (100) PERCENT dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FName AS FirstName, dbo.tblContacts_Contacts.LName AS LastName, 
               dbo.tblContacts_Contacts.Division, dbo.tblContacts_Contacts.[Group] AS GroupName, dbo.tblContacts_Contacts.Phone_Business AS Phone, 
               dbo.tblContacts_Contacts.Phone_Pager AS Pager, dbo.tblContacts_Contacts.Email, dbo.tblContacts_Contacts.EnableUser AS IsUserActive, 
               dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Department.Name AS Department, dbo.tblContacts_Contact_Group.Name AS AccessEmailGroup, 
               dbo.tblContacts_Contact_Group.IsAccessGroup, dbo.tblContacts_Contact_Group.Description AS AccessEmailGroupDescription, 
               dbo.tblContacts_Contacts.IsUser, dbo.tblContacts_Companies.Name AS CompanyName, dbo.tblContacts_Contact_Group.IsEmailGroup, 
               CASE WHEN tblContacts_Contact_Group.IsAccessGroup = 'True' AND 
               tblContacts_Contact_Group.IsEmailGroup = 'True' THEN 'Both' WHEN tblContacts_Contact_Group.IsAccessGroup = 'True' AND 
               tblContacts_Contact_Group.IsEmailGroup = 'False' THEN 'Access' WHEN tblContacts_Contact_Group.IsAccessGroup = 'False' AND 
               tblContacts_Contact_Group.IsEmailGroup = 'True' THEN 'Email' END AS GroupType, dbo.tblContacts_Contacts.Deleted, 
               dbo.tblContacts_Contact_Group.IsCertification, dbo.tblContacts_Contact_Group.HasExpiration, dbo.tblContacts_Contact_Group.DefaultExpDays, 
               dbo.tblContacts_Contact_Group.ExpNotificationDays
FROM  dbo.tblContacts_Contact_Group RIGHT OUTER JOIN
               dbo.tblContacts_Department RIGHT OUTER JOIN
               dbo.tblContacts_Contacts LEFT OUTER JOIN
               dbo.tblContacts_Companies ON dbo.tblContacts_Contacts.CompanyUID = dbo.tblContacts_Companies.UID ON 
               dbo.tblContacts_Department.UID = dbo.tblContacts_Contacts.DepartmentUID LEFT OUTER JOIN
               dbo.tblContacts_Contact_GroupMember ON dbo.tblContacts_Contacts.UID = dbo.tblContacts_Contact_GroupMember.ContactUID ON 
               dbo.tblContacts_Contact_Group.UID = dbo.tblContacts_Contact_GroupMember.GroupUID
WHERE (dbo.tblContacts_Contacts.Deleted <> 1) AND (dbo.tblContacts_Contact_Group.Name IS NOT NULL)
ORDER BY dbo.tblContacts_Contacts.UserID

GO
--/
-- qryRptSrc_Std_Users_AccessCertGroups_Exp_Dates
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_AccessCertGroups_Exp_Dates]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_AccessCertGroups_Exp_Dates]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_AccessCertGroups_Exp_Dates]
AS
SELECT     TOP (100) PERCENT dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FName AS FirstName, dbo.tblContacts_Contacts.LName AS LastName, 
                      dbo.tblContacts_Contacts.Division, dbo.tblContacts_Contacts.[Group] AS GroupName, dbo.tblContacts_Contacts.Phone_Business AS Phone, 
                      dbo.tblContacts_Contacts.Phone_Pager AS Pager, dbo.tblContacts_Contacts.Email, dbo.tblContacts_Contacts.EnableUser AS IsUserActive, 
                      dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Department.Name AS Department, dbo.tblContacts_Contact_Group.Name AS AccessGroup, 
                      dbo.tblContacts_Contact_Group.IsAccessGroup, dbo.tblContacts_Contact_Group.Description AS AccessGroupDescription, 
                      dbo.tblContacts_Contact_Group.IsCertification AS IsCertificatonGroup, dbo.tblContacts_Contact_Group.HasExpiration, dbo.tblContacts_Contact_Group.DefaultExpDays, 
                      dbo.tblContacts_Contact_Group.IsEmailGroup, dbo.tblContacts_Contact_GroupMember.ExpDate, dbo.tblContacts_Contact_GroupMember.NotifiedAboutToExpire, 
                      dbo.tblContacts_Contact_GroupMember.NotifiedHasExpired
FROM         dbo.tblContacts_Department RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group INNER JOIN
                      dbo.tblContacts_Contact_GroupMember ON dbo.tblContacts_Contact_Group.UID = dbo.tblContacts_Contact_GroupMember.GroupUID ON 
                      dbo.tblContacts_Contacts.UID = dbo.tblContacts_Contact_GroupMember.ContactUID ON 
                      dbo.tblContacts_Department.UID = dbo.tblContacts_Contacts.DepartmentUID
WHERE     (dbo.tblContacts_Contacts.Deleted <> 1) AND (dbo.tblContacts_Contacts.IsUser = 1) AND (dbo.tblContacts_Contact_Group.IsAccessGroup = 1)
ORDER BY dbo.tblContacts_Contacts.UserID


GO
--/
-- qryRptSrc_Std_Users_AccessGroups
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_AccessGroups]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_AccessGroups]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_AccessGroups]
AS
SELECT     TOP (100) PERCENT dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FName AS FirstName, dbo.tblContacts_Contacts.LName AS LastName, 
                      dbo.tblContacts_Contacts.Division, dbo.tblContacts_Contacts.[Group] AS GroupName, dbo.tblContacts_Contacts.Phone_Business AS Phone, 
                      dbo.tblContacts_Contacts.Phone_Pager AS Pager, dbo.tblContacts_Contacts.Email, dbo.tblContacts_Contacts.EnableUser AS IsUserActive, 
                      dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Department.Name AS Department, dbo.tblContacts_Contact_Group.Name AS AccessGroup, 
                      dbo.tblContacts_Contact_Group.IsAccessGroup, dbo.tblContacts_Contact_Group.Description AS AccessGroupDescription
FROM         dbo.tblContacts_Department RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group INNER JOIN
                      dbo.tblContacts_Contact_GroupMember ON dbo.tblContacts_Contact_Group.UID = dbo.tblContacts_Contact_GroupMember.GroupUID ON 
                      dbo.tblContacts_Contacts.UID = dbo.tblContacts_Contact_GroupMember.ContactUID ON 
                      dbo.tblContacts_Department.UID = dbo.tblContacts_Contacts.DepartmentUID
WHERE     (dbo.tblContacts_Contacts.Deleted <> 1) AND (dbo.tblContacts_Contacts.IsUser = 1) AND (dbo.tblContacts_Contact_Group.IsAccessGroup = 1)
ORDER BY dbo.tblContacts_Contacts.UserID



GO
--/
-- qryRptSrc_Std_Users_Last_LogIn
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_Last_LogIn]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_Last_LogIn]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_Last_LogIn]
AS
SELECT TOP (100) PERCENT MAX(dbo.tblSystem_AuditTrail.LogDateTimeUTC) AS LogDate, dbo.tblContacts_Contacts.UID AS UserUID
FROM  dbo.tblSystem_AuditTrail RIGHT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Contacts.UID
WHERE (dbo.tblSystem_AuditTrail.ObjectType = N'Login')
GROUP BY dbo.tblContacts_Contacts.UID

GO
--/
-- qryRptSrc_Std_Users_Last_LogIn_GreaterThan180Days
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_LogIn_180Days]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_LogIn_180Days]
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_Not_Logged_In_180Days]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_Not_Logged_In_180Days]
GO
--------------------------------------------------------------
CREATE VIEW [dbo].[qryRptSrc_Std_Users_LogIn_180Days]
AS
SELECT TOP (100) PERCENT dbo.tblContacts_Contacts.UID AS UserUID, dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FullName, 
               dbo.tblSystem_AuditTrail.LogDateTimeUTC
FROM  dbo.tblSystem_AuditTrail LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Contacts.UID
WHERE (dbo.tblSystem_AuditTrail.ObjectType = N'Login') AND (dbo.tblSystem_AuditTrail.LogDateTimeUTC > DATEADD(dd, - 180, GETDATE()))
GROUP BY dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FullName, dbo.tblSystem_AuditTrail.LogDateTimeUTC, dbo.tblContacts_Contacts.UID

GO

--------------------------------------------------------------
CREATE VIEW [dbo].[qryRptSrc_Std_Users_Not_Logged_In_180Days]
AS
SELECT TOP (100) PERCENT dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Contacts.UserID
FROM  dbo.tblContacts_Contacts LEFT OUTER JOIN
               dbo.qryRptSrc_Std_Users_LogIn_180Days ON dbo.tblContacts_Contacts.UID = dbo.qryRptSrc_Std_Users_LogIn_180Days.UserUID
WHERE (dbo.tblContacts_Contacts.UID NOT IN
                   (SELECT UserUID
                    FROM   dbo.qryRptSrc_Std_Users_LogIn_180Days AS qryRptSrc_Std_Users_LogIn_180Days_1)) AND (dbo.tblContacts_Contacts.EnableUser = 1) AND 
               (dbo.tblContacts_Contacts.Deleted <> 1) OR
               (dbo.tblContacts_Contacts.Deleted IS NULL)
ORDER BY dbo.tblContacts_Contacts.FullName

GO
--/
-- qryRptSrc_Std_Users_LogIn_30Days
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_LogIn_30Days]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_LogIn_30Days]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_LogIn_30Days]
AS
SELECT     TOP (100) PERCENT dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FullName, COUNT(dbo.tblSystem_AuditTrail.LogDateTimeUTC) 
                      AS Count, dbo.tblSystem_AuditTrail.LogDateTimeUTC AS LogDate
FROM         dbo.tblSystem_AuditTrail LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Contacts.UID
WHERE     (dbo.tblSystem_AuditTrail.ObjectType = N'Login') AND (dbo.tblSystem_AuditTrail.LogDateTimeUTC > DATEADD(dd, - 30, getutcdate()))
GROUP BY dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Contacts.FullName, dbo.tblSystem_AuditTrail.LogDateTimeUTC
ORDER BY COUNT(dbo.tblSystem_AuditTrail.LogDateTimeUTC) DESC



GO
--/
-- qryRptSrc_Std_Users_LogIn_Latest
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Users_LogIn_Latest]'))
DROP VIEW [dbo].[qryRptSrc_Std_Users_LogIn_Latest]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Users_LogIn_Latest]
AS
SELECT TOP (100) PERCENT dbo.tblContacts_Contacts.FullName, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblSystem_AuditTrail.App, 
               MAX(dbo.tblSystem_AuditTrail.LogDateTimeUTC) AS LogDateTimeUTC
FROM  dbo.tblSystem_AuditTrail INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblContacts_Contacts.UID
WHERE (dbo.tblSystem_AuditTrail.ObjectType = N'Login')
GROUP BY dbo.tblContacts_Contacts.FullName, dbo.tblSystem_AuditTrail.ObjectType, dbo.tblSystem_AuditTrail.App
ORDER BY dbo.tblContacts_Contacts.FullName

GO
--/
--/

-- ** Variable Groups

-- qryRptSrc_Std_Variable_Group_NoneWIP_Attribute_Associations
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Variable_Group_Associations]'))
DROP VIEW [dbo].[qryRptSrc_Std_Variable_Group_Associations]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Variable_Group_Associations]
AS
SELECT TOP (100) PERCENT dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
               CASE WHEN ObjectType IS NULL THEN 'None' ELSE ObjectType END AS ObjectType, dbo.tblSystem_Attribute_CollectionGroup.[Index], 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'Asset_All' THEN 'All' WHEN 'Asset_Specific' THEN tblAssetManagement_Assets.ID WHEN 'AssetCategory'
                THEN TblAssetManagement_Assets_Categories_1.Name + ' Category' WHEN 'AssetSubCategory' THEN TblAssetManagement_Assets_Categories.Name + ' Category/ '
                + tblAssetManagement_Assets_SubCategories.Name + ' SubCategory' ELSE ' ' END AS AssetAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'ContactGroup_All' THEN 'All Groups' WHEN 'ContactGroupMember_All' THEN 'All Group Members' ELSE
                ' ' END AS GroupMemberAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'InventoryItem_All' THEN 'All Items' WHEN 'InventoryItem_Specific' THEN tblInventory_Item.Name WHEN
                'InventoryItemBatch_All' THEN 'All Batches' WHEN 'InventoryItemBatch_Specific' THEN tblInventory_Item.Name + ' Batches' WHEN 'InventoryItemSN_All' THEN 'All SNs'
                WHEN 'InventoryItemSN_Specific' THEN tblInventory_Item.Name + ' SNs' ELSE ' ' END AS InventoryItemAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'InventoryItemCategory' THEN tblInventory_Item_Category_1.Name + ' Category' WHEN 'InventoryItemSubCategory'
                THEN tblInventory_Item_Category.Name + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory' WHEN 'InventoryItemCategoryBatch' THEN tblInventory_Item_Category_1.Name
                + ' Category Batches' WHEN 'InventoryItemCategorySN' THEN tblInventory_Item_Category_1.Name + ' Category SNs' WHEN 'InventoryItemSubCategoryBatch' THEN
                tblInventory_Item_Category.Name + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory Batches' WHEN 'InventoryItemSubCategorySN' THEN tblInventory_Item_Category.Name
                + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory SNs' ELSE ' ' END AS InventoryCatSubCatAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'InventoryTransaction' THEN 'All Transactions' WHEN 'InventoryTransaction_Adjust' THEN 'Adjust' WHEN
                'InventoryTransaction_Build' THEN 'Build' WHEN 'InventoryTransaction_Consume' THEN 'Consume' WHEN 'InventoryTransaction_Destroy' THEN 'Destroy' WHEN 'InventoryTransaction_Return'
                THEN 'Return' WHEN 'InventoryTransaction_Take' THEN 'Take' WHEN 'InventoryTransaction_Put' THEN 'Put' WHEN 'InventoryTransaction_Transfer' THEN 'Transfer'
                WHEN 'InventoryReceipt' THEN 'Receipt' WHEN 'InventoryReceitpItem' THEN 'Receipt Items' ELSE ' ' END AS InventoryTransactionsAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'Locale_All' THEN 'Locales' ELSE ' ' END AS LocaleAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'ProductionData' THEN 'Production Data' ELSE ' ' END AS ProductionDataAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'PurchasingPO' THEN 'Purchasing PO' ELSE ' ' END AS PurchasingPOAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'PurchasingReq' THEN 'Purchasing Req' ELSE ' ' END AS PurchasingReqAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'WorkTrackingOperationStep' THEN 'Step ' + tblWorkTracking_Operation_Step.Name + ', Operation ' +
                tblWorkTracking_Operation.Name + ' / Rev ' + tblWorkTracking_Operation_Revision.Revision WHEN 'WorkTrackingProcessRev' THEN tblWorkTracking_Process.Name
                + ' / Rev ' + tblWorkTracking_Process_Revision.Revision WHEN 'WorkTrackingWorkOrder' THEN 'All Work Orders' ELSE ' ' END AS WorkTrackingAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'Collection' THEN tblSystem_Attribute_Collection.Name ELSE ' ' END AS DataCollectionAssociations,
                CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'Asset_All' THEN 'All' WHEN 'Asset_Specific' THEN tblAssetManagement_Assets.ID WHEN 'AssetCategory'
                THEN TblAssetManagement_Assets_Categories_1.Name + ' Category' WHEN 'AssetSubCategory' THEN TblAssetManagement_Assets_Categories.Name + ' Category/ '
                + tblAssetManagement_Assets_SubCategories.Name + ' SubCategory' WHEN 'ContactGroup_All' THEN 'All Groups' WHEN 'ContactGroupMember_All' THEN 'All Group Members'
                WHEN 'InventoryItem_All' THEN 'All Items' WHEN 'InventoryItem_Specific' THEN tblInventory_Item.Name WHEN 'InventoryItemBatch_All' THEN 'All Batches' WHEN 'InventoryItemBatch_Specific'
                THEN tblInventory_Item.Name + ' Batches' WHEN 'InventoryItemSN_All' THEN 'All SNs' WHEN 'InventoryItemSN_Specific' THEN tblInventory_Item.Name + ' SNs' WHEN
                'InventoryItemCategory' THEN tblInventory_Item_Category_1.Name + ' Category' WHEN 'InventoryItemSubCategory' THEN tblInventory_Item_Category.Name + ' Category / '
                + tblInventory_Item_SubCategory.Name + ' SubCategory' WHEN 'InventoryItemCategoryBatch' THEN tblInventory_Item_Category_1.Name + ' Category Batches' WHEN
                'InventoryItemCategorySN' THEN tblInventory_Item_Category_1.Name + ' Category SNs' WHEN 'InventoryItemSubCategoryBatch' THEN tblInventory_Item_Category.Name
                + ' Category / ' + tblInventory_Item_SubCategory.Name + ' SubCategory Batches' WHEN 'InventoryItemSubCategorySN' THEN tblInventory_Item_Category.Name + ' Category / '
                + tblInventory_Item_SubCategory.Name + ' SubCategory SNs' WHEN 'InventoryTransaction' THEN 'All Transactions' WHEN 'InventoryTransaction_Adjust' THEN 'Adjust'
                WHEN 'InventoryTransaction_Build' THEN 'Build' WHEN 'InventoryTransaction_Consume' THEN 'Consume' WHEN 'InventoryTransaction_Destroy' THEN 'Destroy' WHEN
                'InventoryTransaction_Return' THEN 'Return' WHEN 'InventoryTransaction_Take' THEN 'Take' WHEN 'InventoryTransaction_Put' THEN 'Put' WHEN 'InventoryTransaction_Transfer'
                THEN 'Transfer' WHEN 'InventoryReceipt' THEN 'Receipt' WHEN 'InventoryReceitpItem' THEN 'Receipt Items' WHEN 'Locale_All' THEN 'Locales' WHEN 'ProductionData'
                THEN 'Production Data' WHEN 'PurchasingPO' THEN 'Purchasing PO' WHEN 'PurchasingReq' THEN 'Purchasing Req' WHEN 'WorkTrackingOperationStep' THEN 'Step '
                + tblWorkTracking_Operation_Step.Name + ', Operation ' + tblWorkTracking_Operation.Name + ' / Rev ' + tblWorkTracking_Operation_Revision.Revision WHEN 'WorkTrackingProcessRev'
                THEN tblWorkTracking_Process.Name + ' / Rev ' + tblWorkTracking_Process_Revision.Revision WHEN 'WorkTrackingWorkOrder' THEN 'All Work Orders' WHEN 'Collection'
                THEN tblSystem_Attribute_Collection.Name + ' Collection' ELSE 'None/WIP ' END AS AllAttributeAssociations
FROM  dbo.tblAssetmanagement_Assets_Categories AS tblAssetManagement_Assets_Categories_1 RIGHT OUTER JOIN
               dbo.tblSystem_Attribute_Group LEFT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionGroup LEFT OUTER JOIN
               dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblSystem_Attribute_Collection.UID ON 
               dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Operation_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Operation ON dbo.tblWorkTracking_Operation_Revision.OperationUID = dbo.tblWorkTracking_Operation.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_Operation_Step ON dbo.tblWorkTracking_Operation_Revision.UID = dbo.tblWorkTracking_Operation_Step.OperationRevisionUID ON 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblWorkTracking_Operation_Step.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category RIGHT OUTER JOIN
               dbo.tblInventory_Item_SubCategory ON dbo.tblInventory_Item_Category.UID = dbo.tblInventory_Item_SubCategory.CategoryUID ON 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblInventory_Item_SubCategory.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Category AS tblInventory_Item_Category_1 ON 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblInventory_Item_Category_1.UID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblAssetmanagement_Assets_Categories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetmanagement_Assets_Categories.UID = dbo.tblAssetManagement_Assets_SubCategories.CategoryUID ON 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
               tblAssetManagement_Assets_Categories_1.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblAssetManagement_Assets.UID
ORDER BY VariableGroupName

GO
--/
-- qryRptSrc_Std_Variable_Group_WIP_NonStep_Attributes_Associations
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Variable_Group_WIP_NonStep_Attributes_Associations]'))
DROP VIEW [dbo].[qryRptSrc_Std_Variable_Group_WIP_NonStep_Attributes_Associations]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Variable_Group_WIP_NonStep_Attributes_Associations]
AS
SELECT TOP (100) PERCENT dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
               dbo.tblSystem_Attribute_CollectionGroup.ObjectType, dbo.tblSystem_Attribute_CollectionGroup.[Index], 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'WIPProcessRevisionAll' THEN 'All Processes' WHEN 'WIPProcessRev' THEN tblWIP_Process.Name +
                ' / Rev ' + tblWIP_Process_Revision.Revision ELSE ' ' END AS WIPProcessAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'WIPRecipe' THEN tblWIP_Recipe.Name ELSE ' ' END AS WIPRecipeAssociation, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'WIPProcessRevisionAll' THEN 'All Processes' WHEN 'WIPProcessRev' THEN tblWIP_Process.Name +
                ' / Rev ' + tblWIP_Process_Revision.Revision WHEN 'WIPRecipe' THEN 'tblWIP_Recipe.Name WIPOperationRevisionAll THEN All Operations' WHEN 'WIPProcessRev'
                THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision ELSE 'None ' END AS AllAssociations, 
               CASE tblSystem_Attribute_CollectionGroup.ObjectType WHEN 'WIPOperationRevisionAll' THEN 'All Operations' WHEN 'WIPProcessRev' THEN tblWIP_Operation.Name
                + ' / Rev ' + tblWIP_Operation_Revision.Revision ELSE ' ' END AS WIPOperationAssociation
FROM  dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Recipe RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblWIP_Operation_Revision.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = dbo.tblSystem_Attribute_Collection.UID ON 
               dbo.tblWIP_Recipe.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID ON 
               dbo.tblWIP_Process_Revision.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID RIGHT OUTER JOIN
               dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_CollectionGroup.GroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE (dbo.tblSystem_Attribute_CollectionGroup.ObjectType LIKE N'%wip%')
ORDER BY VariableGroupName

GO
--/
-- qryRptSrc_Std_Variable_Group_Setup
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Variable_Group_Setup]'))
DROP VIEW [dbo].[qryRptSrc_Std_Variable_Group_Setup]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Variable_Group_Setup]
AS
SELECT     TOP (100) PERCENT dbo.tblSystem_Attribute_Group.Name AS VariableGroupName, dbo.tblSystem_Attribute_Group.IsActive AS IsVariableGroupActive, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableName, dbo.tblSystem_Attribute_GroupItem.Caption, 
                      dbo.tblSystem_Attribute_GroupItem.IsActive AS IsVariableActive, dbo.tblSystem_Attribute_GroupItem.Note, dbo.tblSystem_Attribute_GroupItem.Tooltip, 
                      dbo.tblSystem_Attribute_GroupItem.HelpMessage, dbo.tblSystem_Attribute_GroupItem.DataType, 
                      dbo.tblSystem_Attribute_GroupItem.IsRequired AS IsVariableRequired, dbo.tblSystem_Attribute_GroupItem.DecPrecision, dbo.tblSystem_Attribute_GroupItem.[Join], 
                      dbo.tblSystem_Attribute_GroupItem.SQLStatement, dbo.tblSystem_Attribute_GroupItem.SampleSize, dbo.tblSystem_Attribute_GroupItem.Range, 
                      dbo.tblSystem_Attribute_GroupItem.Target, dbo.tblSystem_Attribute_GroupItem.CalculatedLimits, dbo.tblSystem_Attribute_GroupItem.CalculateByAllData, 
                      dbo.tblSystem_Attribute_GroupItem.CalculateLastNSubGroups, dbo.tblSystem_Attribute_GroupItem.ReCalculateEveryKSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.UCLX, dbo.tblSystem_Attribute_GroupItem.CLX, dbo.tblSystem_Attribute_GroupItem.LCLX, 
                      dbo.tblSystem_Attribute_GroupItem.UCLR, dbo.tblSystem_Attribute_GroupItem.CLR, dbo.tblSystem_Attribute_GroupItem.USL, dbo.tblSystem_Attribute_GroupItem.LSL, 
                      dbo.tblSystem_Attribute_GroupItem.LCLR, dbo.tblSystem_Attribute_GroupItem.HasRL, dbo.tblSystem_Attribute_GroupItem.LRL, 
                      dbo.tblSystem_Attribute_GroupItem.URL, dbo.tblSystem_Attribute_GroupItem.RLRollBack, dbo.tblSystem_Attribute_GroupItem.RLIncrease, 
                      dbo.tblSystem_Attribute_GroupItem.CurrentUCLX, dbo.tblSystem_Attribute_GroupItem.CurrentCLX, dbo.tblSystem_Attribute_GroupItem.CurrentLCLX, 
                      dbo.tblSystem_Attribute_GroupItem.CurrentUCLR, dbo.tblSystem_Attribute_GroupItem.CurrentLCLR, dbo.tblSystem_Attribute_GroupItem.CurrentCLR, 
                      dbo.tblSystem_Attribute_GroupItem.StatAllData, dbo.tblSystem_Attribute_GroupItem.StatLastNSubGroups, dbo.tblSystem_Attribute_GroupItem.StatEveryKSubGroups, 
                      dbo.tblSystem_Attribute_GroupItem.AutoScale, dbo.tblSystem_Attribute_GroupItem.ScaleXHigh, dbo.tblSystem_Attribute_GroupItem.ScaleXLow, 
                      dbo.tblSystem_Attribute_GroupItem.ScaleRHigh, dbo.tblSystem_Attribute_GroupItem.ScaleRLow, dbo.tblSystem_Attribute_GroupItem.OptHideCL, 
                      dbo.tblSystem_Attribute_GroupItem.OptHideCLGroup, dbo.tblSystem_Attribute_GroupItem.OptMimicCL, dbo.tblSystem_Attribute_GroupItem.OptMimicCLGroup, 
                      dbo.tblSystem_Attribute_GroupItem.Formula, dbo.tblSystem_Attribute_GroupItem.Message, dbo.tblSystem_Attribute_GroupItem.DocumentType, 
                      dbo.tblSystem_Attribute_GroupItem.Row, dbo.tblSystem_Attribute_GroupItem.[Column] AS ColumnNum, dbo.tblSystem_Attribute_GroupItem.SpanTwoColumns, 
                      dbo.tblSystem_Attribute_GroupItem.RowSpan, dbo.tblSystem_Attribute_GroupItem.BackgroundColor, dbo.tblSystem_Attribute_GroupItem.LabelFontColor, 
                      dbo.tblSystem_Attribute_GroupItem.DataFontColor, dbo.tblSystem_Attribute_GroupItem.LabelUnderline, dbo.tblSystem_Attribute_GroupItem.Units, 
                      dbo.tblSystem_Attribute_GroupItem.DefaultValue
FROM         dbo.tblSystem_Attribute_Group LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID
ORDER BY VariableGroupName


GO
--/
--/

-- ** WIP

-- qryRptSrc_Std_WIP_Config_Operation_GroupAccess
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess]
AS
SELECT     dbo.tblWIP_Operation.UID AS OperationUID, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
                      dbo.tblWIP_Operation.AllowAllUserProcess, dbo.tblWIP_Operation.AllowProcessType, dbo.tblContacts_Contact_Group.Name AS GroupName, 
                      dbo.tblContacts_Contact_GroupAccess.GroupUID, dbo.tblContacts_Contact_Group.IsCertification, dbo.tblContacts_Contact_Group.HasExpiration, 
                      dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation.IsActive AS IsOperationActive
FROM         dbo.tblWIP_Operation INNER JOIN
                      dbo.tblContacts_Contact_GroupAccess ON dbo.tblWIP_Operation.UID = dbo.tblContacts_Contact_GroupAccess.ObjectUID INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupAccess.GroupUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Category ON dbo.tblWIP_Operation.CategoryUID = dbo.tblWIP_Operation_Category.UID

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot]
AS
SELECT     OperationUID, GroupName
FROM         (SELECT     operationuid, groupname = STUFF
                                                  ((SELECT     ', ' + groupname
                                                      FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess
                                                      WHERE     OperationUID = t .OperationUID
                                                      ORDER BY groupname FOR XML Path('')), 1, 1, '')
                       FROM          dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess t) AS X
GROUP BY OperationUID, GroupName



GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry]
AS
SELECT dbo.tblWIP_Operation.UID AS OperationUID, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
               dbo.tblWIP_Operation.AllowAllUserProcess AS OperationAllowAllUserProcess, dbo.tblWIP_Operation.AllowProcessType AS OperationAllowProcessType, 
               dbo.tblWIP_Operation_Revision.UID AS OperationRevUID, dbo.tblWIP_Operation.IsActive AS IsOperationActive, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' ( ' + dbo.tblWIP_Operation_Revision.Revision + N') ' AS OperationAndRevision, 
               dbo.tblWIP_Operation_Revision.IsActive AS IsOperationRevActive, dbo.tblWIP_Operation_Category.Name AS OperationCategory, 
               dbo.tblWIP_Operation_Revision.IsLocked, dbo.tblWIP_Operation_Revision.CanRunStepsOutOfOrder, dbo.tblWIP_Operation_Revision.CanRunMultipleTimes, 
               CONVERT(varchar, dbo.tblWIP_Operation_Revision.Notes) AS Notes, dbo.tblWIP_Operation_Revision.AllowLogComments, 
               dbo.tblWIP_Operation_Revision.AllowSplit, dbo.tblWIP_Operation_Revision.AllowHold, dbo.tblWIP_Operation_Revision.AllowScrap, 
               dbo.tblWIP_Operation_Step.VerifyQtyToComplete, dbo.tblWIP_Operation_Step.VerifyQtyToStart, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_Operation_Step.UID AS StepUID, dbo.tblWIP_Operation_Step.AllowAllUserAccess AS StepAllowAllUserProcess, 
               dbo.tblWIP_Operation_Step.AllowAccessType AS StepAllowProcessType, dbo.tblWIP_Operation_Step.[Index] AS StepIndex, 
               dbo.tblWIP_Operation_Step.StepAssetUID, dbo.tblWIP_Operation_Step.StepConsumeUID, dbo.tblWIP_Operation_Step.StepConvertUID, 
               dbo.tblWIP_Operation_Step.StepInspectUID, dbo.tblWIP_Operation_Step.StepMessageUID, dbo.tblWIP_Operation_Step.StepToInventoryUID, 
               dbo.tblWIP_Operation_Step.StepSetAttributeManualUID, '00000000-0000-0000-0000-000000000000' AS StepCollectDataUID, 
               dbo.tblWIP_Operation_Step.SignoffConfigUID
FROM  dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID ON 
               dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond    *** Added the additional Condition Types and changed original CondType to Action Type
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.tblWIP_Operation_Step_Condition.[Index] AS CondIndex, 
               dbo.tblWIP_Operation_Step_Condition.Name AS CondName, dbo.tblWIP_Operation_Step_Condition.ActionType, 
               CASE WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Attribute' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'GoTo' THEN (tblSystem_Attribute_GroupItem.Name + ' ' + tblWIP_Operation_Step_Condition.GroupItemCondition +
                ' ' + tblWIP_Operation_Step_Condition.GroupItemValue + ', Goto ' + tblWIP_Operation_Step_1.Name) 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Attribute' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'ChangeTo' THEN (tblSystem_Attribute_GroupItem.Name + ' ' + tblWIP_Operation_Step_Condition.GroupItemCondition
                + ' ' + + tblWIP_Operation_Step_Condition.GroupItemValue + ', Changeto ' + ' Process: ' + dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision +
                N')' + ', Operation: ' + dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')') 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Attribute' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'Hold' THEN (tblSystem_Attribute_GroupItem.Name + ' ' + tblWIP_Operation_Step_Condition.GroupItemCondition + ' '
                + tblWIP_Operation_Step_Condition.GroupItemValue + ', Hold') WHEN tblWIP_Operation_Step_Condition.ConditionType = 'MainProduct' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'GoTo' THEN ('If Main Product Is ' + tblInventory_Item.Name + ', Goto ' + tblWIP_Operation_Step_1.Name) 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'MainProduct' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'ChangeTo' THEN ('If Main Product Is ' + tblInventory_Item.Name + ', Changeto ' + ' Process: ' + dbo.tblWIP_Process.Name
                + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' + ', Operation: ' + dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')') 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'MainProduct' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'Hold' THEN ('If Main Product Is ' + tblInventory_Item.Name + ', Hold') 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'AssetStart' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'GoTo' THEN ('If Asset ' + tblAssetManagement_Assets.ID + ' is started in Step ' + tblWIP_Operation_Step.Name + ', Goto '
                + tblWIP_Operation_Step_1.Name) WHEN tblWIP_Operation_Step_Condition.ConditionType = 'AssetStart' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'ChangeTo' THEN ('If Asset ' + tblAssetManagement_Assets.ID + ' is started in Step ' + tblWIP_Operation_Step.Name
                + ', Changeto ' + ' Process: ' + dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' + ', Operation: ' + dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision
                + N')') WHEN tblWIP_Operation_Step_Condition.ConditionType = 'AssetStart' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'Hold' THEN ('If Asset ' + tblAssetManagement_Assets.ID + ' is started in Step ' + tblWIP_Operation_Step.Name + ', Hold')
                WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Query' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'GoTo' THEN ('If Query: ' + CONVERT(varchar, tblWIP_Operation_Step_Condition.QrySelect) 
               + ' ' + tblWIP_Operation_Step_Condition.QryCondition + ' ' + tblWIP_Operation_Step_Condition.QryValue + ', Goto ' + tblWIP_Operation_Step_1.Name) 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Query' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'ChangeTo' THEN ('If Query: ' + CONVERT(varchar, tblWIP_Operation_Step_Condition.QrySelect) 
               + ' ' + tblWIP_Operation_Step_Condition.QryCondition + ' ' + tblWIP_Operation_Step_Condition.QryValue + ', Changeto ' + ' Process: ' + dbo.tblWIP_Process.Name + N' ('
                + dbo.tblWIP_Process_Revision.Revision + N')' + ', Operation: ' + dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')') 
               WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Query' AND 
               tblWIP_Operation_Step_Condition.ActionType = 'Hold' THEN ('If Query: ' + CONVERT(varchar, tblWIP_Operation_Step_Condition.QrySelect) 
               + ' ' + tblWIP_Operation_Step_Condition.QryCondition + ' ' + tblWIP_Operation_Step_Condition.QryValue + ', Hold') ELSE ' ' END AS Condition, 
               CASE WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Attribute' THEN GroupItemAssociation ELSE '' END AS GroupItemAssociation, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationUID, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID, 
               dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' AS ChangeToProcessAndRevision, 
               dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS ChangeToOperationAndRevision, 
               dbo.tblWIP_Operation_Step_Condition.LogMessage, dbo.tblWIP_Operation_Step_Condition.IsActive AS IsConditionEnabled, 
               dbo.tblWIP_Operation_Step_Condition.ConditionType, dbo.tblInventory_Item.Name AS MainProduct, dbo.tblAssetManagement_Assets.ID AS StartAssetID, 
               CASE WHEN tblWIP_Operation_Step_Condition.ConditionType = 'AssetStart' THEN tblWIP_Operation_Step.Name ELSE '' END AS StartAssetStep, 
               dbo.tblWIP_Operation_Step_Condition.qrySelect, dbo.tblWIP_Operation_Step_Condition.qryCondition, dbo.tblWIP_Operation_Step_Condition.qryValue
FROM  dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
               dbo.tblWIP_Operation_Step_Condition ON 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_Condition.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Condition.StartStepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Condition.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblWIP_Operation_Step_Condition.InventoryItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
               dbo.tblWIP_Process RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_Operation_Step_Condition.ChangeToFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_Condition.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON dbo.tblWIP_Operation_Step_Condition.GoToStepUID = tblWIP_Operation_Step_1.UID
WHERE (dbo.tblWIP_Operation_Step_Condition.IsActive = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
               CondIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot]
AS
SELECT     StepUID, Condition
FROM         (SELECT     stepuid, Condition = STUFF
                                                  ((SELECT     '; ' + Condition
                                                      FROM         qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond
                                                      WHERE     StepUID = t .StepUID
                                                      ORDER BY condition FOR XML Path('')), 1, 1, '')
                       FROM          qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond t) AS X
GROUP BY StepUID, Condition


GO
--/
-- qryRptSrc_Std_WIP_Config_Process_GroupAccess
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess]
AS
SELECT     dbo.tblWIP_Process.UID AS ProcessUID, dbo.tblWIP_Process.Name AS ProcessName, dbo.tblContacts_Contact_Group.Name AS GroupName, 
                      dbo.tblContacts_Contact_GroupAccess.GroupUID, dbo.tblWIP_Process.AllowAllUserProcess, dbo.tblContacts_Contact_Group.IsCertification, 
                      dbo.tblContacts_Contact_Group.HasExpiration, dbo.tblWIP_Process.IsActive AS IsProcessActive
FROM         dbo.tblWIP_Process INNER JOIN
                      dbo.tblContacts_Contact_GroupAccess ON dbo.tblWIP_Process.UID = dbo.tblContacts_Contact_GroupAccess.ObjectUID INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupAccess.GroupUID = dbo.tblContacts_Contact_Group.UID

GO
--/
-- qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot]
AS
SELECT     ProcessUID, GroupName
FROM         (SELECT     Processuid, groupname = STUFF
                                                  ((SELECT     ', ' + groupname
                                                      FROM         dbo.qryRptSrc_Std_WIP_Config_Process_GroupAccess
                                                      WHERE     ProcessUID = t .ProcessUID
                                                      ORDER BY groupname FOR XML Path('')), 1, 1, '')
                       FROM          dbo.qryRptSrc_Std_WIP_Config_Process_GroupAccess t) AS X
GROUP BY ProcessUID, GroupName

GO
--/ 
-- qryRptSrc_Std_WIP_WorkOrder_First_Step_InOperation_Sub
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_First_Step_InOperation_Sub]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_First_Step_InOperation_Sub]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_First_Step_InOperation_Sub]
AS
SELECT     dbo.tblWIP_Operation_Revision.UID AS OperationRevisionUID, MIN(dbo.tblWIP_Operation_Step.[Index]) AS StepIndex
FROM         dbo.tblWIP_Operation_Revision INNER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
GROUP BY dbo.tblWIP_Operation_Revision.UID

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry]
AS
Select Uid as EventWorkOrderUID, Workorderuid, EventDatetimeUtc 
from (select uid,workorderuid, Eventdatetimeutc,row_number() over(partition by workorderuid order by eventdatetimeutc desc) as rn from tblWIP_WorkOrder_Event where action = 'hold') as T
Where rn = 1

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Last_Step_InOperation_Sub
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Last_Step_InOperation_Sub]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Last_Step_InOperation_Sub]
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Last_Step_InOperation_Sub]
AS
SELECT     dbo.tblWIP_Operation_Revision.UID AS OperationRevisionUID, MAX(dbo.tblWIP_Operation_Step.[Index]) AS StepIndex
FROM         dbo.tblWIP_Operation_Revision INNER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID
GROUP BY dbo.tblWIP_Operation_Revision.UID

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Qty_In_WIP_Subqry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Qty_In_WIP_Subqry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Qty_In_WIP_Subqry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Qty_In_WIP_Subqry]
AS
SELECT     SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS TotalQty, dbo.tblWIP_WorkOrder_Batch.InstanceUID
FROM         dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
GROUP BY dbo.tblWIP_WorkOrder_Batch.InstanceUID

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_TotalQuantity
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_TotalQuantity]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_TotalQuantity]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_TotalQuantity]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number, SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS WorkOrderTotalQuantity, dbo.tblWIP_WorkOrder.ID, 
               dbo.tblWIP_WorkOrder_Batch.InstanceUID
FROM  dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_BatchInstance.WorkOrderUID = dbo.tblWIP_WorkOrder.UID AND 
               dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID INNER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
GROUP BY dbo.tblWIP_WorkOrder.Number, dbo.tblWIP_WorkOrder.ID, dbo.tblWIP_WorkOrder_Batch.InstanceUID
ORDER BY dbo.tblWIP_WorkOrder.ID DESC


GO
--/
-- qryRptSrc_Std_WIP_Config_BOM_LookUp
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_BOM_LookUp]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_BOM_LookUp]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_BOM_LookUp]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_BOM_LookUp.Name AS BOMLookUpName, dbo.tblWIP_BOM_LookUp.IsActive AS IsBOMLookUpActive, 
                      dbo.tblInventory_BOM.Name AS BOM, dbo.tblInventory_BOM.Description AS BOMDescription, dbo.tblInventory_BOM.IsActive AS IsBOMActive, 
                      dbo.tblInventory_BOM.Notes, dbo.tblInventory_Item.Name AS ProductName, dbo.tblInventory_Item.Description AS ProductDescription, 
                      dbo.tblInventory_Item_Batch.BatchNumber AS ProductBatchNumber, dbo.tblWIP_BOM_LookUp_Rule.ECO, dbo.tblWIP_BOM_LookUp_Rule.TestNumber
FROM         dbo.tblInventory_Item_Batch RIGHT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp_Rule ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblWIP_BOM_LookUp_Rule.InventoryItemUID AND 
                      dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_BOM_LookUp_Rule.InventoryItemBatchUID LEFT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblWIP_BOM_LookUp_Rule.InventoryItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblWIP_BOM_LookUp_Rule.BOMUID = dbo.tblInventory_BOM.UID RIGHT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp ON dbo.tblWIP_BOM_LookUp_Rule.LookUpUID = dbo.tblWIP_BOM_LookUp.UID
ORDER BY BOMLookUpName

GO
--/
-- qryRptSrc_Std_Config_WIP_Notifications
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_Config_WIP_Notifications]'))
DROP VIEW [dbo].[qryRptSrc_Std_Config_WIP_Notifications]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_Config_WIP_Notifications]
AS
SELECT TOP (100) 
               PERCENT CASE tblSystem_Email_TriggerAssociation.SendToType WHEN 'Contact' THEN tblContacts_Contacts.FullName ELSE tblContacts_Contact_Group.NAME
                END AS EmailGroupOrUser, dbo.tblContacts_Contacts.FullName, dbo.tblSystem_Email_TriggerAssociation.SendToType, 
               dbo.tblContacts_Contact_Group.Name AS EmailGroupName, tblContacts_Contacts_1.FullName AS EmailGroupMember, 
               dbo.tblSystem_Email_Trigger.Name AS TriggerName, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN 'Future Hold' WHEN 'WIPProcessRevision' THEN 'Process Revision' WHEN
                'WIPOperationRevisionStep' THEN 'Step' ELSE CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'WIPOperationStepCollectDataWO' THEN 'Data Collect WO Run Rule'
                WHEN 'WIPOperationStepCollectDataBatch' THEN 'Data Collect Batch Run Rule' WHEN 'WIPOperationStepCollectDataSN' THEN 'Data Collect SN Run Rule' ELSE ''
                END END AS AssociationType, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN '' WHEN 'WIPProcessRevision' THEN '' WHEN 'WIPOperationRevisionStep'
                THEN tblWIP_Operation_Step.Name ELSE CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'WIPOperationStepCollectDataWO' THEN tblWIP_Operation_Step_1.Name
                WHEN 'WIPOperationStepCollectDataBatch' THEN tblWIP_Operation_Step_2.Name WHEN 'WIPOperationStepCollectDataSN' THEN tblWIP_Operation_Step_3.Name
                ELSE '' END END AS StepName, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN '' WHEN 'WIPProcessRevision' THEN '' WHEN 'WIPOperationRevisionStep'
                THEN tblWIP_Operation.Name ELSE CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'WIPOperationStepCollectDataWO' THEN tblWIP_Operation_1.Name
                WHEN 'WIPOperationStepCollectDataBatch' THEN tblWIP_Operation_2.Name WHEN 'WIPOperationStepCollectDataSN' THEN tblWIP_Operation_3.Name ELSE '' END
                END AS OperationName, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN '' WHEN 'WIPProcessRevision' THEN '' WHEN 'WIPOperationRevisionStep'
                THEN tblWIP_Operation.Name + ' / Rev ' + tblWIP_Operation_Revision.Revision ELSE CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'WIPOperationStepCollectDataWO'
                THEN tblWIP_Operation_1.Name + ' / Rev ' + tblWIP_Operation_Revision_1.Revision WHEN 'WIPOperationStepCollectDataBatch' THEN tblWIP_Operation_2.Name + ' / Rev '
                + tblWIP_Operation_Revision_2.Revision WHEN 'WIPOperationStepCollectDataSN' THEN tblWIP_Operation_3.Name + + ' / Rev ' + tblWIP_Operation_Revision_3.Revision
                ELSE '' END END AS OperationAndRevision, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN '' WHEN 'WIPProcessRevision' THEN '' WHEN 'WIPOperationRevisionStep'
                THEN tblWIP_Operation_Revision.Revision ELSE CASE tblSystem_Attribute_CollectionAssociation.ObjectType WHEN 'WIPOperationStepCollectDataWO' THEN tblWIP_Operation_Revision_1.Revision
                WHEN 'WIPOperationStepCollectDataBatch' THEN tblWIP_Operation_Revision_2.Revision WHEN 'WIPOperationStepCollectDataSN' THEN tblWIP_Operation_Revision_3.Revision
                ELSE '' END END AS OperationRevision, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN tblWIP_Process_1.Name WHEN 'WIPProcessRevision' THEN tblWIP_Process.Name
                ELSE '' END AS ProcessName, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN tblWIP_Process_1.Name + ' / Rev ' + tblWIP_Process_Revision_1.Revision
                WHEN 'WIPProcessRevision' THEN tblWIP_Process.Name + ' / Rev ' + tblWIP_Process_Revision.Revision ELSE '' END AS ProcessAndRevision, 
               CASE tblSystem_Email_Trigger.AssociationType WHEN 'WIPProcessRevisionFutureHold' THEN tblWIP_Process_Revision_1.Revision WHEN 'WIPProcessRevision' THEN
                tblWIP_Process_Revision.Revision ELSE '' END AS ProcessRevision, dbo.tblSystem_Email_Notification.Name AS NotificationName
FROM  dbo.tblWIP_Operation_Step_CollectDataSN LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_3 LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_3 LEFT OUTER JOIN
               dbo.tblWIP_Operation AS tblWIP_Operation_3 ON tblWIP_Operation_Revision_3.OperationUID = tblWIP_Operation_3.UID ON 
               tblWIP_Operation_Step_3.OperationRevisionUID = tblWIP_Operation_Revision_3.UID ON 
               dbo.tblWIP_Operation_Step_CollectDataSN.StepUID = tblWIP_Operation_Step_3.UID RIGHT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionAssociation ON 
               dbo.tblWIP_Operation_Step_CollectDataSN.UID = dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_CollectDataBatch LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_2 LEFT OUTER JOIN
               dbo.tblWIP_Operation AS tblWIP_Operation_2 RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_2 ON tblWIP_Operation_2.UID = tblWIP_Operation_Revision_2.OperationUID ON 
               tblWIP_Operation_Step_2.OperationRevisionUID = tblWIP_Operation_Revision_2.UID ON 
               dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = tblWIP_Operation_Step_2.UID ON 
               dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataBatch.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_CollectDataWO LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 LEFT OUTER JOIN
               dbo.tblWIP_Operation AS tblWIP_Operation_1 RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON tblWIP_Operation_1.UID = tblWIP_Operation_Revision_1.OperationUID ON 
               tblWIP_Operation_Step_1.OperationRevisionUID = tblWIP_Operation_Revision_1.UID ON 
               dbo.tblWIP_Operation_Step_CollectDataWO.StepUID = tblWIP_Operation_Step_1.UID ON 
               dbo.tblSystem_Attribute_CollectionAssociation.ObjectUID = dbo.tblWIP_Operation_Step_CollectDataWO.UID RIGHT OUTER JOIN
               dbo.tblSystem_Email_TriggerAssociation LEFT OUTER JOIN
               dbo.tblSystem_Email_Notification ON dbo.tblSystem_Email_TriggerAssociation.NotificationUID = dbo.tblSystem_Email_Notification.UID LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
               dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID = dbo.tblWIP_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
               dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
               dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID = dbo.tblWIP_Operation_Step.UID ON 
               dbo.tblSystem_Attribute_CollectionAssociation.UID = dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID LEFT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
               dbo.tblWIP_Process AS tblWIP_Process_1 RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision AS tblWIP_Process_Revision_1 ON tblWIP_Process_1.UID = tblWIP_Process_Revision_1.ProcessUID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = tblWIP_Process_Revision_1.UID RIGHT OUTER JOIN
               dbo.tblWIP_FutureHold ON dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_FutureHold.FlowUID ON 
               dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID = dbo.tblWIP_FutureHold.UID LEFT OUTER JOIN
               dbo.tblSystem_Email_Trigger ON dbo.tblSystem_Email_TriggerAssociation.TriggerUID = dbo.tblSystem_Email_Trigger.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_GroupMember LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblContacts_Contact_GroupMember.ContactUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupMember.GroupUID = dbo.tblContacts_Contact_Group.UID ON 
               dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contacts.UID
WHERE (dbo.tblSystem_Email_Trigger.Name LIKE N'%wip%') AND (NOT (dbo.tblSystem_Email_Trigger.AssociationType IN (N'Individual', N'WIPWorkOrderFutureHold')))
ORDER BY TriggerName

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Attributes_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Attributes_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Attributes_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Attributes_Union]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
               'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title2, 
               'Entry: ' + dbo.tblSystem_Attribute_GroupItem.Name AS Title3
FROM  dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
               dbo.tblWIP_Operation_Step_SetAttributeManual ON 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_Group LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
               dbo.tblWIP_Operation_Step_SetAttributeManual.WOGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE (dbo.tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName
GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Documents_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Documents_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Documents_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Documents_Union]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
               'Document: ' + dbo.tblDocuments_Documents.DisplayName AS Title1, '' AS Title2, '' AS Title3
FROM  dbo.tblDocuments_Documents INNER JOIN
               dbo.tblDocuments_Document_Association ON dbo.tblDocuments_Documents.UID = dbo.tblDocuments_Document_Association.DocumentUID INNER JOIN
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
               dbo.tblDocuments_Document_Association.AssociatedObjectUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevUID
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               'Document: ' + dbo.tblDocuments_Documents.DisplayName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Permissions_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Permissions_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Permissions_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Permissions_Union]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
               'All User Access: ' + CASE WHEN OperationAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END AS Title1, 
               'Type of Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType AS Title2, 
               'Access Group(s): ' + dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName AS Title3
FROM  dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
               dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot ON 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationUID = dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.OperationUID
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
               'Type of Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, 
               'Access Group(s): ' + dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName, 
               'All User Access: ' + CASE WHEN OperationAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Scrap_Groups_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Scrap_Groups_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Scrap_Groups_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Setup_Scrap_Groups_Union]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
               'Scrap Group: ' + dbo.tblInventory_ScrapGroup.Name AS Title1, '' AS Title2, '' AS Title3
FROM  dbo.tblInventory_ScrapGroupAssociation INNER JOIN
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
               dbo.tblInventory_ScrapGroupAssociation.AssociationUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevUID LEFT OUTER JOIN
               dbo.tblInventory_ScrapGroup ON dbo.tblInventory_ScrapGroupAssociation.GroupUID = dbo.tblInventory_ScrapGroup.UID
WHERE (dbo.tblInventory_ScrapGroupAssociation.AssociationType = N'WIPOperationRevision')
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
               'Scrap Group: ' + dbo.tblInventory_ScrapGroup.Name, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_SETUP
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_SETUP]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_SETUP]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_SETUP]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked,  
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title2, 
                      'Entry: ' + dbo.tblSystem_Attribute_GroupItem.Name AS Title3
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblWIP_Operation_Step_SetAttributeManual.WOGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 1)
UNION
SELECT     dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      'Document: ' + dbo.tblDocuments_Documents.DisplayName AS Title1, '' AS Title2, '' AS Title3
FROM         dbo.tblDocuments_Documents INNER JOIN
                      dbo.tblDocuments_Document_Association ON dbo.tblDocuments_Documents.UID = dbo.tblDocuments_Document_Association.DocumentUID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblDocuments_Document_Association.AssociatedObjectUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevUID
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      'Document: ' + dbo.tblDocuments_Documents.DisplayName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked,  
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      'All User Access: ' + CASE WHEN OperationAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Type of Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType AS Title2, 
                      'Access Group(s): ' + dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName AS Title3
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationUID = dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.OperationUID
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked,  
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      'Type of Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, 
                      'Access Group(s): ' + dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName, 
                      'All User Access: ' + CASE WHEN OperationAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked,  
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      'Scrap Group: ' + dbo.tblInventory_ScrapGroup.Name AS Title1, '' AS Title2, '' AS Title3
FROM         dbo.tblInventory_ScrapGroupAssociation INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblInventory_ScrapGroupAssociation.AssociationUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevUID LEFT OUTER JOIN
                      dbo.tblInventory_ScrapGroup ON dbo.tblInventory_ScrapGroupAssociation.GroupUID = dbo.tblInventory_ScrapGroup.UID
WHERE     (dbo.tblInventory_ScrapGroupAssociation.AssociationType = N'WIPOperationRevision')
GROUP BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      'Scrap Group: ' + dbo.tblInventory_ScrapGroup.Name, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                       dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, Title1

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Recipe_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Recipe_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Recipe_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Recipe_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Recipe: ' + CASE WHEN tblWIP_Operation_Step_Asset.Recipe = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Recipe Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeOperatorSelectabel = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Recipe Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblWIP_Recipe.Name IS NULL THEN 'LookUp: ' + tblWIP_Recipe_LookUp.Name ELSE 'Recipe: ' + tblWIP_Recipe.Name END AS Title4, '' AS Title5, 
                      '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe_LookUp ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe_LookUp.UID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1) AND (dbo.tblWIP_Operation_Step_Asset.Recipe = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Tool_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Tool_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Tool_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Tool_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Tool: ' + CASE WHEN tblWIP_Operation_Step_Asset.Tool = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Tool Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolOperatorSelectable = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Tool Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblAssetManagement_Assets.ID IS NULL THEN 'LookUp: ' + tblWIP_Tool_LookUp.Name ELSE 'Tool: ' + tblAssetManagement_Assets.ID END AS Title4, 
                      '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Tool ON dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID LEFT OUTER JOIN
                      dbo.tblWIP_Tool_LookUp ON dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID = dbo.tblWIP_Tool_LookUp.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID ON 
                      dbo.tblWIP_Operation_Step_Asset_Tool.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1) AND (dbo.tblWIP_Operation_Step_Asset.Tool = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Can Start Asset: ' + CASE WHEN tblWIP_Operation_Step_Asset.CanStartAsset = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Can Stop Asset: ' + CASE WHEN tblWIP_Operation_Step_Asset.CanStopAsset = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Change Asset State: ' + CASE WHEN tblWIP_Operation_Step_Asset.ChangeAssetState = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'Multiple Lot Track In: ' + CASE WHEN tblWIP_Operation_Step_Asset.MultipleLotTrackIn = '1' THEN 'True' ELSE 'False' END AS Title4, 
                      'Allow Repair Request: ' + CASE WHEN tblWIP_Operation_Step_Asset.AllowRepairRequest = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      'Asset ID: ' + dbo.tblAssetManagement_Assets.ID AS Title6, 
                      'Is Default: ' + CASE WHEN tblWIP_Operation_Step_Asset_Asset.IsDefault = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Recipe: ' + CASE WHEN tblWIP_Operation_Step_Asset.Recipe = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Recipe Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeOperatorSelectabel = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'Recipe Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'Tool: ' + CASE WHEN tblWIP_Operation_Step_Asset.Tool = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'Tool Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolOperatorSelectable = '1' THEN 'True' ELSE 'False' END AS Title12, 
                      'Tool Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title13, 
                      CASE WHEN tblWIP_Recipe.Name IS NULL THEN 'LookUp: ' + tblWIP_Recipe_LookUp.Name ELSE 'Recipe: ' + tblWIP_Recipe.Name END AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID AND 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_Asset.StepUID INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Asset ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Asset.StepAssetUID INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Asset_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe_LookUp ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe_LookUp.UID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Work_Trkg_Process_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Work_Trkg_Process_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Work_Trkg_Process_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Assets_Work_Trkg_Process_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Work Trkg Process: ' + dbo.tblWorkTracking_Process.Name + N' / ' + dbo.tblWorkTracking_Process_Revision.Revision AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, 
                      '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.StepAssetUID INNER JOIN
                      dbo.tblWorkTracking_Process_Revision ON 
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.WorkTrackingProcessRevUID = dbo.tblWorkTracking_Process_Revision.UID INNER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Auto_Set_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Auto_Set_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Auto_Set_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Auto_Set_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Auto Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeAuto.IsActive AS IsEventRequired, 
                      'Activates at: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.EventType AS Title1, 'Attr: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title2, 
                      'Set to: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.SetToType AS Title3, 'Value: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.SetValue AS Title4, '' AS Title5, 
                      '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeAuto ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_SetAttributeAuto.VariableUID = dbo.tblSystem_Attribute_GroupItem.UID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_Batch_Set_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_Batch_Set_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_Batch_Set_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_Batch_Set_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual Batch Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.BatchIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.BatchGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.BatchEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_SN_Set_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_SN_Set_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_SN_Set_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_SN_Set_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual SN Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.SNIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.SNGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.SNEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_WO_Set_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_WO_Set_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_WO_Set_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Attr_Manual_WO_Set_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual WO Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.WOIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.WOGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Conditions_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Conditions_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Conditions_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Conditions_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Conditions' AS StepEvent, dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.CondIndex AS StepEventIndex, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.IsConditionEnabled AS IsEventRequired, 
                      'Condition: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.Condition AS Title1, 
                      'Associated To: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.GroupItemAssociation AS Title2, CONVERT(varchar, 'Log Message: ') 
                      + CONVERT(varchar, dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.LogMessage) AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.StepUID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.StepUID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Consume_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Consume_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Consume_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Consume_Union]
AS
SELECT     dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Consume' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Consume.IsRequired AS IsEventRequired, 
                      'Consume To: ' + dbo.tblWIP_Operation_Step_Consume.ConsumeTo AS Title1, 
                      'Auto Consume From Station: ' + CASE WHEN tblWIP_Operation_Step_Consume.AutoConsumeFromStation = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Can Return to Inventory: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanReturnToInventory = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'BOM Look Up Using Rules: ' + CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title4, 
                      'Consume Using BOM: ' + CASE WHEN tblWIP_Operation_Step_Consume.ConsumeUsingBOM = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 1 THEN 'Look Up: ' + tblWIP_BOM_LookUp.Name ELSE CASE WHEN tblWIP_Operation_Step_Consume.ConsumeUsingBOM
                       = 1 THEN 'BOM: ' + tblInventory_BOM.Name END END AS Title6, 'Default Consume Locale: ' + dbo.qrySystem_Locale.FullLocaleName AS Title7, 
                      'Can Consume from Default Locale: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromDefaultLocale = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Can Consume from Any Locale: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromAnyLocale = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'Can Consume from Work Order: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromWorkOrder = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'Can Consume from My Inventory: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromMyInventory = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblWIP_Operation_Step_Consume.DefaultConsumeLocaleUID LEFT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume_BOM ON dbo.tblWIP_BOM_LookUp.UID = dbo.tblWIP_Operation_Step_Consume_BOM.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_Consume.UID = dbo.tblWIP_Operation_Step_Consume_BOM.StepConsumeUID LEFT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblWIP_Operation_Step_Consume.BOMUID = dbo.tblInventory_BOM.UID
WHERE     (dbo.tblWIP_Operation_Step_Consume.IsEnabled = 1)

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Convert_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Convert_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Convert_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Convert_Union]
AS
SELECT     dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Convert' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Convert.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Convert ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConvertUID = dbo.tblWIP_Operation_Step_Convert.UID
WHERE     (dbo.tblWIP_Operation_Step_Convert.IsEnabled = 1)

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_Batch_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_Batch_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_Batch_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_Batch_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Batch Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataBatch.BatchIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule ON 
                      tblSystem_Attribute_GroupItem.UID = tblSystem_Attribute_Collection_RunRule.GroupItemUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef ON 
                      tblSystem_Attribute_Collection_RunRule.RunRuleDefUID = tblSystem_Attribute_RunRulesDef.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID ON 
                      tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation.UID ON 
                      tblSystem_Attribute_Collection.UID = tblSystem_Attribute_CollectionAssociation.CollectionUID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      tblSystem_Attribute_Collection_RunRule.AssociationUID = tblSystem_Attribute_Collection.UID AND 
                      tblSystem_Attribute_GroupItem.GroupUID = tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_SN_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_SN_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_SN_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_SN_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'SN Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataSN.SNIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.tblSystem_Attribute_CollectionGroup RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group ON 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = tblSystem_Attribute_Group.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataSN.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      tblSystem_Attribute_CollectionAssociation.UID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID ON 
                      tblSystem_Attribute_Collection.UID = tblSystem_Attribute_CollectionAssociation.CollectionUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem ON 
                      tblSystem_Attribute_Group.UID = tblSystem_Attribute_GroupItem.GroupUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef ON 
                      tblSystem_Attribute_Collection_RunRule.RunRuleDefUID = tblSystem_Attribute_RunRulesDef.UID ON 
                      tblSystem_Attribute_GroupItem.UID = tblSystem_Attribute_Collection_RunRule.GroupItemUID AND 
                      tblSystem_Attribute_CollectionAssociation.UID = tblSystem_Attribute_Collection_RunRule.AssociationUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_WO_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_WO_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_WO_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Data_Collect_WO_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'WO Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataWO.WOIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataWO.StepUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID ON 
                      tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem ON 
                      tblSystem_Attribute_Collection_RunRule.GroupItemUID = tblSystem_Attribute_GroupItem.UID ON 
                      tblSystem_Attribute_RunRulesDef.UID = tblSystem_Attribute_Collection_RunRule.RunRuleDefUID ON 
                      tblSystem_Attribute_Group.UID = tblSystem_Attribute_GroupItem.GroupUID ON 
                      tblSystem_Attribute_CollectionAssociation.CollectionUID = tblSystem_Attribute_Collection.UID AND 
                      tblSystem_Attribute_CollectionAssociation.UID = tblSystem_Attribute_Collection_RunRule.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Documents_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Documents_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Documents_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Documents_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Documents' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 'Name: ' + dbo.tblDocuments_Documents.DisplayName AS Title1, 
                      CASE WHEN CONVERT(varchar, dbo.tblDocuments_Documents.Description) <> '' THEN CONVERT(varchar, 'Desc: ') + CONVERT(varchar, 
                      dbo.tblDocuments_Documents.Description) ELSE '' END AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, 
                      '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblDocuments_Document_Association ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblDocuments_Document_Association.AssociatedObjectUID INNER JOIN
                      dbo.tblDocuments_Documents ON dbo.tblDocuments_Document_Association.DocumentUID = dbo.tblDocuments_Documents.UID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Inspect_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Inspect_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Inspect_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Inspect_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Inspect' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Inspect.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Inspect ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepInspectUID = dbo.tblWIP_Operation_Step_Inspect.UID
WHERE     (dbo.tblWIP_Operation_Step_Inspect.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Message_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Message_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Message_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Message_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Message' AS StepEvent, dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepEventIndex, '' AS IsEventRequired, 
                      dbo.tblWIP_Operation_Step_Message_Item.Type AS Title1, 
                      CASE WHEN tblWIP_Operation_Step_Message_Item.Message = ' ' THEN ' ' ELSE tblWIP_Operation_Step_Message_Item.Message END AS Title2, 
                      CASE WHEN tblAssetManagement_Assets.ID IS NOT NULL THEN tblAssetManagement_Assets.ID ELSE ' ' END AS Title3, 
                      CASE WHEN dbo.tblSystem_Attribute_GroupItem.Name IS NOT NULL 
                      THEN 'Attr Assoc for ' + dbo.tblWIP_Operation_Step_Message_Item.AttributeAssociationType + ': ' + dbo.tblSystem_Attribute_Group.Name + ' -  ' + dbo.tblSystem_Attribute_GroupItem.Name
                       ELSE ' ' END AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item INNER JOIN
                      dbo.tblWIP_Operation_Step_Message ON dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID = dbo.tblWIP_Operation_Step_Message.UID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_Message.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepMessageUID ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblWIP_Operation_Step_Message_Item.AttributeUID ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_Operation_Step_Message_Item.AssetUID
WHERE     (dbo.tblWIP_Operation_Step_Message.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Notification_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Notification_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Notification_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Notification_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Notification' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 'Trigger: ' + dbo.tblSystem_Email_Trigger.Name AS Title1, 
                      'Notification Name: ' + dbo.tblSystem_Email_Notification.Name AS Title2, 
                      'Is Notification Active: ' + CASE WHEN tblSystem_Email_Notification.IsActive = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'Send To Type: ' + dbo.tblSystem_Email_TriggerAssociation.SendToType AS Title4, 
                      'Send To: ' + CASE WHEN tblSystem_Email_TriggerAssociation.SendToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE CASE WHEN tblSystem_Email_TriggerAssociation.SendToType
                       = 'Contact' THEN tblContacts_Contacts.FullName ELSE ' ' END END AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, 
                      '' AS Title13, '' AS Title14
FROM         dbo.tblSystem_Email_Trigger INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblSystem_Email_TriggerAssociation ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID INNER JOIN
                      dbo.tblSystem_Email_Notification ON dbo.tblSystem_Email_TriggerAssociation.NotificationUID = dbo.tblSystem_Email_Notification.UID ON 
                      dbo.tblSystem_Email_Trigger.UID = dbo.tblSystem_Email_TriggerAssociation.TriggerUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contact_Group.UID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Permissions_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Permissions_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Permissions_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Permissions_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Permission' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 
                      'All User Access: ' + CASE WHEN qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Type of Group Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAllowProcessType AS Title2, 
                      'Group: ' + dbo.tblContacts_Contact_Group.Name AS Title3, 'Description: ' + CASE WHEN CONVERT(varchar, dbo.tblContacts_Contact_Group.Description) 
                      = '' THEN 'None' ELSE CONVERT(varchar, dbo.tblContacts_Contact_Group.Description) END AS Title4, 
                      'Is Access Group: ' + CASE WHEN tblContacts_Contact_Group.IsAccessGroup = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      'Is Email Group: ' + CASE WHEN tblContacts_Contact_Group.IsEmailGroup = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Is Cert Group: ' + CASE WHEN tblContacts_Contact_Group.IsCertification = '1' THEN 'True' ELSE 'False' END AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, 
                      '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblContacts_Contact_GroupAccess INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblContacts_Contact_GroupAccess.ObjectUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupAccess.GroupUID = dbo.tblContacts_Contact_Group.UID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Sign_Off_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Sign_Off_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Sign_Off_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_Sign_Off_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Sign Off' AS StepEvent, 
                      '' AS StepEventIndex, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'True' WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'True' ELSE 'False' END AS
                       IsEventRequired, 'Require Current User: ' + CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'Caption: ' + dbo.tblSystem_Signoff_Config.CurrentUserCaption ELSE '' END AS Title2, 
                      'Require Other User: ' + CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'Caption: ' + dbo.tblSystem_Signoff_Config.OtherUserCaption ELSE '' END AS Title4, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'Access Group: ' + tblContacts_Contact_Group.Name ELSE '' END AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblSystem_Signoff_Config INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblSystem_Signoff_Config.OtherUserAccessGroupUID = dbo.tblContacts_Contact_Group.UID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblSystem_Signoff_Config.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.SignoffConfigUID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_ToInventory_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_ToInventory_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_ToInventory_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_Setup_ToInventory_Union]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'To Inventory' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_ToInventory.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, 
                      '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_ToInventory ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepToInventoryUID = dbo.tblWIP_Operation_Step_ToInventory.UID
WHERE     (dbo.tblWIP_Operation_Step_ToInventory.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Full_Step_SETUP
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_SETUP]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_SETUP]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Full_Step_SETUP]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Recipe: ' + CASE WHEN tblWIP_Operation_Step_Asset.Recipe = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Recipe Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeOperatorSelectabel = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Recipe Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblWIP_Recipe.Name IS NULL THEN 'LookUp: ' + tblWIP_Recipe_LookUp.Name ELSE 'Recipe: ' + tblWIP_Recipe.Name END AS Title4, '' AS Title5, 
                      '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe_LookUp ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe_LookUp.UID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1) AND (dbo.tblWIP_Operation_Step_Asset.Recipe = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Tool: ' + CASE WHEN tblWIP_Operation_Step_Asset.Tool = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Tool Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolOperatorSelectable = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Tool Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblAssetManagement_Assets.ID IS NULL THEN 'LookUp: ' + tblWIP_Tool_LookUp.Name ELSE 'Tool: ' + tblAssetManagement_Assets.ID END AS Title4, 
                      '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Tool ON dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID LEFT OUTER JOIN
                      dbo.tblWIP_Tool_LookUp ON dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID = dbo.tblWIP_Tool_LookUp.UID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID ON 
                      dbo.tblWIP_Operation_Step_Asset_Tool.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1) AND (dbo.tblWIP_Operation_Step_Asset.Tool = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Can Start Asset: ' + CASE WHEN tblWIP_Operation_Step_Asset.CanStartAsset = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Can Stop Asset: ' + CASE WHEN tblWIP_Operation_Step_Asset.CanStopAsset = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Change Asset State: ' + CASE WHEN tblWIP_Operation_Step_Asset.ChangeAssetState = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'Multiple Lot Track In: ' + CASE WHEN tblWIP_Operation_Step_Asset.MultipleLotTrackIn = '1' THEN 'True' ELSE 'False' END AS Title4, 
                      'Allow Repair Request: ' + CASE WHEN tblWIP_Operation_Step_Asset.AllowRepairRequest = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      'Asset ID: ' + dbo.tblAssetManagement_Assets.ID AS Title6, 
                      'Is Default: ' + CASE WHEN tblWIP_Operation_Step_Asset_Asset.IsDefault = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Recipe: ' + CASE WHEN tblWIP_Operation_Step_Asset.Recipe = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Recipe Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeOperatorSelectabel = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'Recipe Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.RecipeLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'Tool: ' + CASE WHEN tblWIP_Operation_Step_Asset.Tool = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'Tool Operator Selectable: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolOperatorSelectable = '1' THEN 'True' ELSE 'False' END AS Title12, 
                      'Tool Lookup: ' + CASE WHEN tblWIP_Operation_Step_Asset.ToolLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title13, 
                      CASE WHEN tblWIP_Recipe.Name IS NULL THEN 'LookUp: ' + tblWIP_Recipe_LookUp.Name ELSE 'Recipe: ' + tblWIP_Recipe.Name END AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID AND 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_Asset.StepUID INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Asset ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Asset.StepAssetUID INNER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Asset_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe ON dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe_LookUp ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe_LookUp.UID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Asset' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsEventRequired, 
                      'Work Trkg Process: ' + dbo.tblWorkTracking_Process.Name + N' / ' + dbo.tblWorkTracking_Process_Revision.Revision AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, 
                      '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID INNER JOIN
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.StepAssetUID INNER JOIN
                      dbo.tblWorkTracking_Process_Revision ON 
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.WorkTrackingProcessRevUID = dbo.tblWorkTracking_Process_Revision.UID INNER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID
WHERE     (dbo.tblWIP_Operation_Step_Asset.IsEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Auto Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeAuto.IsActive AS IsEventRequired, 
                      'Activates at: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.EventType AS Title1, 'Attr: ' + dbo.tblSystem_Attribute_GroupItem.Caption AS Title2, 
                      'Set to: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.SetToType AS Title3, 'Value: ' + dbo.tblWIP_Operation_Step_SetAttributeAuto.SetValue AS Title4, '' AS Title5, 
                      '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeAuto ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_SetAttributeAuto.VariableUID = dbo.tblSystem_Attribute_GroupItem.UID
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual Batch Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.BatchIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.BatchGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.BatchEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual SN Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.SNIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.SNGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.SNEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Manual WO Set Attr' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_SetAttributeManual.WOIsRequired AS IsEventRequired, 
                      'Variable Group: ' + dbo.tblSystem_Attribute_Group.Name AS Title1, 'Variable Group Active: ' + CASE WHEN IsActive = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblWIP_Operation_Step_SetAttributeManual.WOGroupUID = dbo.tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Conditions' AS StepEvent, dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.CondIndex AS StepEventIndex, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.IsConditionEnabled AS IsEventRequired, 
                      'Condition: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.Condition AS Title1, 
                      'Associated To: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.GroupItemAssociation AS Title2, CONVERT(varchar, 'Log Message: ') 
                      + CONVERT(varchar, dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.LogMessage) AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.StepUID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_CombinedCond.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.StepUID
UNION
SELECT     dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Consume' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Consume.IsRequired AS IsEventRequired, 
                      'Consume To: ' + dbo.tblWIP_Operation_Step_Consume.ConsumeTo AS Title1, 
                      'Auto Consume From Station: ' + CASE WHEN tblWIP_Operation_Step_Consume.AutoConsumeFromStation = '1' THEN 'True' ELSE 'False' END AS Title2, 
                      'Can Return to Inventory: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanReturnToInventory = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'BOM Look Up Using Rules: ' + CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = '1' THEN 'True' ELSE 'False' END AS Title4, 
                      'Consume Using BOM: ' + CASE WHEN tblWIP_Operation_Step_Consume.ConsumeUsingBOM = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 1 THEN 'Look Up: ' + tblWIP_BOM_LookUp.Name ELSE CASE WHEN tblWIP_Operation_Step_Consume.ConsumeUsingBOM
                       = 1 THEN 'BOM: ' + tblInventory_BOM.Name END END AS Title6, 'Default Consume Locale: ' + dbo.qrySystem_Locale.FullLocaleName AS Title7, 
                      'Can Consume from Default Locale: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromDefaultLocale = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Can Consume from Any Locale: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromAnyLocale = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'Can Consume from Work Order: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromWorkOrder = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'Can Consume from My Inventory: ' + CASE WHEN tblWIP_Operation_Step_Consume.CanConsumeFromMyInventory = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID ON 
                      dbo.qrySystem_Locale.UID = dbo.tblWIP_Operation_Step_Consume.DefaultConsumeLocaleUID LEFT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume_BOM ON dbo.tblWIP_BOM_LookUp.UID = dbo.tblWIP_Operation_Step_Consume_BOM.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_Consume.UID = dbo.tblWIP_Operation_Step_Consume_BOM.StepConsumeUID LEFT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblWIP_Operation_Step_Consume.BOMUID = dbo.tblInventory_BOM.UID
WHERE     (dbo.tblWIP_Operation_Step_Consume.IsEnabled = 1)
UNION
SELECT     dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Convert' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Convert.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Convert ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConvertUID = dbo.tblWIP_Operation_Step_Convert.UID
WHERE     (dbo.tblWIP_Operation_Step_Convert.IsEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Batch Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataBatch.BatchIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule ON 
                      tblSystem_Attribute_GroupItem.UID = tblSystem_Attribute_Collection_RunRule.GroupItemUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef ON 
                      tblSystem_Attribute_Collection_RunRule.RunRuleDefUID = tblSystem_Attribute_RunRulesDef.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID ON 
                      tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation.UID ON 
                      tblSystem_Attribute_Collection.UID = tblSystem_Attribute_CollectionAssociation.CollectionUID RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      tblSystem_Attribute_Collection_RunRule.AssociationUID = tblSystem_Attribute_Collection.UID AND 
                      tblSystem_Attribute_GroupItem.GroupUID = tblSystem_Attribute_Group.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'SN Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataSN.SNIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.tblSystem_Attribute_CollectionGroup RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group ON 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = tblSystem_Attribute_Group.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataSN.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      tblSystem_Attribute_CollectionAssociation.UID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID ON 
                      tblSystem_Attribute_Collection.UID = tblSystem_Attribute_CollectionAssociation.CollectionUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem ON 
                      tblSystem_Attribute_Group.UID = tblSystem_Attribute_GroupItem.GroupUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef ON 
                      tblSystem_Attribute_Collection_RunRule.RunRuleDefUID = tblSystem_Attribute_RunRulesDef.UID ON 
                      tblSystem_Attribute_GroupItem.UID = tblSystem_Attribute_Collection_RunRule.GroupItemUID AND 
                      tblSystem_Attribute_CollectionAssociation.UID = tblSystem_Attribute_Collection_RunRule.AssociationUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'WO Data Collect' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_CollectDataWO.WOIsRequired AS IsEventRequired, 
                      'Collection Name: ' + tblSystem_Attribute_Collection.Name AS Title1, 'Variable Group: ' + tblSystem_Attribute_Group.Name AS Title2, 
                      'Variable: ' + tblSystem_Attribute_GroupItem.Name AS Title3, 'Run Rule Criteria: ' + CASE WHEN tblSystem_Attribute_RunRulesDef.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule.Criteria ELSE tblSystem_Attribute_RunRulesDef.Name END AS Title4, CONVERT(varchar, 'Run Rule Value: ') 
                      + CONVERT(varchar(8000), tblSystem_Attribute_Collection_RunRule.Value) AS Title5, 
                      'Send Email: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SendEmail = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Prompt Superv: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.PromptSupervisor = '1' THEN 'True' ELSE 'False' END AS Title7, 
                      'Reject Data: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.RejectData = '1' THEN 'True' ELSE 'False' END AS Title8, 
                      'Display Message: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.DisplayMessage = '1' THEN 'True' ELSE 'False' END AS Title9, 
                      'WIP Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPHold = '1' THEN 'True' ELSE 'False' END AS Title10, 
                      'WIP Process Hold: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.WIPProcessHold = '1' THEN 'True' ELSE 'False' END AS Title11, 
                      'SPC Require Entry: ' + CASE WHEN tblSystem_Attribute_Collection_RunRule.SPCRequireEntry = '1' THEN 'True' ELSE 'False' END AS Title12, '' AS Title13, 
                      '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataWO.StepUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID ON 
                      tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem ON 
                      tblSystem_Attribute_Collection_RunRule.GroupItemUID = tblSystem_Attribute_GroupItem.UID ON 
                      tblSystem_Attribute_RunRulesDef.UID = tblSystem_Attribute_Collection_RunRule.RunRuleDefUID ON 
                      tblSystem_Attribute_Group.UID = tblSystem_Attribute_GroupItem.GroupUID ON 
                      tblSystem_Attribute_CollectionAssociation.CollectionUID = tblSystem_Attribute_Collection.UID AND 
                      tblSystem_Attribute_CollectionAssociation.UID = tblSystem_Attribute_Collection_RunRule.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Documents' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 'Name: ' + dbo.tblDocuments_Documents.DisplayName AS Title1, 
                      CASE WHEN CONVERT(varchar, dbo.tblDocuments_Documents.Description) <> '' THEN CONVERT(varchar, 'Desc: ') + CONVERT(varchar, 
                      dbo.tblDocuments_Documents.Description) ELSE '' END AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, 
                      '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblDocuments_Document_Association ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblDocuments_Document_Association.AssociatedObjectUID INNER JOIN
                      dbo.tblDocuments_Documents ON dbo.tblDocuments_Document_Association.DocumentUID = dbo.tblDocuments_Documents.UID
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Inspect' AS StepEvent, 
                      '' AS StepEventIndex, dbo.tblWIP_Operation_Step_Inspect.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, '' AS Title4, '' AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Inspect ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepInspectUID = dbo.tblWIP_Operation_Step_Inspect.UID
WHERE     (dbo.tblWIP_Operation_Step_Inspect.IsEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Message' AS StepEvent, dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepEventIndex, '' AS IsEventRequired, 
                      dbo.tblWIP_Operation_Step_Message_Item.Type AS Title1, 
                      CASE WHEN tblWIP_Operation_Step_Message_Item.Message = ' ' THEN ' ' ELSE tblWIP_Operation_Step_Message_Item.Message END AS Title2, 
                      CASE WHEN tblAssetManagement_Assets.ID IS NOT NULL THEN tblAssetManagement_Assets.ID ELSE ' ' END AS Title3, 
                      CASE WHEN dbo.tblSystem_Attribute_GroupItem.Name IS NOT NULL 
                      THEN 'Attr Assoc for ' + dbo.tblWIP_Operation_Step_Message_Item.AttributeAssociationType + ': ' + dbo.tblSystem_Attribute_Group.Name + ' -  ' + dbo.tblSystem_Attribute_GroupItem.Name
                       ELSE ' ' END AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item INNER JOIN
                      dbo.tblWIP_Operation_Step_Message ON dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID = dbo.tblWIP_Operation_Step_Message.UID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_Message.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepMessageUID ON 
                      dbo.tblSystem_Attribute_GroupItem.UID = dbo.tblWIP_Operation_Step_Message_Item.AttributeUID ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_Operation_Step_Message_Item.AssetUID
WHERE     (dbo.tblWIP_Operation_Step_Message.IsEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Notification' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 'Trigger: ' + dbo.tblSystem_Email_Trigger.Name AS Title1, 
                      'Notification Name: ' + dbo.tblSystem_Email_Notification.Name AS Title2, 
                      'Is Notification Active: ' + CASE WHEN tblSystem_Email_Notification.IsActive = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      'Send To Type: ' + dbo.tblSystem_Email_TriggerAssociation.SendToType AS Title4, 
                      'Send To: ' + CASE WHEN tblSystem_Email_TriggerAssociation.SendToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE CASE WHEN tblSystem_Email_TriggerAssociation.SendToType
                       = 'Contact' THEN tblContacts_Contacts.FullName ELSE ' ' END END AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, 
                      '' AS Title13, '' AS Title14
FROM         dbo.tblSystem_Email_Trigger INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblSystem_Email_TriggerAssociation ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblSystem_Email_TriggerAssociation.AssociatedObjectUID INNER JOIN
                      dbo.tblSystem_Email_Notification ON dbo.tblSystem_Email_TriggerAssociation.NotificationUID = dbo.tblSystem_Email_Notification.UID ON 
                      dbo.tblSystem_Email_Trigger.UID = dbo.tblSystem_Email_TriggerAssociation.TriggerUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblSystem_Email_TriggerAssociation.SendToUID = dbo.tblContacts_Contact_Group.UID
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'Permission' AS StepEvent, '' AS StepEventIndex, '' AS IsEventRequired, 
                      'All User Access: ' + CASE WHEN qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAllowAllUserProcess = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      'Type of Group Access: ' + dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAllowProcessType AS Title2, 
                      'Group: ' + dbo.tblContacts_Contact_Group.Name AS Title3, 'Description: ' + CASE WHEN CONVERT(varchar, dbo.tblContacts_Contact_Group.Description) 
                      = '' THEN 'None' ELSE CONVERT(varchar, dbo.tblContacts_Contact_Group.Description) END AS Title4, 
                      'Is Access Group: ' + CASE WHEN tblContacts_Contact_Group.IsAccessGroup = '1' THEN 'True' ELSE 'False' END AS Title5, 
                      'Is Email Group: ' + CASE WHEN tblContacts_Contact_Group.IsEmailGroup = '1' THEN 'True' ELSE 'False' END AS Title6, 
                      'Is Cert Group: ' + CASE WHEN tblContacts_Contact_Group.IsCertification = '1' THEN 'True' ELSE 'False' END AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, 
                      '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblContacts_Contact_GroupAccess INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblContacts_Contact_GroupAccess.ObjectUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblContacts_Contact_GroupAccess.GroupUID = dbo.tblContacts_Contact_Group.UID
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 'Sign Off' AS StepEvent, 
                      '' AS StepEventIndex, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'True' WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'True' ELSE 'False' END AS
                       IsEventRequired, 'Require Current User: ' + CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'True' ELSE 'False' END AS Title1, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser = '1' THEN 'Caption: ' + dbo.tblSystem_Signoff_Config.CurrentUserCaption ELSE '' END AS Title2, 
                      'Require Other User: ' + CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'True' ELSE 'False' END AS Title3, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'Caption: ' + dbo.tblSystem_Signoff_Config.OtherUserCaption ELSE '' END AS Title4, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser = '1' THEN 'Access Group: ' + tblContacts_Contact_Group.Name ELSE '' END AS Title5, '' AS Title6, 
                      '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.tblSystem_Signoff_Config INNER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblSystem_Signoff_Config.OtherUserAccessGroupUID = dbo.tblContacts_Contact_Group.UID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblSystem_Signoff_Config.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.SignoffConfigUID
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsLocked, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunStepsOutOfOrder, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.CanRunMultipleTimes, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.Notes, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowLogComments, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowSplit, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowHold, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.AllowScrap, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToComplete, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.VerifyQtyToStart, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      'To Inventory' AS StepEvent, '' AS StepEventIndex, dbo.tblWIP_Operation_Step_ToInventory.IsRequired AS IsEventRequired, '' AS Title1, '' AS Title2, '' AS Title3, 
                      '' AS Title4, '' AS Title5, '' AS Title6, '' AS Title7, '' AS Title8, '' AS Title9, '' AS Title10, '' AS Title11, '' AS Title12, '' AS Title13, '' AS Title14
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_ToInventory ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepToInventoryUID = dbo.tblWIP_Operation_Step_ToInventory.UID
WHERE     (dbo.tblWIP_Operation_Step_ToInventory.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Assets
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Assets]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Assets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Assets]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_Asset.IsEnabled AS IsAssetStepEnabled, dbo.tblWIP_Operation_Step_Asset.IsRequired AS IsAssetStepRequired, 
                      dbo.tblWIP_Operation_Step_Asset.CanStartAsset, dbo.tblWIP_Operation_Step_Asset.CanStopAsset, dbo.tblWIP_Operation_Step_Asset.StartMultiAsset, 
                      dbo.tblWIP_Operation_Step_Asset.ChangeAssetState, dbo.tblWIP_Operation_Step_Asset.MultipleLotTrackIn, dbo.tblWIP_Operation_Step_Asset.AllowRepairRequest, 
                      dbo.tblWIP_Operation_Step_Asset.Recipe AS IsRecipeEnabled, dbo.tblWIP_Operation_Step_Asset.RecipeOperatorSelectabel AS RecipeOperatorSelectable, 
                      dbo.tblWIP_Operation_Step_Asset.RecipeLookUpUsingRules, dbo.tblWIP_Operation_Step_Asset.Tool AS IsToolEnabled, 
                      dbo.tblWIP_Operation_Step_Asset.ToolOperatorSelectable, dbo.tblWIP_Operation_Step_Asset.ToolLookUpUsingRules, tblAssetManagement_Assets.ID AS AssetID, 
                      tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblWIP_Operation_Step_Asset_Asset.IsDefault AS IsDefaultAsset, 
                      CASE WHEN tblAssetManagement_Assets.ID IS NULL THEN tblWIP_Tool_LookUp.Name ELSE 'N/A' END AS ToolLookUpName, 
                      dbo.tblWIP_Tool_LookUp.IsActive AS IsToolLookUpActive, CASE WHEN tblAssetManagement_Assets.ID IS NOT NULL 
                      THEN tblAssetManagement_Assets.ID ELSE 'N/A' END AS ToolID, CASE WHEN tblWIP_Recipe.Name IS NULL 
                      THEN tblWIP_Recipe_LookUp.Name ELSE 'N/A' END AS RecipeLookUpName, CASE WHEN tblWIP_Recipe.Name IS NULL 
                      THEN tblWIP_Recipe_LookUp.IsActive ELSE 'False' END AS IsRecipeLookUpActive, CASE WHEN tblWIP_Recipe.Name IS NOT NULL 
                      THEN tblWIP_Recipe.Name ELSE 'N/A' END AS Recipe, CASE WHEN tblWIP_Recipe.Name IS NOT NULL 
                      THEN tblWIP_Recipe.IsActive ELSE 'False' END AS IsRecipeActive, CASE WHEN tblWIP_Recipe.Name IS NOT NULL 
                      THEN tblWIP_Recipe.Description ELSE 'N/A' END AS RecipeDescription, CASE WHEN tblWIP_Recipe.Name IS NOT NULL 
                      THEN tblWIP_Recipe.Category ELSE 'N/A' END AS RecipeCategory, CASE WHEN tblWIP_Recipe.Name IS NOT NULL 
                      THEN tblWIP_Recipe.Notes ELSE 'N/A' END AS RecipeNotes, dbo.tblWorkTracking_Process.Name AS WorkTrackingProcess, 
                      dbo.tblWorkTracking_Process.IsActive AS IsWorkTrackingProcessActive, dbo.tblWorkTracking_Process_Revision.Revision AS WorkTrackingProcRev, 
                      dbo.tblWorkTracking_Process_Revision.IsActive AS IsWorkTrackingProcRevActive, 
                      dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS WorkTrackingProcessAndRevision, 
                      CASE WHEN tblWorkTracking_Process_Revision.Revision IS NULL THEN 'False' ELSE 'True' END AS IsWorkTrackingProcessEnabled, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess ON 
                      dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.WorkTrackingProcessRevUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset ON 
                      dbo.tblWIP_Operation_Step_Asset_WorkTrackingProcess.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID LEFT OUTER JOIN
                      dbo.tblWIP_Recipe_LookUp RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Recipe LEFT OUTER JOIN
                      dbo.tblWIP_Recipe ON dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID = dbo.tblWIP_Recipe.UID ON 
                      dbo.tblWIP_Recipe_LookUp.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Recipe.StepAssetUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Tool ON tblAssetManagement_Assets_1.UID = dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID LEFT OUTER JOIN
                      dbo.tblWIP_Tool_LookUp ON dbo.tblWIP_Operation_Step_Asset_Tool.AssociationUID = dbo.tblWIP_Tool_LookUp.UID ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Tool.StepAssetUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Asset_Asset LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Asset_Asset.AssetUID = tblAssetManagement_Assets.UID ON 
                      dbo.tblWIP_Operation_Step_Asset.UID = dbo.tblWIP_Operation_Step_Asset_Asset.StepAssetUID ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Basics
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Basics]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Basics]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Basics]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Operation.UID AS OperationUID, 
               dbo.tblWIP_Operation.IsActive AS IsOperationActive, dbo.tblWIP_Operation_Revision.IsActive AS IsOpRevActive, 
               dbo.tblWIP_Operation_Revision.IsLocked AS IsOpRevLocked, dbo.tblWIP_Operation_Revision.CanRunStepsOutOfOrder, 
               dbo.tblWIP_Operation_Revision.CanRunMultipleTimes, dbo.tblWIP_Operation_Revision.Notes AS OpNotes, 
               dbo.tblWIP_Operation_Revision.AllowLogComments AS OpAllowLogComments, dbo.tblWIP_Operation_Revision.AllowAttachDocs AS OpAllowAttachDocs, 
               dbo.tblWIP_Operation_Revision.AllowSplit AS OpAllowSplit, dbo.tblWIP_Operation_Revision.AllowHold AS OpAllowHold, 
               dbo.tblWIP_Operation_Revision.AllowScrap AS OpAllowScrap, dbo.tblWIP_Operation_Revision.AllowLogHours AS OpAllowLogHours, 
               dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step.Notes AS StepNotes, 
               dbo.tblWIP_Operation_Step.AllowAllUserAccess AS StepAllowAllUserAccess, dbo.tblWIP_Operation_Step.AllowAccessType AS StepAllowAccessType, 
               dbo.tblWIP_Operation_Step.UID AS StepUID, tblWIP_Operation_Step_1.Name AS FirstStepName, tblWIP_Operation_Step_2.Name AS LastStepName, 
               tblWIP_Operation_Step_1.UID AS FirstStepUID, tblWIP_Operation_Step_2.UID AS LastStepUID, dbo.tblWIP_Operation_Step_Asset.IsEnabled AS IsAssetEnabled, 
               dbo.tblWIP_Operation_Step_Consume.IsEnabled AS IsConsumeEnabled, dbo.tblWIP_Operation_Step_Convert.IsEnabled AS IsConvertEnabled, 
               dbo.tblWIP_Operation_Step_Inspect.IsEnabled AS IsInspectEnabled, dbo.tblWIP_Operation_Step_Message.IsEnabled AS IsMessageEnabled, 
               dbo.tblWIP_Operation_Step_ToInventory.IsEnabled AS IsToInventoryEnabled, 
               dbo.tblWIP_Operation_Step_SetAttributeManual.WOEnabled AS IsManualAttrWOEnabled, 
               dbo.tblWIP_Operation_Step_SetAttributeManual.BatchEnabled AS IsManualAttrBatchEnabled, 
               dbo.tblWIP_Operation_Step_SetAttributeManual.SNEnabled AS IsManualAttrSNEnabled, 
               dbo.tblWIP_Operation_Step_SetAttributeAuto.IsActive AS IsAutoAttrEnabled, 
               dbo.tblSystem_Signoff_Config.RequireCurrentUser AS IsCurrentUserSignOffEnabled, 
               dbo.tblSystem_Signoff_Config.RequireOtherUser AS IsOtherUserSignOffEnabled, 
               dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled AS IsDataCollectBatchEnabled, 
               dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled AS IsDataCollectSNEnabled, 
               dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled AS IsDataCollectWOEnabled, dbo.tblWIP_Operation_Step.VerifyQtyToComplete, 
               dbo.tblWIP_Operation_Step.VerifyQtyToStart, dbo.tblWIP_Operation.AllowAllUserProcess AS OperationAllowAllUserProcess, 
               dbo.tblWIP_Operation.AllowProcessType AS OperationAllowProcessType
FROM  dbo.tblWIP_Operation_Step_CollectDataWO RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_CollectDataWO.StepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_CollectDataBatch ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_CollectDataSN ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_CollectDataSN.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_Asset ON dbo.tblWIP_Operation_Step.StepAssetUID = dbo.tblWIP_Operation_Step_Asset.UID LEFT OUTER JOIN
               dbo.tblSystem_Signoff_Config ON dbo.tblWIP_Operation_Step.SignoffConfigUID = dbo.tblSystem_Signoff_Config.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_SetAttributeAuto ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_SetAttributeManual ON 
               dbo.tblWIP_Operation_Step.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_ToInventory ON dbo.tblWIP_Operation_Step.StepToInventoryUID = dbo.tblWIP_Operation_Step_ToInventory.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_Inspect ON dbo.tblWIP_Operation_Step.StepInspectUID = dbo.tblWIP_Operation_Step_Inspect.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_Message ON dbo.tblWIP_Operation_Step.StepMessageUID = dbo.tblWIP_Operation_Step_Message.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_Convert ON dbo.tblWIP_Operation_Step.StepConvertUID = dbo.tblWIP_Operation_Step_Convert.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step_Consume ON dbo.tblWIP_Operation_Step.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_2 RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON tblWIP_Operation_Step_2.UID = dbo.tblWIP_Operation_Revision.LastStepUID ON 
               tblWIP_Operation_Step_1.UID = dbo.tblWIP_Operation_Revision.FirstStepUID ON 
               dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID
ORDER BY OperationName, StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_BOM_Items
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_BOM_Items]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_BOM_Items]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_BOM_Items]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END AS IsEnabledConsume, 
                      dbo.tblWIP_Operation_Step_Consume.IsRequired AS IsConsumeRequired, dbo.tblWIP_Operation_Step_Consume.ConsumeTo, 
                      dbo.tblWIP_Operation_Step_Consume.ConsumeUsingBOM, dbo.tblWIP_Operation_Step_Consume.BOMLookUpUsingRules, 
                      dbo.tblWIP_BOM_LookUp.Name AS BOMLookUp, dbo.tblInventory_BOM.Name AS BOMFromLookUp, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_BOM.Name ELSE tblInventory_BOM_1.Name END AS BOMName, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_Item_2.Name ELSE tblInventory_Item_1.Name END AS ConsumableName,
                       CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_Item_2.Description ELSE tblInventory_Item_1.Description END AS ConsumableDescription,
                       CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_Item_2.PartNumber ELSE tblInventory_Item_1.PartNumber END AS
                       ConsumablePartNumber, CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN CASE WHEN tblInventory_Item_Unit.UnitName IS NULL
                       THEN tblInventory_Item.DefaultUnit ELSE 'tblInventory_Item_Unit.UnitName CASE WHEN tblInventory_Item_Unit_1.UnitName IS NULL THEN tblInventory_Item_2.DefaultUnit ELSE tblInventory_Item_Unit_1.UnitName'
                       END END AS ConsumableUnitOfMeasure, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_BOM_Item_1.Quantity ELSE tblInventory_BOM_Item.Quantity END AS
                       ConsumableQuantity, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_Item.Name ELSE 'Not LookUp BOM ' END AS LookUpProduct, 
                      CASE WHEN tblWIP_Operation_Step_Consume.BOMLookUpUsingRules = 'True' THEN tblInventory_Item.Description ELSE 'Not LookUp BOM' END AS LookUpProductDescription,
                       dbo.tblWIP_Operation_Step_Message_Item.[Index], dbo.tblWIP_Operation_Step_Message_Item.Message
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message INNER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item ON dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID ON 
                      dbo.tblWIP_Operation_Step_Consume.StepUID = dbo.tblWIP_Operation_Step_Message.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume_BOM LEFT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp LEFT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM INNER JOIN
                      dbo.tblWIP_BOM_LookUp_Rule ON dbo.tblInventory_BOM.UID = dbo.tblWIP_BOM_LookUp_Rule.BOMUID INNER JOIN
                      dbo.tblInventory_BOM_Item AS tblInventory_BOM_Item_1 ON dbo.tblInventory_BOM.UID = tblInventory_BOM_Item_1.BOMUID ON 
                      dbo.tblInventory_Item_Unit.UID = tblInventory_BOM_Item_1.UnitUID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_2 ON tblInventory_BOM_Item_1.ItemUID = tblInventory_Item_2.UID ON 
                      dbo.tblInventory_Item.UID = dbo.tblWIP_BOM_LookUp_Rule.InventoryItemUID ON dbo.tblWIP_BOM_LookUp.UID = dbo.tblWIP_BOM_LookUp_Rule.LookUpUID ON 
                      dbo.tblWIP_Operation_Step_Consume_BOM.AssociationUID = dbo.tblWIP_BOM_LookUp.UID ON 
                      dbo.tblWIP_Operation_Step_Consume.UID = dbo.tblWIP_Operation_Step_Consume_BOM.StepConsumeUID LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit AS tblInventory_Item_Unit_1 ON dbo.tblInventory_BOM_Item.UnitUID = tblInventory_Item_Unit_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_BOM_Item.ItemUID = tblInventory_Item_1.UID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_1 ON dbo.tblInventory_BOM_Item.BOMUID = tblInventory_BOM_1.UID ON 
                      dbo.tblWIP_Operation_Step_Consume.BOMUID = tblInventory_BOM_1.UID
WHERE     (CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END = 'true')
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, BOMLookUp

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Conditions   
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Conditions]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Conditions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Conditions]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, dbo.tblWIP_Operation_Step_Condition.[Index] AS CondIndex, 
               dbo.tblWIP_Operation_Step_Condition.Name AS CondName, dbo.tblWIP_Operation_Step_Condition.ActionType, 
               dbo.tblSystem_Attribute_GroupItem.Name AS VarName, dbo.tblWIP_Operation_Step_Condition.GroupItemCondition, 
               dbo.tblWIP_Operation_Step_Condition.GroupItemValue, tblWIP_Operation_Step_1.Name AS GotoStepName, 
               CASE WHEN tblWIP_Operation_Step_Condition.ConditionType = 'Attribute' THEN GroupItemAssociation ELSE '' END AS GroupItemAssociation, 
               dbo.tblWIP_Operation_Step_Condition.IsActive AS IsConditionEnabled, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID, 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationUID, dbo.tblWIP_Process.Name AS ChangeToProcess, 
               dbo.tblWIP_Process_Revision.Revision AS ChangeToProcessRev, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ChangeToProcessAndRevision, 
               dbo.tblWIP_Operation.Name AS ChangeToOperation, dbo.tblWIP_Operation_Revision.Revision AS ChangeToOperationRev, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS ChangeToOperationAndRevision, 
               dbo.tblWIP_Operation.Description AS ChangeToOperationDescription, dbo.tblWIP_Process_Revision.IsActive AS IsChangeToProcessRevActive, 
               dbo.tblWIP_Process.IsActive AS IsChangeToProcessActive, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision + N' AT ' + dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision
                AS ChangeToProcessAndOperation, dbo.tblWIP_Operation_Revision.IsActive AS IsChangeToOperationRevActive, 
               dbo.tblWIP_Operation.IsActive AS IsChangeToOperationActive, 
               CASE WHEN tblWIP_Operation_Step_Condition.ActionType = 'GoTo' THEN 'Step: ' + tblWIP_Operation_Step_1.Name ELSE dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision
                + ' AT ' + dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision END AS GoToChangeToResult, 
               dbo.tblWIP_Operation_Step_Condition.LogMessage, dbo.tblWIP_Operation_Step_Condition.qrySelect, CASE WHEN qryValue IS NULL OR
               qryValue = '' THEN ' ' ELSE qryCondition END AS qryCondition, dbo.tblWIP_Operation_Step_Condition.qryValue, 
               dbo.tblWIP_Operation_Step_Condition.ConditionType, dbo.tblAssetManagement_Assets.ID AS StartAssetID, 
               CASE WHEN tblWIP_Operation_Step_Condition.ConditionType = 'AssetStart' THEN tblWIP_Operation_Step.Name ELSE '' END AS StartAssetStep, 
               dbo.tblInventory_Item.Name AS MainProduct
FROM  dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
               dbo.tblWIP_Operation_Step_Condition ON 
               dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_Condition.StepUID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblWIP_Operation_Step_Condition.InventoryItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Condition.StartStepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Condition.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
               dbo.tblWIP_Process RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_Operation_Step_Condition.ChangeToFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_Condition.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON dbo.tblWIP_Operation_Step_Condition.GoToStepUID = tblWIP_Operation_Step_1.UID
WHERE (dbo.tblWIP_Operation_Step_Condition.IsActive = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Consume
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Consume]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Consume]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Consume]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_Message.IsEnabled AS StepMessageIsEnabled, dbo.tblWIP_Operation_Step_Message_Item.Type AS StepMessageType, 
                      dbo.tblWIP_Operation_Step_Message_Item.Message AS StepMessage, dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepMessageIndex, 
                      CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END AS IsEnabledConsume, 
                      dbo.tblWIP_Operation_Step_Consume.IsRequired AS ConsumeIsRequired, dbo.tblWIP_Operation_Step_Consume.ConsumeTo, 
                      dbo.tblWIP_Operation_Step_Consume.AutoConsumeFromStation, dbo.tblWIP_Operation_Step_Consume.CanReturnToInventory, 
                      dbo.tblWIP_Operation_Step_Consume.BOMLookUpUsingRules, dbo.tblWIP_Operation_Step_Consume.ConsumeUsingBOM, 
                      dbo.tblWIP_BOM_LookUp.Name AS BOMLookUp, tblInventory_BOM_1.Name AS SpecificBOM, dbo.qrySystem_Locale.FullLocaleName AS DefaultConsumeLocale, 
                      dbo.tblWIP_Operation_Step_Consume.CanConsumeFromDefaultLocale, dbo.tblWIP_Operation_Step_Consume.CanConsumeFromAnyLocale, 
                      dbo.tblWIP_Operation_Step_Consume.CanConsumeFromWorkOrder, dbo.tblWIP_Operation_Step_Consume.CanConsumeFromMyInventory
FROM         dbo.tblInventory_BOM AS tblInventory_BOM_1 RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message ON dbo.tblWIP_Operation_Step_Consume.StepUID = dbo.tblWIP_Operation_Step_Message.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item ON 
                      dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID LEFT OUTER JOIN
                      dbo.tblWIP_BOM_LookUp RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume_BOM ON dbo.tblWIP_BOM_LookUp.UID = dbo.tblWIP_Operation_Step_Consume_BOM.AssociationUID ON 
                      dbo.tblWIP_Operation_Step_Consume.UID = dbo.tblWIP_Operation_Step_Consume_BOM.StepConsumeUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblWIP_Operation_Step_Consume.DefaultConsumeLocaleUID = dbo.qrySystem_Locale.UID ON 
                      tblInventory_BOM_1.UID = dbo.tblWIP_Operation_Step_Consume.BOMUID
WHERE     (dbo.tblWIP_Operation_Step_Message_Item.[Index] = 0) AND (CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END = 1) OR
                      (dbo.tblWIP_Operation_Step_Message_Item.[Index] IS NULL) AND (CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Work Order' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VariableDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_CollectionGroup FULL OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataWO.StepUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 INNER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation_2.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 ON tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID ON 
                      tblSystem_Attribute_Collection_RunRule_2.GroupItemUID = tblSystem_Attribute_GroupItem_2.UID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_Collection_RunRule_2.AssociationUID ON 
                      tblSystem_Attribute_RunRulesDef_1.UID = tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection_2.UID AND 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = tblSystem_Attribute_Group_2.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Batch' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VarialbeDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 INNER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      tblSystem_Attribute_CollectionAssociation_2.UID = dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 ON 
                      tblSystem_Attribute_GroupItem_2.UID = tblSystem_Attribute_Collection_RunRule_2.GroupItemUID ON 
                      tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID = tblSystem_Attribute_Collection_RunRule_2.AssociationUID ON 
                      tblSystem_Attribute_RunRulesDef_1.UID = tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID FULL OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group_2.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID AND 
                      tblSystem_Attribute_Collection_2.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled = 1)
UNION
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Serial Number' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VariableDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group_2.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 INNER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection_2.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 ON 
                      tblSystem_Attribute_GroupItem_2.UID = tblSystem_Attribute_Collection_RunRule_2.GroupItemUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN ON 
                      tblSystem_Attribute_Collection_RunRule_2.AssociationUID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataSN.StepUID ON 
                      tblSystem_Attribute_RunRulesDef_1.UID = tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID ON 
                      tblSystem_Attribute_CollectionAssociation_2.UID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID AND 
                      tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, GroupIndex, 
                      VariableItemRow, VariableItemColumn


GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_Batch
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_Batch]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_Batch]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_Batch]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Batch' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VarialbeDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataBatch INNER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation_2.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 ON 
                      tblSystem_Attribute_GroupItem_2.UID = tblSystem_Attribute_Collection_RunRule_2.GroupItemUID ON 
                      tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataBatch.BatchCollectionAssociationUID = tblSystem_Attribute_Collection_RunRule_2.AssociationUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 ON 
                      tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID = tblSystem_Attribute_RunRulesDef_1.UID ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group_2.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID AND 
                      tblSystem_Attribute_Collection_2.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataBatch.BatchEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, GroupIndex, 
                      VariableItemRow, VariableItemColumn

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_SN
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_SN]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_SN]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_SN]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Serial Number' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VariableDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON tblSystem_Attribute_Group_2.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 INNER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection_2.UID RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 ON 
                      tblSystem_Attribute_GroupItem_2.UID = tblSystem_Attribute_Collection_RunRule_2.GroupItemUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataSN ON 
                      tblSystem_Attribute_Collection_RunRule_2.AssociationUID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataSN.StepUID ON 
                      tblSystem_Attribute_RunRulesDef_1.UID = tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID ON 
                      tblSystem_Attribute_CollectionAssociation_2.UID = dbo.tblWIP_Operation_Step_CollectDataSN.SNCollectionAssociationUID AND 
                      tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataSN.SNEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, GroupIndex, 
                      VariableItemRow, VariableItemColumn

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_WO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_WO]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_WO]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Data_Collections_WO]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled AS Enabled, tblSystem_Attribute_Collection_2.Name AS Collection, 'Work Order' AS CollectionType, 
                      dbo.tblSystem_Attribute_CollectionGroup.[Index] AS GroupIndex, tblSystem_Attribute_Group_2.Name AS VariableGroup, 
                      tblSystem_Attribute_GroupItem_2.Row AS VariableItemRow, tblSystem_Attribute_GroupItem_2.[Column] AS VariableItemColumn, 
                      tblSystem_Attribute_GroupItem_2.Name AS VariableItem, tblSystem_Attribute_GroupItem_2.Caption AS VariableItemCaption, 
                      tblSystem_Attribute_GroupItem_2.DataType AS VariableDataType, tblSystem_Attribute_GroupItem_2.DefaultValue AS VariableDefaultValue, 
                      CASE WHEN tblSystem_Attribute_RunRulesDef_1.Name IS NULL 
                      THEN tblSystem_Attribute_Collection_RunRule_2.Criteria ELSE tblSystem_Attribute_RunRulesDef_1.Name END AS Criteria, CONVERT(varchar(8000), 
                      tblSystem_Attribute_Collection_RunRule_2.Value) AS Value, tblSystem_Attribute_Collection_RunRule_2.SendEmail, 
                      tblSystem_Attribute_Collection_RunRule_2.PromptSupervisor, tblSystem_Attribute_Collection_RunRule_2.RejectData, 
                      tblSystem_Attribute_Collection_RunRule_2.DisplayMessage, tblSystem_Attribute_Collection_RunRule_2.WIPHold, 
                      tblSystem_Attribute_Collection_RunRule_2.WIPProcessHold, tblSystem_Attribute_Collection_RunRule_2.SPCRequireEntry
FROM         dbo.tblSystem_Attribute_CollectionGroup FULL OUTER JOIN
                      dbo.tblSystem_Attribute_RunRulesDef AS tblSystem_Attribute_RunRulesDef_1 RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_CollectDataWO ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.tblWIP_Operation_Step_CollectDataWO.StepUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection AS tblSystem_Attribute_Collection_2 INNER JOIN
                      dbo.tblSystem_Attribute_CollectionAssociation AS tblSystem_Attribute_CollectionAssociation_2 ON 
                      tblSystem_Attribute_Collection_2.UID = tblSystem_Attribute_CollectionAssociation_2.CollectionUID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_CollectionAssociation_2.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Collection_RunRule AS tblSystem_Attribute_Collection_RunRule_2 RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem AS tblSystem_Attribute_GroupItem_2 ON tblSystem_Attribute_Group_2.UID = tblSystem_Attribute_GroupItem_2.GroupUID ON 
                      tblSystem_Attribute_Collection_RunRule_2.GroupItemUID = tblSystem_Attribute_GroupItem_2.UID ON 
                      dbo.tblWIP_Operation_Step_CollectDataWO.WOCollectionAssociationUID = tblSystem_Attribute_Collection_RunRule_2.AssociationUID ON 
                      tblSystem_Attribute_RunRulesDef_1.UID = tblSystem_Attribute_Collection_RunRule_2.RunRuleDefUID ON 
                      dbo.tblSystem_Attribute_CollectionGroup.ObjectUID = tblSystem_Attribute_Collection_2.UID AND 
                      dbo.tblSystem_Attribute_CollectionGroup.GroupUID = tblSystem_Attribute_Group_2.UID
WHERE     (dbo.tblWIP_Operation_Step_CollectDataWO.WOEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, GroupIndex, 
                      VariableItemRow, VariableItemColumn

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Message
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Message]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Message]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Message]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowAllUserProcess, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAllowProcessType, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, dbo.tblWIP_Operation_Step_Message.IsEnabled AS IsMessageEnabled, 
                      dbo.tblWIP_Operation_Step_Message_Item.Type AS StepMessageType, dbo.tblWIP_Operation_Step_Message_Item.Message AS StepMessage, 
                      dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepMessageIndex, dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VarName, REPLACE(REPLACE(REPLACE(dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.Condition, 
                      '&lt;', '<'), '&gt;', '>'), '&amp;', '&') AS Condition, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END AS IsEnabledConsume, 
                      CASE WHEN tblWIP_Operation_Step_Convert.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Convert.IsEnabled END AS IsEnabledConvert, 
                      CASE WHEN tblWIP_Operation_Step_Inspect.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Inspect.IsEnabled END AS IsEnabledInspect, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.WOEnabled END AS IsEnabledAttrManualWO, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.BatchEnabled END AS IsEnabledAttrManualBatch, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.SNEnabled END AS IsEnabledAttrManualSN, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeAuto.IsActive IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeAuto.IsActive END AS IsEnabledAttrAutomatic, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser IS NULL 
                      THEN 'False' ELSE tblSystem_Signoff_Config.RequireCurrentUser END AS IsEnabledSignOffCurrentUser, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser IS NULL 
                      THEN 'False' ELSE tblSystem_Signoff_Config.RequireOtherUser END AS IsEnabledSignOffOtherUser
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item RIGHT OUTER JOIN
                      dbo.tblSystem_Signoff_Config RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeAuto RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Inspect RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblWIP_Operation_Step_Message ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepMessageUID = dbo.tblWIP_Operation_Step_Message.UID ON 
                      dbo.tblWIP_Operation_Step_Consume.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConsumeUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Convert ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepConvertUID = dbo.tblWIP_Operation_Step_Convert.UID ON 
                      dbo.tblWIP_Operation_Step_Inspect.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepInspectUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_ToInventory ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepToInventoryUID = dbo.tblWIP_Operation_Step_ToInventory.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID ON 
                      dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID ON 
                      dbo.tblSystem_Signoff_Config.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.SignoffConfigUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepUID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.StepUID ON 
                      dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID = dbo.tblWIP_Operation_Step_Message.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_Message_Item.AttributeUID = dbo.tblSystem_Attribute_GroupItem.UID ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_Operation_Step_Message_Item.AssetUID ON 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.OperationUID = dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationUID
WHERE     (dbo.tblWIP_Operation_Step_Message.IsEnabled = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, StepMessage, 
                      StepMessageIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Set_Attributes
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Set_Attributes]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Set_Attributes]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Set_Attributes]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step_Message.IsEnabled AS StepMessageIsEnabled, 
                      dbo.tblWIP_Operation_Step_Message_Item.Type AS StepMessageType, dbo.tblWIP_Operation_Step_Message_Item.Message AS StepMessage, 
                      dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepMessageIndex, dbo.tblWIP_Operation_Step.UID AS StepUID, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.WOEnabled END AS IsEnabledAttrManualWO, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.BatchEnabled END AS IsEnabledAttrManualBatch, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.SNEnabled END AS IsEnabledAttrManualSN, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeAuto.IsActive IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeAuto.IsActive END AS IsEnabledAttrAutomatic, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 'True' THEN tblSystem_Attribute_Group_1.Name ELSE ' ' END AS WOAttributeGroup, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled = 'True' THEN tblSystem_Attribute_Group_2.Name ELSE '' END AS BatchAttributeGroup, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled = 'True' THEN tblSystem_Attribute_Group_3.Name ELSE '' END AS SNAttributeGroup, 
                      CAST(CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 'True' THEN 1 WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled = 'True' THEN
                       1 WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled = 'True' THEN 1 ELSE 0 END AS Bit) AS IsEnabledAttrAnyManual, 
                      dbo.tblWIP_Operation_Step_SetAttributeAuto.EventType AS AutoAttrEventType, dbo.tblWIP_Operation_Step_SetAttributeAuto.SetToType AS AutoAttrSetToType, 
                      dbo.tblWIP_Operation_Step_SetAttributeAuto.SetValue AS AutoAttrSetValue, dbo.tblSystem_Attribute_GroupItem.Name AS AutoAttrVariable, 
                      dbo.tblSystem_Attribute_Group.Name AS AutoAttrVariableGroup, dbo.tblWIP_Operation_Step_SetAttributeAuto.VariableUID
FROM         dbo.tblWIP_Operation_Step_SetAttributeAuto LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_GroupItem.GroupUID ON 
                      dbo.tblWIP_Operation_Step_SetAttributeAuto.VariableUID = dbo.tblSystem_Attribute_GroupItem.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item ON 
                      dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step.StepMessageUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
                      dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_3 ON 
                      dbo.tblWIP_Operation_Step_SetAttributeManual.SNGroupUID = tblSystem_Attribute_Group_3.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_2 ON 
                      dbo.tblWIP_Operation_Step_SetAttributeManual.BatchGroupUID = tblSystem_Attribute_Group_2.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_Group AS tblSystem_Attribute_Group_1 ON 
                      dbo.tblWIP_Operation_Step_SetAttributeManual.WOGroupUID = tblSystem_Attribute_Group_1.UID ON 
                      dbo.tblWIP_Operation_Step.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID
WHERE     (CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.WOEnabled END = 1) OR
                      (CAST(CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled = 'True' THEN 1 WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled = 'True' THEN
                       1 WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled = 'True' THEN 1 ELSE 0 END AS Bit) = 1)
ORDER BY OperationName, StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Operation_Step_Sign_Offs
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Sign_Offs]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Sign_Offs]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Operation_Step_Sign_Offs]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationRevision, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationAndRevision, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.IsOperationRevActive, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationCategory, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex, 
                      dbo.tblSystem_Signoff_Config.RequireCurrentUser, dbo.tblSystem_Signoff_Config.CurrentUserCaption, dbo.tblSystem_Signoff_Config.RequireOtherUser, 
                      dbo.tblSystem_Signoff_Config.OtherUserCaption, dbo.tblContacts_Contact_Group.Name AS OtherUserAccessGroupName, 
                      dbo.tblContacts_Contact_Group.Description AS OtherUserAccessGroupDesc
FROM         dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry INNER JOIN
                      dbo.tblSystem_Signoff_Config ON dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.SignoffConfigUID = dbo.tblSystem_Signoff_Config.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblSystem_Signoff_Config.OtherUserAccessGroupUID = dbo.tblContacts_Contact_Group.UID
WHERE     (dbo.tblSystem_Signoff_Config.RequireCurrentUser = 1) OR
                      (dbo.tblSystem_Signoff_Config.RequireOtherUser = 1)
ORDER BY dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.OperationName, dbo.qryRptSrc_Std_WIP_Config_Operation_Step_A_Subqry.StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Process_Operation_Basics
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Basics]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Basics]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Basics]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process.Name + N' ( ' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, 
                      dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, dbo.tblWIP_WorkOrder_Category.Name AS ProcessCategory, 
                      dbo.tblWIP_WorkOrder_SubCategory.Name AS ProcessSubCategory, dbo.tblWIP_Process.IsActive AS IsProcessActive, 
                      dbo.tblWIP_Process_Revision.IsActive AS IsProcessRevActive, dbo.tblWIP_Process.Notes AS ProcessNotes, 
                      dbo.qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot.GroupName AS ProcessAccessCertGroup, 
                      dbo.tblWIP_Process.AllowAllUserProcess AS ProcessAllowAllUserProcess, dbo.tblWIP_Process_OperationFlow.[Index] AS ProcessOperationFlowIndex, 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + N' ( ' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
                      dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation.IsActive AS IsOperationActive, 
                      dbo.tblWIP_Operation_Revision.IsActive AS IsOperationRevActive, 
                      dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName AS OperationAccessCertGroup, 
                      dbo.tblWIP_Operation.AllowAllUserProcess AS OpAllowAllUserProcess, dbo.tblWIP_Operation.AllowProcessType AS OpAllowProcessType, 
                      dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step.UID AS StepUID, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Step.Notes, dbo.tblWIP_Operation_Step.VerifyQtyToComplete, dbo.tblWIP_Operation_Step.VerifyQtyToStart
FROM         dbo.tblWIP_WorkOrder_SubCategory RIGHT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_WorkOrder_SubCategory.UID = dbo.tblWIP_Process.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_Process.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot ON 
                      dbo.tblWIP_Process.UID = dbo.qryRptSrc_Std_WIP_Config_Process_GroupAccess_Pivot.ProcessUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
                      dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot ON 
                      dbo.tblWIP_Operation.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.OperationUID
ORDER BY ProcessName, ProcessOperationFlowIndex, StepIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_Process_Operation_Step_Message
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Step_Message]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Step_Message]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operation_Step_Message]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
                      dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N' )' AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS OperationName, 
                      dbo.tblWIP_Operation.Description AS OperationDescription, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N' )' AS OperationAndRevision, 
                      dbo.tblWIP_Process_OperationFlow.[Index] AS ProcessOperationFlowIndex, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step_Message.IsEnabled AS StepMessageIsEnabled, 
                      dbo.tblWIP_Operation_Step_Message_Item.Type AS StepMessageType, dbo.tblWIP_Operation_Step_Message_Item.Message AS StepMessage, 
                      dbo.tblWIP_Operation_Step_Message_Item.[Index] AS StepMessageIndex, dbo.tblAssetManagement_Assets.ID AS AssetID, 
                      dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.GroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VarName, REPLACE(REPLACE(REPLACE(dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.Condition, 
                      '&lt;', '<'), '&gt;', '>'), '&amp;', '&') AS Condition, dbo.tblWIP_Operation_Step.UID AS StepUID, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      CASE WHEN tblWIP_Operation_Step_Consume.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Consume.IsEnabled END AS IsEnabledConsume, 
                      CASE WHEN tblWIP_Operation_Step_Convert.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Convert.IsEnabled END AS IsEnabledConvert, 
                      CASE WHEN tblWIP_Operation_Step_Inspect.IsEnabled IS NULL THEN 'False' ELSE tblWIP_Operation_Step_Inspect.IsEnabled END AS IsEnabledInspect, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.WOEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.WOEnabled END AS IsEnabledAttManualWO, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.BatchEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.BatchEnabled END AS IsEnabledAttManualBatch, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeManual.SNEnabled IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeManual.SNEnabled END AS IsEnabledAttManualSN, 
                      CASE WHEN tblWIP_Operation_Step_SetAttributeAuto.IsActive IS NULL 
                      THEN 'False' ELSE tblWIP_Operation_Step_SetAttributeAuto.IsActive END AS IsEnabledAttAutomatic, 
                      CASE WHEN tblSystem_Signoff_Config.RequireCurrentUser IS NULL 
                      THEN 'False' ELSE tblSystem_Signoff_Config.RequireCurrentUser END AS IsEnabledSignOffCurrentUser, 
                      CASE WHEN tblSystem_Signoff_Config.RequireOtherUser IS NULL 
                      THEN 'False' ELSE tblSystem_Signoff_Config.RequireOtherUser END AS IsEnabledSignOffOtherUser
FROM         dbo.tblWIP_Operation_Step_Message RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step.StepMessageUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Message_Item ON 
                      dbo.tblWIP_Operation_Step_Message.UID = dbo.tblWIP_Operation_Step_Message_Item.StepMessageUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation INNER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID LEFT OUTER JOIN
                      dbo.tblSystem_Signoff_Config ON dbo.tblWIP_Operation_Step.SignoffConfigUID = dbo.tblSystem_Signoff_Config.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeAuto ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_Operation_Step_SetAttributeAuto.StepUID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_SetAttributeManual ON 
                      dbo.tblWIP_Operation_Step.StepSetAttributeManualUID = dbo.tblWIP_Operation_Step_SetAttributeManual.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_ToInventory ON dbo.tblWIP_Operation_Step.StepToInventoryUID = dbo.tblWIP_Operation_Step_ToInventory.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Inspect ON dbo.tblWIP_Operation_Step.StepInspectUID = dbo.tblWIP_Operation_Step_Inspect.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Convert ON dbo.tblWIP_Operation_Step.StepConvertUID = dbo.tblWIP_Operation_Step_Convert.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step_Consume ON dbo.tblWIP_Operation_Step.StepConsumeUID = dbo.tblWIP_Operation_Step_Consume.UID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot ON 
                      dbo.tblWIP_Operation.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_GroupAccess_Pivot.OperationUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot ON 
                      dbo.tblWIP_Operation_Step.UID = dbo.qryRptSrc_Std_WIP_Config_Operation_StepConditions_Pivot.StepUID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblWIP_Operation_Step_Message_Item.AttributeUID = dbo.tblSystem_Attribute_GroupItem.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step_Message_Item.AssetUID = dbo.tblAssetManagement_Assets.UID
WHERE     (dbo.tblWIP_Operation_Step_Message.IsEnabled = 1)
ORDER BY ProcessName, OperationName, ProcessOperationFlowIndex, StepIndex, StepMessageIndex, AssetID

GO
--/
-- qryRptSrc_Std_WIP_Config_Process_Operations
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_Process_Operations]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operations]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_Process_Operations]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process.Name + N' ( ' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, 
                      dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, dbo.tblWIP_Process.IsActive AS IsProcessActive, 
                      dbo.tblWIP_Process_Revision.IsActive AS IsProcessRevActive, dbo.tblWIP_Process.Notes AS ProcessNotes, 
                      dbo.tblWIP_Process.AllowAllUserProcess AS ProcessAllowAllUserProcess, dbo.tblWIP_Process_OperationFlow.[Index] AS ProcessOperationFlowIndex, 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDescription, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + N' ( ' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
                      dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation.IsActive AS IsOperationActive, 
                      dbo.tblWIP_Operation_Revision.IsActive AS IsOperationRevActive, dbo.tblWIP_Operation.AllowAllUserProcess AS OpAllowAllUserProcess, 
                      dbo.tblWIP_Operation.AllowProcessType AS OpAllowProcessType
FROM         dbo.tblWIP_Process LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
                      dbo.tblWIP_Operation RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
                      dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID
ORDER BY ProcessName, ProcessOperationFlowIndex

GO
--/
-- qryRptSrc_Std_WIP_Config_ProcessAndProduct_By_OperationCategory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Config_ProcessAndProduct_By_OperationCategory]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Config_ProcessAndProduct_By_OperationCategory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Config_ProcessAndProduct_By_OperationCategory]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation.Name AS OperationName, 
                      dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, CAST(CASE WHEN tblInventory_Item.Name = tblInventory_Item_1.Name THEN 1 ELSE 0 END AS Bit) 
                      AS IsDefaultProcess, dbo.tblWIP_Operation.IsActive AS IsOperationActive, dbo.tblWIP_Operation_Revision.IsActive AS IsOperationRevActive, 
                      dbo.tblWIP_Process.IsActive AS IsProcessActive, dbo.tblWIP_Process_Revision.IsActive AS IsProcessRevActive, tblInventory_Item_1.Name AS ProductName
FROM         dbo.tblWIP_Operation LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID LEFT OUTER JOIN
                      dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_WIPProcess ON dbo.tblInventory_Item.DefaultItemWIPProcessUID = dbo.tblInventory_Item_WIPProcess.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item_WIPProcess.ItemUID = tblInventory_Item_1.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Process ON dbo.tblInventory_Item_WIPProcess.WIPProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
                      dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Category ON dbo.tblWIP_Operation.CategoryUID = dbo.tblWIP_Operation_Category.UID
WHERE     (tblInventory_Item_1.Name IS NOT NULL)
ORDER BY OperationCategory, OperationName, ProcessName, ProductName

GO
--/
-- qryRptSrc_Std_WIP_Product_Static_Lot   updated for 5924.3
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_Product_Static_Lot]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_Product_Static_Lot]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_Product_Static_Lot]
AS
SELECT TOP (100) PERCENT dbo.tblInventory_Item.Name AS Product, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber, 
               dbo.tblWIP_Operation.Name AS Operation, dbo.tblWIP_Operation.Description AS OperationDescription, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, DATEDIFF(mi, tblWIP_WorkOrder_Event_1.EventDateTimeUTC, getutcdate()) 
               AS TimeInOperationMinutes, DATEDIFF(mi, tblWIP_WorkOrder_Event_1.EventDateTimeUTC, getutcdate()) / 60.00 AS TimeInOperationHours, DATEDIFF(mi, 
               tblWIP_WorkOrder_Event_1.EventDateTimeUTC, getutcdate()) / 1440.00 AS TimeInOperationDays, 
               tblWIP_WorkOrder_Event_1.EventDateTimeUTC AS OperationStartTimeUTC, dbo.tblInventory_Item.DefaultUnit AS Units, dbo.tblWIP_WorkOrder_Batch.Qty, 
               dbo.tblWIP_WorkOrder.Status AS WorkOrderStatus, dbo.tblWIP_WorkOrder.DueDate, 
               CASE WHEN Status = 'Hold' THEN tblWIP_WorkOrder_Event_Hold.Reason ELSE ' ' END AS HoldReason, dbo.tblWIP_WorkOrder.Number AS WorkOrderNumber, 
               dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_WorkOrder.StartDate AS WorkOrderStartDate, dbo.tblWIP_Type.Value AS WIPType, 
               dbo.tblWIP_WorkOrder_Category.Name AS WorkOrderCategory, dbo.tblWIP_WorkOrder_SubCategory.Name AS WorkOrderSubCategory, 
               tblWIP_WorkOrder_Event_2.EventDateTimeUTC AS QueueStartDateTimeUTC, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, 
               tblWIP_WorkOrder_Event_2.EventDateTimeUTC, GETUTCDATE()) ELSE NULL END AS TimeInQueueMins, 
               CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event_2.EventDateTimeUTC, GETUTCDATE()) ELSE NULL 
               END / 60.00 AS TimeInQueueHours, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event_2.EventDateTimeUTC, 
               GETUTCDATE()) ELSE NULL END / 1440.00 AS TimeInQueueDays, tblWIP_WorkOrder_Event_2.EventDateTimeUTC AS LastEventDateTimeUTC, 
               tblWIP_WorkOrder_Event_2.Message AS LastEventMessage, tblWIP_WorkOrder_Event_2.Notes AS LastEventNotes, 
               tblWIP_WorkOrder_Event_2.Flagged AS LastEventIsFlagged, DATEDIFF(mi, tblWIP_WorkOrder_Event_2.EventDateTimeUTC, GETUTCDATE()) 
               AS TimeSinceLastEventMinutes, DATEDIFF(mi, tblWIP_WorkOrder_Event_2.EventDateTimeUTC, GETUTCDATE()) / 60.00 AS TimeSinceLastEventHours, 
               DATEDIFF(mi, tblWIP_WorkOrder_Event_2.EventDateTimeUTC, GETUTCDATE()) / 1440.00 AS TimeSinceLastEventDays
FROM  dbo.tblWIP_WorkOrder_Event RIGHT OUTER JOIN
               dbo.tblSystem_AuditSummary RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Hold RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_SubCategory.UID = dbo.tblWIP_WorkOrder.SubCategoryUID ON 
               dbo.tblWIP_WorkOrder_Category.UID = dbo.tblWIP_WorkOrder.CategoryUID ON 
               dbo.tblWIP_WorkOrder_Event_Hold.UID = dbo.tblWIP_WorkOrder.LastEventHoldUID ON dbo.tblSystem_AuditSummary.UID = dbo.tblWIP_WorkOrder.UID ON 
               dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder.EventReleaseUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_2 ON dbo.tblWIP_WorkOrder.LastEventUID = tblWIP_WorkOrder_Event_2.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_1 ON 
               dbo.tblWIP_WorkOrder.OperationStartEventUID = tblWIP_WorkOrder_Event_1.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID ON 
               dbo.tblWIP_WorkOrder.CurrentWOStepUID = dbo.tblWIP_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item_SerialNumber.ItemUID = dbo.tblInventory_Item_Batch.ItemUID AND 
               dbo.tblInventory_Item_SerialNumber.BatchNumberUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID ON 
               dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID ON 
               dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID
WHERE (NOT (dbo.tblWIP_WorkOrder.Status IN (N'Closed', N'Rejected')))
ORDER BY Product, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder  updated for 5924.3
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.UID AS WorkOrderUID, dbo.tblWIP_WorkOrder.ID AS WOID, dbo.tblWIP_WorkOrder.Number AS WONumber, 
               CONVERT(varchar, dbo.tblWIP_WorkOrder.StartDate, 101) AS StartDate, CONVERT(varchar, dbo.tblWIP_WorkOrder.DueDate, 101) AS DueDate, 
               dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WOType, dbo.tblWIP_WorkOrder.Priority, dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Contacts.UserID, 
               dbo.tblWIP_WorkOrder.TestNumber, dbo.tblWIP_WorkOrder.ECO, dbo.tblWIP_WorkOrder.Status, dbo.tblWIP_WorkOrder.WorkToBeDone, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, dbo.tblWIP_Process_Revision.Description AS ProcessDescription, 
               dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDesc, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Operation_Step.Name AS StepName,
                   (SELECT SUM(Qty) AS Expr1
                    FROM   dbo.tblWIP_WorkOrder_Batch
                    WHERE (InstanceUID = dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID)) AS WorkOrderTotalQuantity, 
               dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber, dbo.tblInventory_Item.Name AS MainProduct, 
               dbo.tblInventory_Item.Description AS MainProductDescription, dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID, dbo.tblWIP_WorkOrder.CurrentWOStepUID, 
               dbo.tblWIP_WorkOrder.ParentUID, dbo.tblWIP_WorkOrder.RootParentUID, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_WorkOrder.LastEventUID, 
               dbo.tblWIP_Operation_SubCategory.OperationSubCategoryName AS OperationSubCategory, 
               dbo.tblWIP_Operation_WorkArea.WorkAreaName AS OperationWorkArea, dbo.tblWIP_WorkOrder.CloseCode, CASE WHEN tblWIP_WorkOrder.Status = 'Hold' AND 
               tblWIP_WorkOrder_Event_Hold.Reason = '' THEN 'None' ELSE CASE WHEN tblWIP_WorkOrder.Status = 'Hold' AND 
               tblWIP_WorkOrder_Event_Hold.Reason <> '' THEN tblWIP_WorkOrder_Event_Hold.Reason ELSE '' END END AS HoldReason, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS QueueStartDateTimeUTC, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, 
               tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) ELSE NULL END AS TimeInQueueMins, 
               CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) ELSE NULL 
               END / 60.00 AS TimeInQueueHours, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event.EventDateTimeUTC, 
               GETUTCDATE()) ELSE NULL END / 1440.00 AS TimeInQueueDays, tblWIP_WorkOrder_Event_1.EventDateTimeUTC AS OperationStartTimeUTC, 
               CASE WHEN dbo.tblWIP_WorkOrder.Status <> 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event_1.EventDateTimeUTC, GETUTCDATE()) ELSE NULL 
               END / 1440.00 AS TimeInOperationDays, CASE WHEN dbo.tblWIP_WorkOrder.Status <> 'Avail' THEN DATEDIFF(mi, tblWIP_WorkOrder_Event_1.EventDateTimeUTC, 
               GETUTCDATE()) ELSE NULL END / 60.00 AS TimeInOperationHours, CASE WHEN dbo.tblWIP_WorkOrder.Status <> 'Avail' THEN DATEDIFF(mi, 
               tblWIP_WorkOrder_Event_1.EventDateTimeUTC, GETUTCDATE()) ELSE NULL END AS TimeInOperationMinutes, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS LastEventDateTimeUTC, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) 
               AS TimeSinceLastEventMinutes, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) / 60.00 AS TimeSinceLastEventHours, 
               DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) / 1440.00 AS TimeSinceLastEventDays, 
               dbo.tblWIP_WorkOrder_Event.Action AS LastEventAction, dbo.tblWIP_WorkOrder_Event.Message AS LastEventMessage, 
               dbo.tblWIP_WorkOrder_Event.Flagged AS LastEventIsFlagged, dbo.tblWIP_WorkOrder_Event.Notes AS LastEventNotes
FROM  dbo.tblWIP_Operation_Step LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWIP_Operation_Step.UID = dbo.tblAssetManagement_Assets.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID AND 
               dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder.LastEventUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_1 ON 
               dbo.tblWIP_WorkOrder.OperationStartEventUID = tblWIP_WorkOrder_Event_1.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Hold ON dbo.tblWIP_WorkOrder.LastEventHoldUID = dbo.tblWIP_WorkOrder_Event_Hold.UID ON 
               dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_WorkOrder.CurrentProcRevUID LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID = tblWIP_WorkOrder_Batch_1.UID ON 
               dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID ON 
               dbo.tblContacts_Contacts.UID = dbo.tblWIP_WorkOrder.AssignedToUID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID ON 
               dbo.tblWIP_WorkOrder_SubCategory.UID = dbo.tblWIP_WorkOrder.SubCategoryUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID ON 
               dbo.tblInventory_Item_Batch.UID = tblWIP_WorkOrder_Batch_1.BatchUID ON 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder.CurrentWOStepUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation_WorkArea RIGHT OUTER JOIN
               dbo.tblWIP_Operation_SubCategory RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_SubCategory.UID = dbo.tblWIP_Operation.SubCategoryUID ON 
               dbo.tblWIP_Operation_WorkArea.UID = dbo.tblWIP_Operation.WorkAreaUID ON 
               dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category ON dbo.tblWIP_Operation.CategoryUID = dbo.tblWIP_Operation_Category.UID
ORDER BY WOID DESC

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_BatchInstance
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WIP_WorkOrder.WONumber, dbo.qryRptSrc_Std_WIP_WorkOrder.StartDate, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.Status, dbo.qryRptSrc_Std_WIP_WorkOrder.ProcessName, dbo.qryRptSrc_Std_WIP_WorkOrder.ProcessRevision, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.OperationName, dbo.qryRptSrc_Std_WIP_WorkOrder.StepName, dbo.qryRptSrc_Std_WIP_WorkOrder.MainBatchNumber, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.MainProduct, dbo.qryRptSrc_Std_WIP_WorkOrder.MainProductDescription, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WorkOrderTotalQuantity, dbo.qryRptSrc_Std_WIP_WorkOrder.DueDate, dbo.qryRptSrc_Std_WIP_WorkOrder.CategoryName, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WOType, dbo.qryRptSrc_Std_WIP_WorkOrder.Priority, dbo.qryRptSrc_Std_WIP_WorkOrder.FullName, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.UserID, dbo.qryRptSrc_Std_WIP_WorkOrder.TestNumber, dbo.qryRptSrc_Std_WIP_WorkOrder.ECO, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WorkToBeDone, dbo.qryRptSrc_Std_WIP_WorkOrder.ProcessDescription, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.OperationDesc, dbo.qryRptSrc_Std_WIP_WorkOrder.OperationRevision, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.CurrentBatchInstanceUID, dbo.qryRptSrc_Std_WIP_WorkOrder.CurrentWOStepUID, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.ParentUID, dbo.qryRptSrc_Std_WIP_WorkOrder.RootParentUID, dbo.qryRptSrc_Std_WIP_WorkOrder.SubCategoryName, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WOID, dbo.tblInventory_Item.Name AS ProductName, dbo.tblInventory_Item.Description AS ProductDescription, 
               dbo.tblInventory_Item_Batch.BatchNumber AS ProductBatchNumber, dbo.tblWIP_WorkOrder_Batch.Qty AS ProductQty, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.ProcessAndRevision, dbo.qryRptSrc_Std_WIP_WorkOrder.OperationAndRevision, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.OperationCategory
FROM  dbo.qryRptSrc_Std_WIP_WorkOrder INNER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.qryRptSrc_Std_WIP_WorkOrder.CurrentBatchInstanceUID = dbo.tblWIP_WorkOrder_Batch.InstanceUID INNER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblWIP_WorkOrder_Batch.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID
ORDER BY dbo.qryRptSrc_Std_WIP_WorkOrder.WONumber, ProductBatchNumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_BatchInstance_SerialNumbers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance_SerialNumbers]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance_SerialNumbers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_BatchInstance_SerialNumbers]
AS
SELECT     TOP (100) PERCENT tblWIP_WorkOrder_1.ID AS WOID, tblWIP_WorkOrder_1.Number AS WONumber, tblWIP_WorkOrder_1.StartDate, tblWIP_WorkOrder_1.DueDate, 
                      dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, dbo.tblWIP_Type.Value AS WOType, 
                      tblWIP_WorkOrder_1.Priority, dbo.tblContacts_Contacts.FullName AS AssignedToName, dbo.tblContacts_Contacts.UserID AS AssignedToID, 
                      tblWIP_WorkOrder_1.TestNumber, tblWIP_WorkOrder_1.ECO, tblWIP_WorkOrder_1.Status, tblWIP_WorkOrder_1.WorkToBeDone, 
                      dbo.tblInventory_Item.Name AS MainProduct, dbo.tblInventory_Item.Description AS MainProductDescription, dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process_Revision.Description AS ProcessDescription, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
                      dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS OperationName, 
                      dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
                      dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, tblWIP_WorkOrder_Batch_1.Qty AS BatchQty,
                          (SELECT     SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS WorkOrderTotalQuantity
                            FROM          dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                                                   dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
                            WHERE      (dbo.tblWIP_WorkOrder_BatchInstance.UID = tblWIP_WorkOrder_1.CurrentBatchInstanceUID)) AS TotalQty
FROM         dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchSN INNER JOIN
                      dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON dbo.tblWIP_WorkOrder_BatchSN.WorkOrderBatchUID = tblWIP_WorkOrder_Batch_1.UID INNER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblWIP_WorkOrder_BatchSN.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID ON 
                      tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID ON 
                      tblWIP_WorkOrder_BatchInstance_1.UID = tblWIP_WorkOrder_Batch_1.InstanceUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_1 ON tblWIP_WorkOrder_BatchInstance_1.UID = tblWIP_WorkOrder_1.CurrentBatchInstanceUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Step LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation LEFT OUTER JOIN
                      dbo.tblWIP_Operation_Category ON dbo.tblWIP_Operation.CategoryUID = dbo.tblWIP_Operation_Category.UID RIGHT OUTER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
                      dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
                      tblWIP_WorkOrder_1.CurrentWOStepUID = dbo.tblWIP_WorkOrder_Step.UID LEFT OUTER JOIN
                      dbo.tblWIP_Process INNER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
                      tblWIP_WorkOrder_1.CurrentProcRevUID = dbo.tblWIP_Process_Revision.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblWIP_WorkOrder_1.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblWIP_Type ON tblWIP_WorkOrder_1.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_SubCategory ON tblWIP_WorkOrder_1.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Category ON tblWIP_WorkOrder_1.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID
ORDER BY WONumber, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_DataCollection_Non_SPC
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_DataCollection_Non_SPC]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_DataCollection_Non_SPC]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, dbo.tblContacts_Contacts.FullName, 
               dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Revision.Revision AS OperationRev, 
               dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
               dbo.tblSystem_Attribute_GroupItem.Name AS VariableName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
               dbo.tblSystem_Attribute_CollectionGroup.[Index], dbo.tblSystem_Attribute_GroupItem.Row, dbo.tblSystem_Attribute_GroupItem.[Column], 
               CASE dbo.tblSystem_Attribute_GroupItem.DataType WHEN 'Text' THEN tblSystem_Attribute_CollectionInstanceData.Value WHEN 'Date' THEN CONVERT(VARCHAR(30),
                tblSystem_Attribute_CollectionInstanceData.Value, 101) WHEN 'Number' THEN CAST(tblSystem_Attribute_CollectionInstanceData.Value AS Decimal(19, 7)) 
               WHEN 'List' THEN tblSystem_Attribute_CollectionInstanceData.Value WHEN 'Totalizer' THEN CAST(tblSystem_Attribute_CollectionInstanceData.Value AS Int) 
               WHEN 'Message' THEN tblSystem_Attribute_CollectionInstanceData.Value WHEN 'Formula' THEN CAST(tblSystem_Attribute_CollectionInstanceData.Value AS Decimal(19,
                7)) END AS VariableValue, dbo.tblSystem_Attribute_GroupItem.DataType
FROM  dbo.tblWIP_WorkOrder_Event_CollectData INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
               dbo.tblSystem_Attribute_CollectionInstance ON 
               dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
               dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID INNER JOIN
               dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
               dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID INNER JOIN
               dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID AND 
               dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID ON 
               dbo.tblWIP_WorkOrder_Event_CollectData.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_CollectData.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID INNER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID INNER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_GroupItemValue ON dbo.tblSystem_Attribute_CollectionInstanceData.Value = dbo.tblSystem_Attribute_GroupItemValue.Value AND 
               dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItemValue.GroupItemUID
WHERE (NOT (dbo.tblSystem_Attribute_GroupItem.DataType IN (N'SPC', N'FormulaSPC')))
ORDER BY dbo.tblWIP_WorkOrder.Number, CollectionName, dbo.tblSystem_Attribute_CollectionGroup.[Index], dbo.tblSystem_Attribute_GroupItem.Row, 
               dbo.tblSystem_Attribute_GroupItem.[Column]

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_DataCollection_With_SPC
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_DataCollection_With_SPC]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_DataCollection_With_SPC]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_DataCollection_With_SPC]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, dbo.tblContacts_Contacts.FullName, 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Revision.Revision AS OperationRev, 
                      dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblSystem_Attribute_Collection.Name AS CollectionName, dbo.tblSystem_Attribute_Group.Name AS GroupName, 
                      dbo.tblSystem_Attribute_GroupItem.Name AS VariableName, dbo.tblSystem_Attribute_GroupItem.Caption AS VariableCaption, 
                      dbo.tblSystem_Attribute_CollectionInstance.UID, dbo.tblSystem_Attribute_CollectionGroup.[Index], dbo.tblSystem_Attribute_GroupItem.Row, 
                      dbo.tblSystem_Attribute_GroupItem.[Column], dbo.tblSystem_Attribute_CollectionInstanceData.Value AS VariableValue, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueCurrent, dbo.tblSystem_Attribute_CollectionInstanceDataPoint.ValueReported, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.UCLR, dbo.tblSystem_Attribute_CollectionInstanceDataSample.LCLR, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.USL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Target, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.LSL, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cp, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Cpk, dbo.tblSystem_Attribute_CollectionInstanceDataSample.HasViolations, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Violations, dbo.tblSystem_Attribute_CollectionInstanceDataSample.AssignableCause, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.CorrectiveAction, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Comments, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Exclude, dbo.tblSystem_Attribute_CollectionInstanceDataSample.Modified, 
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample.Acknowledged
FROM         dbo.tblWIP_WorkOrder_Event_CollectData INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceData INNER JOIN
                      dbo.tblSystem_Attribute_CollectionInstance ON 
                      dbo.tblSystem_Attribute_CollectionInstanceData.CollectionInstanceUID = dbo.tblSystem_Attribute_CollectionInstance.UID INNER JOIN
                      dbo.tblSystem_Attribute_GroupItem ON dbo.tblSystem_Attribute_CollectionInstanceData.GroupItemUID = dbo.tblSystem_Attribute_GroupItem.UID INNER JOIN
                      dbo.tblSystem_Attribute_Group ON dbo.tblSystem_Attribute_GroupItem.GroupUID = dbo.tblSystem_Attribute_Group.UID INNER JOIN
                      dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID INNER JOIN
                      dbo.tblSystem_Attribute_CollectionGroup ON dbo.tblSystem_Attribute_Group.UID = dbo.tblSystem_Attribute_CollectionGroup.GroupUID AND 
                      dbo.tblSystem_Attribute_Collection.UID = dbo.tblSystem_Attribute_CollectionGroup.ObjectUID ON 
                      dbo.tblWIP_WorkOrder_Event_CollectData.UID = dbo.tblSystem_Attribute_CollectionInstance.ObjectUID INNER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_CollectData.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID INNER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID INNER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID INNER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID INNER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID INNER JOIN
                      dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID LEFT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint RIGHT OUTER JOIN
                      dbo.tblSystem_Attribute_CollectionInstanceDataSample ON 
                      dbo.tblSystem_Attribute_CollectionInstanceDataPoint.SampleUID = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID ON 
                      dbo.tblSystem_Attribute_CollectionInstanceData.Value = dbo.tblSystem_Attribute_CollectionInstanceDataSample.UID
ORDER BY dbo.tblWIP_WorkOrder.Number, CollectionName, dbo.tblSystem_Attribute_CollectionInstance.UID, dbo.tblSystem_Attribute_CollectionGroup.[Index], 
                      dbo.tblSystem_Attribute_GroupItem.Row, dbo.tblSystem_Attribute_GroupItem.[Column]

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_ForBarcodes
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_ForBarcodes]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_ForBarcodes]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_ForBarcodes]
AS
SELECT     dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_Process.Name AS ProcessName, 
                      dbo.tblWIP_Process_Revision.Revision AS ProcessRev, dbo.tblWIP_WorkOrder.Status, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, 
                      dbo.tblWIP_WorkOrder.Priority
FROM         dbo.tblWIP_WorkOrder INNER JOIN
                      dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID INNER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_WorkOrder.CurrentProcRevUID = dbo.tblWIP_Process_Revision.UID INNER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID
GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Genealogy
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, tblInventory_Item_Batch_1.BatchNumber AS WOBatchNumber, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber AS WOSerialNumber, dbo.tblInventory_Item.Name AS ProductName, 
                      dbo.tblInventory_Item.Description AS ProductDesc, dbo.tblInventory_BOM.Name AS BOMName, dbo.tblInventory_BOM.Description AS BOMDesc, 
                      dbo.tblInventory_Item_TransactionLog.ItemName AS ConsumedItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc AS ConsumedItemDesc, 
                      dbo.tblInventory_Item_Batch.BatchNumber AS ConsumedItemBatchNumber, tblInventory_Item_SerialNumber_1.SerialNumber AS ConsumedItemSerialNumber, 
                      dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS TransQuantity, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC, 
                      dbo.tblContacts_Contacts.FullName AS TransUserName
FROM         dbo.tblInventory_Item RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON dbo.tblInventory_Item.UID = tblInventory_Item_Batch_1.ItemUID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Batch RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber AS tblInventory_Item_SerialNumber_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_TransactionLog RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_Consume INNER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_Consume.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID ON 
                      dbo.tblInventory_Item_TransactionLog.UID = dbo.tblWIP_WorkOrder_Event_Consume.TransLogUID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblInventory_Item_TransactionLog.UserUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblInventory_BOM ON dbo.tblWIP_WorkOrder_Event_Consume.BOMUID = dbo.tblInventory_BOM.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_Batch.UID ON 
                      tblInventory_Item_SerialNumber_1.UID = dbo.tblInventory_Item_TransactionLog.SerialNumberUID LEFT OUTER JOIN
                      dbo.tblWIP_WorkOrder_BatchSN LEFT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblWIP_WorkOrder_BatchSN.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      dbo.tblWIP_WorkOrder_Event_Consume.WorkOrderBatchSNUID = dbo.tblWIP_WorkOrder_BatchSN.UID ON 
                      dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_Event_Consume.WorkOrderBatchUID ON 
                      tblInventory_Item_Batch_1.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID
WHERE     (dbo.tblWIP_WorkOrder_Event.Action = N'Consume')
ORDER BY WONumber, WOBatchNumber, WOSerialNumber
GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Genealogy_NoSerialNumbers
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy_NoSerialNumbers]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy_NoSerialNumbers]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Genealogy_NoSerialNumbers]
AS
SELECT     dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblInventory_Item.Name AS ProductName, dbo.tblInventory_Item.Description AS ProductDesc, 
                      dbo.tblInventory_Item_Batch.BatchNumber AS WOBatchNumber, dbo.tblInventory_BOM.Name AS BOMName, dbo.tblInventory_BOM.Description AS BOMDesc, 
                      dbo.tblInventory_Item_TransactionLog.ItemName AS ConsumedItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc AS ConsumedItemDesc, 
                      tblInventory_Item_Batch_1.BatchNumber AS ConsumedBatchNumber, SUM(dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1) AS TransQuantity, 
                      MIN(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC) AS TransDateTimeUTC, dbo.tblInventory_Item_TransactionLog.Username AS TransUserName
FROM         dbo.tblWIP_WorkOrder_Batch INNER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblWIP_WorkOrder_Batch.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder_Event_Consume INNER JOIN
                      dbo.tblInventory_Item_TransactionLog ON dbo.tblWIP_WorkOrder_Event_Consume.TransLogUID = dbo.tblInventory_Item_TransactionLog.UID INNER JOIN
                      dbo.tblInventory_BOM ON dbo.tblWIP_WorkOrder_Event_Consume.BOMUID = dbo.tblInventory_BOM.UID INNER JOIN
                      dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON dbo.tblInventory_Item_TransactionLog.BatchUID = tblInventory_Item_Batch_1.UID RIGHT OUTER JOIN
                      dbo.tblWIP_WorkOrder INNER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID ON 
                      dbo.tblWIP_WorkOrder_Event_Consume.EventUID = dbo.tblWIP_WorkOrder_Event.UID ON 
                      dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_Event_Consume.WorkOrderBatchUID
WHERE     (dbo.tblWIP_WorkOrder_Event.Action = N'Consume')
GROUP BY dbo.tblWIP_WorkOrder.Number, dbo.tblInventory_Item_TransactionLog.ItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc, 
                      tblInventory_Item_Batch_1.BatchNumber, dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item_Batch.BatchNumber, 
                      dbo.tblInventory_BOM.Name, dbo.tblInventory_Item_TransactionLog.Username, dbo.tblInventory_BOM.Description
GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_History
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_History]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_History]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_History]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.Priority, dbo.tblInventory_Item.Name AS WOMainProduct, 
               dbo.tblWIP_Process.Name AS Process, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
               dbo.tblWIP_Process_OperationFlow.[Index] AS OperationIndex, dbo.tblWIP_Operation.Name AS OperationName, CONVERT(varchar(8000), 
               dbo.tblWIP_Operation.Description) AS OperationDescription, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + ' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_WorkOrder_Event.Action AS StepAction, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS StepEventDateTime, CONVERT(varchar(8000), 
               dbo.tblWIP_WorkOrder_Event.Message) AS StepMessage, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblSystem_Attribute_Collection.Name AS DataCollectionName, tblContacts_Contacts_1.FullName AS OperatorFullName, 
               tblContacts_Contacts_1.UserID AS OperatorUserID, dbo.tblInventory_Item_Batch.BatchNumber AS WOMainBatchID,
                   (SELECT SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS WorkOrderTotalQuantity
                    FROM   dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                                   dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
                    WHERE (dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID)) AS WOQtyIn,
                   (SELECT SUM(tblWIP_WorkOrder_Batch_2.Qty) AS WorkOrderTotalQuantity
                    FROM   dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_2 INNER JOIN
                                   dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_2 ON 
                                   tblWIP_WorkOrder_BatchInstance_2.UID = tblWIP_WorkOrder_Batch_2.InstanceUID
                    WHERE (tblWIP_WorkOrder_BatchInstance_2.UID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID)) AS WOQtyOut, 
               dbo.tblWIP_WorkOrder.StartDate AS WOStartDate, dbo.tblWIP_WorkOrder.DueDate AS WODueDate, dbo.tblWIP_WorkOrder_Category.Name AS WOCategory, 
               dbo.tblWIP_WorkOrder_SubCategory.Name AS WOSubCategory, tblContacts_Contacts_2.UserID AS SignOffUser, 
               dbo.tblContacts_Contacts.UserID AS SignOffBuddy, dbo.tblWIP_WorkOrder_Event.Flagged, CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Notes) 
               AS Notes
FROM  dbo.tblWIP_Process_Revision INNER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
               dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Asset ON dbo.tblAssetManagement_Assets.UID = dbo.tblWIP_WorkOrder_Event_Asset.AssetUID RIGHT OUTER JOIN
               dbo.tblSystem_Signoff RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow INNER JOIN
               dbo.tblWIP_WorkOrder_Event INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID INNER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWIP_WorkOrder_Event.UserUID = tblContacts_Contacts_1.UID INNER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 ON 
               dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID = tblWIP_WorkOrder_BatchInstance_1.UID INNER JOIN
               dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON 
               tblWIP_WorkOrder_BatchInstance_1.MainBatchUID = tblWIP_WorkOrder_Batch_1.UID INNER JOIN
               dbo.tblInventory_Item_Batch ON tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
               dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID ON 
               dbo.tblSystem_Signoff.UID = dbo.tblWIP_WorkOrder_Step.SignOffUID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_2 ON dbo.tblSystem_Signoff.CurrentUserUID = tblContacts_Contacts_2.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_Signoff.OtherUserUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblSystem_Attribute_CollectionInstance LEFT OUTER JOIN
               dbo.tblSystem_Attribute_Collection ON dbo.tblSystem_Attribute_CollectionInstance.CollectionUID = dbo.tblSystem_Attribute_Collection.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_CollectData ON dbo.tblSystem_Attribute_CollectionInstance.UID = dbo.tblWIP_WorkOrder_Event_CollectData.CollectionUID ON 
               dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_CollectData.EventUID ON 
               dbo.tblWIP_WorkOrder_Event_Asset.EventUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID ON 
               dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
               dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID
ORDER BY WONumber, OperationIndex, StepIndex, StepEventDateTime

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryAssets
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryAssets]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryAssets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryAssets]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblInventory_Item.Name AS ProductName, 
               dbo.tblInventory_Item.Description AS ProductDesc, dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Revision AS ProcessRev, 
               dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder.Priority, 
               dbo.tblWIP_WorkOrder.Status AS CurrentStatus, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRev, 
               dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_WorkOrder_Event.Action, 
               dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, dbo.tblContacts_Contacts.FullName AS UserName, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS StartEventDateTimeUTC,
                   (SELECT MAX(EventDateTimeUTC) AS Expr1
                    FROM   dbo.tblWIP_WorkOrder_Event AS CloseEvent
                    WHERE (WorkOrderUID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID) AND (WorkOrderStepUID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID) AND 
                                   (Action = N'AssetStop')) AS StopEventDateTimeUTC, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC,
                   (SELECT MAX(EventDateTimeUTC) AS Expr1
                    FROM   dbo.tblWIP_WorkOrder_Event AS CloseEvent
                    WHERE (WorkOrderUID = dbo.tblWIP_WorkOrder.UID) AND (WorkOrderStepUID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID) AND 
                                   (Action = N'AssetStop'))) AS AssetRunTimeMins, dbo.tblWIP_WorkOrder_Event.Flagged, CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Notes) 
               AS Notes
FROM  dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID INNER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_WorkOrder.CurrentProcRevUID INNER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Asset INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_Asset.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWIP_WorkOrder_Event_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID ON 
               dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID ON 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID ON 
               dbo.tblWIP_WorkOrder_Batch.InstanceUID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID
WHERE (dbo.tblWIP_WorkOrder_Event.Action = N'AssetStart')
ORDER BY WONumber, dbo.tblInventory_Item_Batch.BatchNumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryConsumes  59220
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryConsumes]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryConsumes]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryConsumes]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder_Event.Action, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS ConsumeDateTime, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS ConsumeDateOnly, tblInventory_Item_1.Name AS ConsumableName, 
               tblInventory_Item_1.Description AS ConsumableDesc, tblInventory_Item_1.PartNumber AS ConsumablePartNumber, 
               tblInventory_Item_Batch_2.BatchNumber AS ConsumableBatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber AS ConsumableSerialNumber, 
               dbo.tblInventory_Item_TransactionLog.Username AS ConsumedBy, dbo.tblContacts_Contacts.UserID AS ConsumbedByUserID, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS TransQty, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, dbo.tblWIP_Process.Name AS ProcessName, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
               dbo.tblWIP_WorkOrder_Event_Consume.WorkOrderBatchUID, tblInventory_Item_Batch_1.BatchNumber AS ProductBatchNumber, 
               tblInventory_Item_2.Name AS ProductName, tblInventory_Item_2.Description AS ProductDescription, tblInventory_Item_2.PartNumber, 
               dbo.tblWIP_WorkOrder_Category.Name AS WOCategory, dbo.tblWIP_WorkOrder_SubCategory.Name AS WOSubCategory, CONVERT(varchar(8000), 
               dbo.tblInventory_Item_TransactionLog.Comments) AS Comments, dbo.tblWIP_WorkOrder_Event.Flagged, dbo.tblWIP_WorkOrder_Event.Notes AS WOEventNotes, 
               dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID
FROM  dbo.tblWIP_WorkOrder LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID FULL OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 LEFT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_2 ON tblInventory_Item_Batch_1.ItemUID = tblInventory_Item_2.UID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts INNER JOIN
               dbo.tblInventory_Item_TransactionLog ON dbo.tblContacts_Contacts.UID = dbo.tblInventory_Item_TransactionLog.UserUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_2 ON dbo.tblInventory_Item_TransactionLog.BatchUID = tblInventory_Item_Batch_2.UID AND 
               dbo.tblInventory_Item_TransactionLog.ItemUID = tblInventory_Item_Batch_2.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_SerialNumber.ItemUID AND 
               dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_SerialNumber.BatchNumberUID AND 
               dbo.tblInventory_Item_TransactionLog.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_Item_TransactionLog.ItemUID = tblInventory_Item_1.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch INNER JOIN
               dbo.tblWIP_WorkOrder_Event_Consume INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_Consume.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID ON 
               dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID ON 
               dbo.tblInventory_Item_TransactionLog.UID = dbo.tblWIP_WorkOrder_Event_Consume.TransLogUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step LEFT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID ON 
               dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID ON 
               dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID ON 
               tblInventory_Item_Batch_1.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID
WHERE (dbo.tblWIP_WorkOrder_Event.Action = N'Consume')
ORDER BY ConsumeDateTime DESC
GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryMessage
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMessage]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMessage]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMessage]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_Operation.Name AS OperationName, CONVERT(varchar(8000), 
               dbo.tblWIP_Operation.Description) AS OperationDescription, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_WorkOrder_Event.Action AS StepAction, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS StepEventDateTime, CONVERT(varchar(8000), 
               dbo.tblWIP_WorkOrder_Event.Message) AS StepMessage, dbo.tblContacts_Contacts.FullName AS OperatorFullName, 
               dbo.tblContacts_Contacts.UserID AS OperatorUserID, dbo.tblInventory_Item_Batch.BatchNumber AS WOMainBatchID, 
               dbo.tblInventory_Item.Name AS WOMainProduct, dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity.WorkOrderTotalQuantity AS WOQtyIn, 
               qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_2.WorkOrderTotalQuantity AS WOQtyOut, dbo.tblWIP_WorkOrder_Event.UID AS WOEventUID, 
               dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step.UID AS StepUID, dbo.tblWIP_Process.Name AS Process, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, '' AS SignOffSecondaryUserFullName, 
               '' AS SignOffSecondaryUserID, '' AS SignOffSecondaryDateTimeUTC, dbo.tblWIP_WorkOrder.StartDate AS WOStartDate, 
               dbo.tblWIP_WorkOrder_Category.Name AS WOCategory, dbo.tblWIP_WorkOrder_SubCategory.Name AS WOSubCategory, dbo.tblWIP_Type.Value AS WIPType, 
               dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
               dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID INNER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID INNER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID = dbo.tblWIP_WorkOrder_Batch.UID INNER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblWIP_WorkOrder_Batch.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID INNER JOIN
               dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity ON 
               dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID = dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity.InstanceUID INNER JOIN
               dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity AS qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_2 ON 
               dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID = qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_2.InstanceUID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID ON 
               dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision INNER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID
UNION
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_Operation.Name AS OperationName, CONVERT(varchar(8000), 
               dbo.tblWIP_Operation.Description) AS OperationDescription, dbo.tblWIP_Operation_Step.Name AS StepName, 'Sign Off' AS StepAction, 
               dbo.tblSystem_Signoff.CurrentUserConfirmedAtDateTimeUTC AS StepEventDateTime, '' AS StepMessage, 
               dbo.tblContacts_Contacts.FullName AS OperatorFullName, dbo.tblContacts_Contacts.UserID AS OperatorUserID, 
               dbo.tblInventory_Item_Batch.BatchNumber AS WOMainBatchID, dbo.tblInventory_Item.Name AS WOMainProduct, 
               dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity.WorkOrderTotalQuantity AS WOQtyIn, 
               qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_1.WorkOrderTotalQuantity AS WOQtyOut, dbo.tblWIP_WorkOrder_Event.UID AS WOEventUID, 
               dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_Operation_Step.UID AS StepUID, dbo.tblWIP_Process.Name AS Process, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               tblContacts_Contacts_1.FullName AS SignOffSecondaryUserFullName, tblContacts_Contacts_1.UserID AS SignOffSecondaryUserID, 
               dbo.tblSystem_Signoff.OtherUserConfirmedAtDateTimeUTC AS SignOffSecondaryDateTimeUTC, dbo.tblWIP_WorkOrder.StartDate AS WOStartDate, 
               dbo.tblWIP_WorkOrder_Category.Name AS WOCategory, dbo.tblWIP_WorkOrder_SubCategory.Name AS WOSubCategory, dbo.tblWIP_Type.Value AS WIPType, 
               dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
               dbo.tblWIP_Process RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID ON 
               dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblWIP_Type RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_Type.UID = dbo.tblWIP_WorkOrder.TypeUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID RIGHT OUTER JOIN
               dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity AS qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_1 RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event ON 
               qryRptSrc_Std_WIP_WorkOrder_TotalQuantity_1.InstanceUID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity ON 
               dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID = dbo.qryRptSrc_Std_WIP_WorkOrder_TotalQuantity.InstanceUID LEFT OUTER JOIN
               dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID ON 
               dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Step.CompleteEventUID ON 
               dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Step.WorkOrderUID ON 
               dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID ON 
               dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 RIGHT OUTER JOIN
               dbo.tblSystem_Signoff ON tblContacts_Contacts_1.UID = dbo.tblSystem_Signoff.OtherUserUID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_Signoff.CurrentUserUID = dbo.tblContacts_Contacts.UID ON 
               dbo.tblWIP_WorkOrder_Step.SignOffUID = dbo.tblSystem_Signoff.UID
WHERE (dbo.tblSystem_Signoff.CurrentUserConfirmedAtDateTimeUTC IS NOT NULL)
ORDER BY StepEventDateTime DESC

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryMoveToInventory
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMoveToInventory]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMoveToInventory]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryMoveToInventory]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder_Event.Action, dbo.tblWIP_WorkOrder_Event.Message, dbo.tblContacts_Contacts.FullName AS MovedBy, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS MovedDateTime, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS MovedDateOnly, dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.StartDate, 
               dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Process.Name AS ProcessName, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WIPType, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblInventory_Item.Name AS ProductName, 
               dbo.tblInventory_Item.Description AS ProductDescription, dbo.tblInventory_Item.PartNumber, dbo.tblInventory_Item_Batch.BatchNumber, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblInventory_Item_TransactionLog.TransQuantity AS QtyMoved, 
               dbo.tblInventory_Item_TransactionLog.UnitName, dbo.tblInventory_Item_TransactionLog.UnitMultiplier, dbo.tblInventory_Item_TransactionLog.UnitPrice, 
               CONVERT(varchar(8000), dbo.tblInventory_Item_TransactionLog.Comments) AS Comments, 
               dbo.tblInventory_Item_TransactionLog.UnitPrice * dbo.tblInventory_Item_TransactionLog.TransQuantity AS TotalCost, dbo.tblWIP_WorkOrder_Event.Flagged, 
               CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Notes) AS Notes
FROM  dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_TransactionLog.ItemUID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber ON dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_SerialNumber.ItemUID AND 
               dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_SerialNumber.BatchNumberUID AND 
               dbo.tblInventory_Item_TransactionLog.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item_TransactionLog.BatchUID = dbo.tblInventory_Item_Batch.UID AND 
               dbo.tblInventory_Item_TransactionLog.ItemUID = dbo.tblInventory_Item_Batch.ItemUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_ToInventory LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWIP_WorkOrder_Event_ToInventory.LocaleUID = dbo.qrySystem_Locale.UID ON 
               dbo.tblInventory_Item_TransactionLog.ObjectRefUID = dbo.tblWIP_WorkOrder_Event_ToInventory.EventUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID ON 
               dbo.tblWIP_WorkOrder_Event_ToInventory.EventUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID LEFT OUTER JOIN
               dbo.tblWIP_Operation RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID ON 
               dbo.tblWIP_Process_OperationFlow.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID ON 
               dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID
ORDER BY MovedDateTime, WONumber, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryScrapCodes
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScrapCodes]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScrapCodes]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScrapCodes]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, 
               dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Process.Name AS ProcessName, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WIPType, dbo.tblInventory_Item_Batch.ItemUID, dbo.tblInventory_Item.Name AS ScrapName, 
               dbo.tblInventory_Item.Description AS ScrapDescription, dbo.tblInventory_Item.PartNumber AS ScrapPartNumber, 
               dbo.tblInventory_Item_Batch.BatchNumber AS ScrapBatchNumber, CASE WHEN tblWIP_WorkOrder_Event_Scrap_BatchSC_1.ScrapCode IS NOT NULL 
               THEN '' ELSE tblWIP_WorkOrder_Event_Scrap_BatchSC.ScrapCode END AS BatchScrapCode, dbo.tblInventory_Item_SerialNumber.SerialNumber AS ScrapSN, 
               tblWIP_WorkOrder_Event_Scrap_BatchSC_1.ScrapCode AS SNScrapCode, dbo.tblWIP_WorkOrder_Event_Scrap_Batch.Quantity AS ScrapQty, 
               dbo.tblWIP_WorkOrder_Event.Action, CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Message) AS Message, 
               dbo.tblContacts_Contacts.FullName AS ScrappedBy, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS ScrappedDateTimeUTC, CONVERT(DATETIME, 
               CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, 
               DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, 
               DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS ScrappedDateOnly, 
               dbo.tblWIP_WorkOrder_Event_Scrap.LocaleUID, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation LEFT OUTER JOIN
               dbo.tblContacts_Contacts LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step AS tblWIP_WorkOrder_Step_1 LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
               tblWIP_WorkOrder_Step_1.StepUID = dbo.tblWIP_Operation_Step.UID ON 
               dbo.tblWIP_Process_OperationFlow.UID = tblWIP_WorkOrder_Step_1.ProcessFlowUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_Scrap.EventUID = dbo.tblWIP_WorkOrder_Event.UID ON 
               dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID ON 
               tblWIP_WorkOrder_Step_1.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID ON dbo.tblContacts_Contacts.UID = dbo.tblWIP_WorkOrder_Event.UserUID ON 
               dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWIP_WorkOrder_Event_Scrap.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSC AS tblWIP_WorkOrder_Event_Scrap_BatchSC_1 RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN ON 
               tblWIP_WorkOrder_Event_Scrap_BatchSC_1.ScrapBatchSNUID = dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN.ItemSerialNumberUID ON 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN.ItemSerialNumberUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSC RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_Batch ON 
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSC.ScrapBatchUID = dbo.tblWIP_WorkOrder_Event_Scrap_Batch.UID ON 
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN.EventScrapBatchUID = dbo.tblWIP_WorkOrder_Event_Scrap_Batch.UID ON 
               dbo.tblWIP_WorkOrder_Event_Scrap.UID = dbo.tblWIP_WorkOrder_Event_Scrap_Batch.EventScrapUID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Event_Scrap_Batch.ItemBatchUID
GROUP BY dbo.tblWIP_WorkOrder.Number, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder.Priority, 
               dbo.tblWIP_Operation.Name, dbo.tblWIP_Operation_Revision.Revision, dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision, 
               dbo.tblWIP_Process.Name, dbo.tblWIP_Process_Revision.Revision, dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision, 
               dbo.tblWIP_Operation_Step.Name, dbo.tblWIP_WorkOrder_Category.Name, dbo.tblWIP_WorkOrder_SubCategory.Name, dbo.tblWIP_Type.Value, 
               dbo.tblInventory_Item_Batch.ItemUID, dbo.tblInventory_Item.Name, dbo.tblInventory_Item.Description, dbo.tblInventory_Item.PartNumber, 
               dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber, tblWIP_WorkOrder_Event_Scrap_BatchSC_1.ScrapCode, 
               dbo.tblWIP_WorkOrder_Event_Scrap_Batch.Quantity, dbo.tblWIP_WorkOrder_Event.Action, CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Message), 
               dbo.tblContacts_Contacts.FullName, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, 
               DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))), dbo.tblWIP_WorkOrder_Event_Scrap.LocaleUID, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.qrySystem_Locale.FullLocaleName, dbo.tblWIP_WorkOrder_Event.UID, CASE WHEN tblWIP_WorkOrder_Event_Scrap_BatchSC_1.ScrapCode IS NOT NULL 
               THEN '' ELSE tblWIP_WorkOrder_Event_Scrap_BatchSC.ScrapCode END, dbo.tblWIP_WorkOrder_Event.Flagged
HAVING (dbo.tblWIP_WorkOrder_Event.Action = N'scrap')
ORDER BY ScrappedDateTimeUTC DESC, WONumber, ScrapName

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistoryScraps
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScraps]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScraps]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistoryScraps]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, 
               dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Process.Name AS ProcessName, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WIPType, dbo.tblInventory_Item_Batch.ItemUID, dbo.tblInventory_Item.Name AS ScrapName, 
               dbo.tblInventory_Item.Description AS ScrapDescription, dbo.tblInventory_Item.PartNumber AS ScrapPartNumber, 
               dbo.tblInventory_Item_Batch.BatchNumber AS ScrapBatchNumber, dbo.tblInventory_Item_SerialNumber.SerialNumber AS ScrapSN, 
               CASE WHEN tblInventory_Item_SerialNumber.SerialNumber IS NULL THEN tblWIP_WorkOrder_Event_Scrap_Batch.Quantity ELSE '1' END AS ScrapQty, 
               dbo.tblWIP_WorkOrder_Event.Action, CONVERT(varchar(8000), dbo.tblWIP_WorkOrder_Event.Message) AS Message, 
               dbo.tblContacts_Contacts.FullName AS ScrappedBy, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS ScrappedDateTimeUTC, CONVERT(DATETIME, 
               CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, 
               DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, 
               DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS ScrappedDateOnly, 
               dbo.tblWIP_WorkOrder_Event_Scrap.LocaleUID, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN ON 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN.ItemSerialNumberUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap_Batch ON 
               dbo.tblWIP_WorkOrder_Event_Scrap_BatchSN.EventScrapBatchUID = dbo.tblWIP_WorkOrder_Event_Scrap_Batch.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Scrap LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWIP_WorkOrder_Event_Scrap.LocaleUID = dbo.qrySystem_Locale.UID ON 
               dbo.tblWIP_WorkOrder_Event_Scrap_Batch.EventScrapUID = dbo.tblWIP_WorkOrder_Event_Scrap.UID LEFT OUTER JOIN
               dbo.tblWIP_Type RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID ON 
               dbo.tblWIP_Type.UID = dbo.tblWIP_WorkOrder.TypeUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID LEFT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID ON 
               dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID ON 
               dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID ON 
               dbo.tblWIP_WorkOrder_Event_Scrap.EventUID = dbo.tblWIP_WorkOrder_Event.UID ON 
               dbo.tblContacts_Contacts.UID = dbo.tblWIP_WorkOrder_Event.UserUID LEFT OUTER JOIN
               dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID ON 
               dbo.tblWIP_WorkOrder_Event_Scrap_Batch.ItemBatchUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID
ORDER BY ScrappedDateTimeUTC DESC, WONumber, ScrapName

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_HistorySignOffs 59220
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_HistorySignOffs]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistorySignOffs]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_HistorySignOffs]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_Operation_Step.Name AS StepName, dbo.tblWIP_Process.Name AS Process, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' / Rev ' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS Operation, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               dbo.tblSystem_Signoff.CurrentUserConfirmedAtDateTimeUTC AS SignOffDateTimeUTC, dbo.tblContacts_Contacts.FullName AS SignoffUserFullName, 
               dbo.tblContacts_Contacts.UserID AS SignOffUserID, tblContacts_Contacts_1.FullName AS SignOffOtherUserName, 
               tblContacts_Contacts_1.UserID AS SignOffOtherUser, dbo.tblSystem_Signoff.OtherUserConfirmedAtDateTimeUTC AS SignOffOtherDateTimeUTC, 
               dbo.tblSystem_Signoff.UID, dbo.tblInventory_Item.Name AS MainProduct, dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WONumber, dbo.qryRptSrc_Std_WIP_WorkOrder.CategoryName, dbo.qryRptSrc_Std_WIP_WorkOrder.SubCategoryName, 
               dbo.qryRptSrc_Std_WIP_WorkOrder.WOType, dbo.qryRptSrc_Std_WIP_WorkOrder.Priority, dbo.tblWIP_WorkOrder_Event.Flagged, CONVERT(varchar(8000), 
               dbo.tblWIP_WorkOrder_Event.Notes) AS Notes, dbo.tblWIP_WorkOrder_Event.UID AS WIPWOEventUID
FROM  dbo.qryRptSrc_Std_WIP_WorkOrder INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.qryRptSrc_Std_WIP_WorkOrder.WorkOrderUID = dbo.tblWIP_WorkOrder_Step.WorkOrderUID LEFT OUTER JOIN
               dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder_Batch.UID = dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID ON 
               dbo.tblWIP_WorkOrder_Step.CompleteEventUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
               dbo.tblWIP_Process RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
               dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 RIGHT OUTER JOIN
               dbo.tblSystem_Signoff ON tblContacts_Contacts_1.UID = dbo.tblSystem_Signoff.OtherUserUID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblSystem_Signoff.CurrentUserUID = dbo.tblContacts_Contacts.UID ON 
               dbo.tblWIP_WorkOrder_Step.SignOffUID = dbo.tblSystem_Signoff.UID
WHERE (dbo.tblSystem_Signoff.CurrentUserConfirmedAtDateTimeUTC IS NOT NULL)
ORDER BY SignOffDateTimeUTC DESC

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Hold_Status   59220
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Hold_Status]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.ID AS WOID, dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.StartDate, 
               dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WOType, dbo.tblWIP_WorkOrder.Priority, tblContacts_Contacts_1.FullName AS AssignedToName, 
               tblContacts_Contacts_1.UserID AS AssignedToID, dbo.tblWIP_WorkOrder.TestNumber, dbo.tblWIP_WorkOrder.ECO, dbo.tblWIP_WorkOrder.Status, 
               dbo.tblWIP_WorkOrder.WorkToBeDone, dbo.tblInventory_Item.Name AS MainProduct, dbo.tblInventory_Item.Description AS MainProductDescription, 
               dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Description AS ProcessDescription, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber,
                   (SELECT SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS WorkOrderTotalQuantity
                    FROM   dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                                   dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
                    WHERE (dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID)) AS TotalQty, 
               dbo.tblWIP_WorkOrder_Event_Hold.Reason, dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Contacts.UserID, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS HoldDateTime, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS HoldDateOnly, DATEDIFF(HH, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, SYSUTCDATETIME()) 
               AS HoursOnHold, dbo.tblWIP_WorkOrder_Event.Message, dbo.tblWIP_WorkOrder_Event.Action, dbo.tblWIP_WorkOrder_Event.Flagged, 
               dbo.tblWIP_WorkOrder_Event.Notes
FROM  dbo.tblWIP_WorkOrder_Event_Hold INNER JOIN
               dbo.tblWIP_WorkOrder_Event INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID ON 
               dbo.tblWIP_WorkOrder_Event_Hold.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID INNER JOIN
               dbo.qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry ON 
               dbo.tblWIP_WorkOrder_Event.UID = dbo.qryRptSrc_Std_WIP_WorkOrder_Hold_Status_MaxDateTime_SubQry.EventWorkOrderUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 INNER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 ON 
               tblWIP_WorkOrder_Batch_1.UID = tblWIP_WorkOrder_BatchInstance_1.MainBatchUID INNER JOIN
               dbo.tblInventory_Item_Batch ON tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
               dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID = tblWIP_WorkOrder_BatchInstance_1.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category INNER JOIN
               dbo.tblWIP_WorkOrder_Step INNER JOIN
               dbo.tblWIP_Operation INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
               dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID ON 
               dbo.tblWIP_WorkOrder.CurrentWOStepUID = dbo.tblWIP_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.tblWIP_Process INNER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
               dbo.tblWIP_WorkOrder.CurrentProcRevUID = dbo.tblWIP_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWIP_WorkOrder.AssignedToUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID
WHERE (dbo.tblWIP_WorkOrder.Status = N'Hold') AND (dbo.tblWIP_WorkOrder_Event.Action = N'Hold') OR
               (dbo.tblWIP_WorkOrder.Status = N'Park')
ORDER BY WONumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_InProc
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_InProc]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_InProc]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_InProc]
AS
SELECT     TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_WorkOrder.Status, 
                      dbo.tblWIP_Process.Name AS ProcessName, dbo.tblInventory_Item.Name AS ProductName, dbo.tblInventory_Item.Description AS ProductDesc, 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Process_OperationFlow.[Index] AS OperationIndex, dbo.tblWIP_Operation_Step.Name AS StepName, 
                      dbo.tblWIP_Operation_Step.[Index] AS StepIndex, dbo.tblWIP_WorkOrder_Event.Action AS StartAction, 
                      dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS StartEventDateTimeUTC, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GetUTCDate()) 
                      AS MinutesInStep
FROM         dbo.tblWIP_Process_OperationFlow INNER JOIN
                      dbo.tblWIP_Operation_Step INNER JOIN
                      dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID INNER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID INNER JOIN
                      dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID ON 
                      dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID INNER JOIN
                      dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID INNER JOIN
                      dbo.tblWIP_Process_Revision INNER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID INNER JOIN
                      dbo.tblWIP_WorkOrder ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_WorkOrder.CurrentProcRevUID INNER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance ON dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID INNER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID = dbo.tblWIP_WorkOrder_Batch.UID INNER JOIN
                      dbo.tblInventory_Item_Batch ON dbo.tblWIP_WorkOrder_Batch.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder.CurrentWOStepUID
WHERE     (dbo.tblWIP_WorkOrder.Status = N'InProc')
ORDER BY WONumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Inspection_Results   *********Added Message and Position
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Inspection_Results]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Inspection_Results]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Inspection_Results]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WIPWorkOrderNumber, dbo.tblWIP_Type.Value AS WIPWorkOrderType, 
               dbo.tblWIP_Process.Name AS Process, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS Operation, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
               dbo.tblWIP_WorkOrder_Category.Name AS Category, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategory, dbo.tblInventory_Item.Name AS ProductName, 
               dbo.tblInventory_Item.Description AS ProductDescripton, dbo.tblInventory_Item.PartNumber AS ProductPartNumber, 
               dbo.tblInventory_Item.DefaultUnit AS ProductDefaultUnit, dbo.tblContacts_Contacts.FullName AS InspectedBy, 
               dbo.tblWIP_Operation_Step.Name AS WIPWorkOrderStep, dbo.tblWIP_WorkOrder_Event_Inspect.Defect, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS InspectDateTime, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC)))) AS InspectDate, dbo.tblInventory_Item_Batch.BatchNumber, 
               dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblWIP_WorkOrder_Event_Inspect.Quantity, dbo.tblWIP_WorkOrder_Event.Message, 
               dbo.tblWIP_WorkOrder_Event_Inspect.Position, dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblInventory_Item RIGHT OUTER JOIN
               dbo.tblInventory_Item_Batch ON dbo.tblInventory_Item.UID = dbo.tblInventory_Item_Batch.ItemUID RIGHT OUTER JOIN
               dbo.tblInventory_Item_SerialNumber RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID ON 
               dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID ON 
               dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID INNER JOIN
               dbo.tblWIP_WorkOrder_Event_Inspect ON dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_Inspect.EventUID ON 
               dbo.tblWIP_WorkOrder_SubCategory.UID = dbo.tblWIP_WorkOrder.SubCategoryUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID ON 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID ON 
               dbo.tblInventory_Item_SerialNumber.UID = dbo.tblWIP_WorkOrder_Event_Inspect.SerialNumberUID ON 
               dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Event_Inspect.BatchUID
ORDER BY WIPWorkOrderNumber, InspectDateTime

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Operation_CycleTime   ---- 12-18-2015 Revised to Correct Calculations
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_CycleTime]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_CycleTime]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_CycleTime]
AS
SELECT WONumber, ProductName, ProductDesc, ProcessRev, ProcessName, OperationIndex, OperationName, OperationRevision, OperationCategoryName, 
               OperationSubCategoryName, OperationWorkAreaName, StepInstance, StartDateTimeUTC, EndDateTimeUTC, StartDate, DueDate, Priority, TestNumber, ECO, 
               Status, WorkToBeDone, CategoryName, SubCategoryName, Type, StartBatchNumber, StartQty, EndBatchNumber, EndQty, DATEDIFF(ss, StartDateTimeUTC, 
               EndDateTimeUTC) / 1.00 AS CycleSeconds, DATEDIFF(mi, StartDateTimeUTC, EndDateTimeUTC) / 1.00 AS CycleMinutes, DATEDIFF(mi, StartDateTimeUTC, 
               EndDateTimeUTC) / 60.00 AS CycleHours, DATEDIFF(mi, StartDateTimeUTC, EndDateTimeUTC) / 1440.00 AS CycleDays
FROM  (SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblInventory_Item.Name AS ProductName, 
                              dbo.tblInventory_Item.Description AS ProductDesc, dbo.tblWIP_Process_Revision.Revision AS ProcessRev, dbo.tblWIP_Process.Name AS ProcessName, 
                              dbo.tblWIP_Process_OperationFlow.[Index] AS OperationIndex, dbo.tblWIP_Operation.Name AS OperationName, 
                              dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Operation_Category.Name AS OperationCategoryName, 
                              dbo.tblWIP_Operation_SubCategory.OperationSubCategoryName, dbo.tblWIP_Operation_WorkArea.WorkAreaName AS OperationWorkAreaName, 
                              dbo.tblWIP_WorkOrder_Step.Instance AS StepInstance, MIN(dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC) AS StartDateTimeUTC, 
                              EndEvent.EventDateTimeUTC AS EndDateTimeUTC, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder.Priority, 
                              dbo.tblWIP_WorkOrder.TestNumber, dbo.tblWIP_WorkOrder.ECO, dbo.tblWIP_WorkOrder.Status, 
                              CAST(dbo.tblWIP_WorkOrder.WorkToBeDone AS NVARCHAR(MAX)) AS WorkToBeDone, dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, 
                              dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, dbo.tblWIP_Type.Value AS Type, 
                              dbo.tblInventory_Item_Batch.BatchNumber AS StartBatchNumber, dbo.tblWIP_WorkOrder_Batch.Qty AS StartQty, 
                              tblInventory_Item_Batch_1.BatchNumber AS EndBatchNumber, tblWIP_WorkOrder_Batch_1.Qty AS EndQty
               FROM   dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
                              dbo.tblWIP_Operation INNER JOIN
                              dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
                              dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                              dbo.tblWIP_WorkOrder INNER JOIN
                              dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID INNER JOIN
                              dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID INNER JOIN
                              dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID ON 
                              dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Event.PreBatchInstanceUID INNER JOIN
                              dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID INNER JOIN
                              dbo.tblInventory_Item_Batch ON dbo.tblWIP_WorkOrder_Batch.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
                              dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID INNER JOIN
                              dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID INNER JOIN
                              dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID INNER JOIN
                              dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
                              dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Process_OperationFlow.OperationRevisionUID LEFT OUTER JOIN
                              dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 INNER JOIN
                              dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 ON 
                              tblWIP_WorkOrder_Batch_1.InstanceUID = tblWIP_WorkOrder_BatchInstance_1.UID INNER JOIN
                              dbo.tblInventory_Item_Batch AS tblInventory_Item_Batch_1 ON tblWIP_WorkOrder_Batch_1.BatchUID = tblInventory_Item_Batch_1.UID INNER JOIN
                                  (SELECT TOP (100) PERCENT tblWIP_WorkOrder_Event_1.WorkOrderUID, tblWIP_Operation_Step_1.OperationRevisionUID, 
                                                  tblWIP_WorkOrder_Event_1.Action, MAX(tblWIP_WorkOrder_Event_1.EventDateTimeUTC) AS EventDateTimeUTC, 
                                                  tblWIP_WorkOrder_Step_1.Instance, tblWIP_WorkOrder_Event_1.PostBatchInstanceUID
                                   FROM   dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 INNER JOIN
                                                  dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 ON 
                                                  tblWIP_Operation_Revision_1.UID = tblWIP_Operation_Step_1.OperationRevisionUID INNER JOIN
                                                  dbo.tblWIP_WorkOrder_Step AS tblWIP_WorkOrder_Step_1 ON tblWIP_Operation_Step_1.UID = tblWIP_WorkOrder_Step_1.StepUID INNER JOIN
                                                  dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_1 ON 
                                                  tblWIP_WorkOrder_Step_1.CompleteEventUID = tblWIP_WorkOrder_Event_1.UID
                                   GROUP BY tblWIP_WorkOrder_Event_1.WorkOrderUID, tblWIP_Operation_Step_1.OperationRevisionUID, tblWIP_WorkOrder_Event_1.Action, 
                                                  tblWIP_WorkOrder_Step_1.Instance, tblWIP_WorkOrder_Event_1.PostBatchInstanceUID) AS EndEvent ON 
                              tblWIP_WorkOrder_BatchInstance_1.UID = EndEvent.PostBatchInstanceUID ON dbo.tblWIP_WorkOrder.UID = EndEvent.WorkOrderUID AND 
                              dbo.tblWIP_WorkOrder_Step.Instance = EndEvent.Instance AND 
                              dbo.tblWIP_Operation_Step.OperationRevisionUID = EndEvent.OperationRevisionUID LEFT OUTER JOIN
                              dbo.tblWIP_Type ON dbo.tblWIP_WorkOrder.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
                              dbo.tblWIP_WorkOrder_SubCategory ON dbo.tblWIP_WorkOrder.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID LEFT OUTER JOIN
                              dbo.tblWIP_WorkOrder_Category ON dbo.tblWIP_WorkOrder.CategoryUID = dbo.tblWIP_WorkOrder_Category.UID LEFT OUTER JOIN
                              dbo.tblWIP_Operation_SubCategory ON dbo.tblWIP_Operation.SubCategoryUID = dbo.tblWIP_Operation_SubCategory.UID LEFT OUTER JOIN
                              dbo.tblWIP_Operation_WorkArea ON dbo.tblWIP_Operation.WorkAreaUID = dbo.tblWIP_Operation_WorkArea.UID ON 
                              dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID
               GROUP BY dbo.tblWIP_WorkOrder.Number, dbo.tblWIP_WorkOrder_Step.Instance, dbo.tblWIP_Operation.Name, dbo.tblWIP_Operation_Revision.Revision, 
                              dbo.tblWIP_WorkOrder_Event.Action, EndEvent.EventDateTimeUTC, dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, 
                              dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_WorkOrder.TestNumber, dbo.tblWIP_WorkOrder.ECO, dbo.tblWIP_WorkOrder.Status, 
                              CAST(dbo.tblWIP_WorkOrder.WorkToBeDone AS NVARCHAR(MAX)), dbo.tblWIP_WorkOrder_Category.Name, dbo.tblWIP_WorkOrder_SubCategory.Name, 
                              dbo.tblWIP_Type.Value, dbo.tblWIP_WorkOrder_Batch.Qty, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item.Name, 
                              dbo.tblInventory_Item.Description, tblWIP_WorkOrder_Batch_1.Qty, tblInventory_Item_Batch_1.BatchNumber, dbo.tblWIP_Operation_Category.Name, 
                              dbo.tblWIP_Operation_SubCategory.OperationSubCategoryName, dbo.tblWIP_Operation_WorkArea.WorkAreaName, 
                              dbo.tblWIP_Process_OperationFlow.[Index], dbo.tblWIP_Process_Revision.Revision, dbo.tblWIP_Process.Name
               HAVING (dbo.tblWIP_WorkOrder_Event.Action = N'Start')) AS OperationData

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Operation_History
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_History]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_History]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Operation_History]
AS
SELECT     TOP (100) PERCENT dbo.tblInventory_Item.Name AS Product, tblWIP_WorkOrder_1.Number AS WONumber, tblWIP_WorkOrder_1.Priority, 
                      dbo.tblWIP_Process.Name AS Process, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, dbo.tblWIP_Process_OperationFlow.[Index], 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      MIN(tblWIP_WorkOrder_Event_1.EventDateTimeUTC) AS StartOperationDateTimeUTC, MAX(tblWIP_WorkOrder_Event_1.EventDateTimeUTC) 
                      AS EndOperationDateTimeUTC, MIN(tblWIP_WorkOrder_Batch_1.Qty) AS WOQtyOut
FROM         dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_1 INNER JOIN
                      dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_1 ON tblWIP_WorkOrder_Event_1.WorkOrderUID = tblWIP_WorkOrder_1.UID INNER JOIN
                      dbo.tblWIP_WorkOrder_Step ON tblWIP_WorkOrder_Event_1.WorkOrderStepUID = dbo.tblWIP_WorkOrder_Step.UID INNER JOIN
                      dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 ON 
                      tblWIP_WorkOrder_Event_1.PostBatchInstanceUID = tblWIP_WorkOrder_BatchInstance_1.UID INNER JOIN
                      dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON tblWIP_WorkOrder_BatchInstance_1.MainBatchUID = tblWIP_WorkOrder_Batch_1.UID INNER JOIN
                      dbo.tblInventory_Item_Batch ON tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID INNER JOIN
                      dbo.tblWIP_Process_Revision INNER JOIN
                      dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID ON 
                      tblWIP_WorkOrder_1.CurrentProcRevUID = dbo.tblWIP_Process_Revision.UID INNER JOIN
                      dbo.tblWIP_Process_OperationFlow ON dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID LEFT OUTER JOIN
                      dbo.tblWIP_Operation INNER JOIN
                      dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
                      dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID
GROUP BY dbo.tblInventory_Item.Name, tblWIP_WorkOrder_1.Number, tblWIP_WorkOrder_1.Priority, dbo.tblWIP_Process.Name, dbo.tblWIP_Process_Revision.Revision, 
                      dbo.tblWIP_Process_OperationFlow.[Index], dbo.tblWIP_Operation.Name, dbo.tblWIP_Operation_Revision.Revision
ORDER BY WONumber, dbo.tblWIP_Process_OperationFlow.[Index]

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_QueueTime   ********Added QueueHours and QueueDays
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_QueueTime]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_QueueTime]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_QueueTime]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_Process_OperationFlow.[Index] AS OperationIndex, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Category.Name AS OperationCategoryName, 
               dbo.tblInventory_Item.Name AS ProductName, dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblWIP_WorkOrder.Priority, tblWIP_WorkOrder_Batch_1.Qty, dbo.tblWIP_WorkOrder.StartDate, 
               dbo.tblWIP_WorkOrder.DueDate, dbo.tblContacts_Contacts.FullName AS AssignedTo, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN (DATEDIFF(mi, 
               tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE())) / 1.00 ELSE NULL END AS QueueTimeMins, 
               CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN (DATEDIFF(mi, tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE())) / 60.00 ELSE NULL 
               END AS QueueTimeHours, CASE dbo.tblWIP_WorkOrder.Status WHEN 'Avail' THEN (DATEDIFF(mi, tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE())) 
               / 1440.00 ELSE NULL END AS QueueTimeDays
FROM  dbo.tblWIP_Process_OperationFlow INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Process_OperationFlow.UID = dbo.tblWIP_WorkOrder_Step.ProcessFlowUID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_WorkOrder.CurrentProcRevUID LEFT OUTER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 ON dbo.tblWIP_WorkOrder_BatchInstance.MainBatchUID = tblWIP_WorkOrder_Batch_1.UID ON 
               dbo.tblWIP_WorkOrder.CurrentBatchInstanceUID = dbo.tblWIP_WorkOrder_BatchInstance.UID ON 
               dbo.tblContacts_Contacts.UID = dbo.tblWIP_WorkOrder.AssignedToUID LEFT OUTER JOIN
               dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
               tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID ON 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder.CurrentWOStepUID LEFT OUTER JOIN
               dbo.tblWIP_Process_OperationFlow AS tblWIP_Process_OperationFlow_1 LEFT OUTER JOIN
               dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID ON 
               tblWIP_Process_OperationFlow_1.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID ON 
               dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = tblWIP_Process_OperationFlow_1.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder.LastEventUID = dbo.tblWIP_WorkOrder_Event.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category ON dbo.tblWIP_Operation.CategoryUID = dbo.tblWIP_Operation_Category.UID
WHERE (dbo.tblWIP_WorkOrder.Status = N'Avail') AND (tblWIP_WorkOrder_Batch_1.Qty > 0)
ORDER BY OperationIndex, WONumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty]
AS
SELECT     SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS TotalQty, dbo.tblWIP_WorkOrder_Batch.InstanceUID
FROM         dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                      dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
GROUP BY dbo.tblWIP_WorkOrder_Batch.InstanceUID



GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation]
AS
SELECT     TOP (100) PERCENT tblWIP_WorkOrder_Event_1.EventDateTimeUTC AS OperationStartTimeUTC, tblWIP_Operation_Step_1.Name AS FirstStepName, 
                      dbo.tblWIP_Operation.Name AS OperationName, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, dbo.tblWIP_Operation_Step.Name AS LastStepName, 
                      dbo.tblWIP_Operation_Step.[Index] AS LastStepIndex, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS OperationCompleteTimeUTC, DATEDIFF(mi, 
                      tblWIP_WorkOrder_Event_1.EventDateTimeUTC, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC) AS CyleTimeMinutes, 
                      dbo.qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty.TotalQty AS TotalQtyOut, 
                      qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty_1.TotalQty AS TotalQtyIn, dbo.tblWIP_Process_OperationFlow.[Index] AS ProcFlowIndex, 
                      dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
                      dbo.tblWIP_Process.Name + N' / Rev' + dbo.tblWIP_Process_Revision.Revision AS ProcessAndRevision, dbo.tblWIP_WorkOrder_Step.WorkOrderUID, 
                      dbo.tblWIP_WorkOrder_Step.ProcessFlowUID, dbo.qryRptSrc_Std_WIP_WorkOrder.WONumber, dbo.qryRptSrc_Std_WIP_WorkOrder.StartDate AS WOStartDate, 
                      dbo.qryRptSrc_Std_WIP_WorkOrder.DueDate, dbo.qryRptSrc_Std_WIP_WorkOrder.Priority, dbo.qryRptSrc_Std_WIP_WorkOrder.CategoryName, 
                      dbo.qryRptSrc_Std_WIP_WorkOrder.SubCategoryName, dbo.qryRptSrc_Std_WIP_WorkOrder.WOType, dbo.qryRptSrc_Std_WIP_WorkOrder.MainBatchNumber, 
                      dbo.qryRptSrc_Std_WIP_WorkOrder.MainProduct, dbo.qryRptSrc_Std_WIP_WorkOrder.MainProductDescription
FROM         dbo.tblWIP_Operation_Step AS tblWIP_Operation_Step_1 INNER JOIN
                      dbo.qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty AS qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty_1 INNER JOIN
                      dbo.tblWIP_WorkOrder_Event AS tblWIP_WorkOrder_Event_1 ON 
                      qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty_1.InstanceUID = tblWIP_WorkOrder_Event_1.PreBatchInstanceUID INNER JOIN
                      dbo.tblWIP_WorkOrder_Step INNER JOIN
                      dbo.tblWIP_WorkOrder_Step AS tblWIP_WorkOrder_Step_1 ON dbo.tblWIP_WorkOrder_Step.WorkOrderUID = tblWIP_WorkOrder_Step_1.WorkOrderUID AND 
                      dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = tblWIP_WorkOrder_Step_1.ProcessFlowUID AND 
                      dbo.tblWIP_WorkOrder_Step.ProcOpFlowInstance = tblWIP_WorkOrder_Step_1.ProcOpFlowInstance INNER JOIN
                      dbo.tblWIP_WorkOrder_Event INNER JOIN
                      dbo.qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty ON 
                      dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID = dbo.qryRptSrc_Std_WIP_WorkOrder_Step_StartStopOperation_Qty.InstanceUID ON 
                      dbo.tblWIP_WorkOrder_Step.CompleteEventUID = dbo.tblWIP_WorkOrder_Event.UID ON 
                      tblWIP_WorkOrder_Event_1.UID = tblWIP_WorkOrder_Step_1.StartEventUID ON tblWIP_Operation_Step_1.UID = tblWIP_WorkOrder_Step_1.StepUID INNER JOIN
                      dbo.tblWIP_Operation_Step ON dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID INNER JOIN
                      dbo.tblWIP_Process_OperationFlow INNER JOIN
                      dbo.tblWIP_Process INNER JOIN
                      dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
                      dbo.tblWIP_Process_OperationFlow.ProcessRevisionUID = dbo.tblWIP_Process_Revision.UID ON 
                      dbo.tblWIP_WorkOrder_Step.ProcessFlowUID = dbo.tblWIP_Process_OperationFlow.UID INNER JOIN
                      dbo.tblWIP_Operation_Revision AS tblWIP_Operation_Revision_1 ON dbo.tblWIP_Operation_Step.UID = tblWIP_Operation_Revision_1.LastStepUID INNER JOIN
                      dbo.tblWIP_Operation_Revision INNER JOIN
                      dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID ON 
                      tblWIP_Operation_Step_1.UID = dbo.tblWIP_Operation_Revision.FirstStepUID INNER JOIN
                      dbo.qryRptSrc_Std_WIP_WorkOrder ON dbo.tblWIP_WorkOrder_Step.WorkOrderUID = dbo.qryRptSrc_Std_WIP_WorkOrder.WorkOrderUID
ORDER BY OperationStartTimeUTC


GO
--/
-- qryRptSrc_Std_WIP_WorkOrder_Time_At_Step   ********Added DaysAtStep
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrder_Time_At_Step]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Time_At_Step]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrder_Time_At_Step]
AS
SELECT TOP (100) PERCENT tblWIP_WorkOrder_1.Number AS WONumber, tblWIP_WorkOrder_1.StartDate, tblWIP_WorkOrder_1.DueDate, 
               dbo.tblWIP_WorkOrder_Category.Name AS CategoryName, dbo.tblWIP_WorkOrder_SubCategory.Name AS SubCategoryName, 
               dbo.tblWIP_Type.Value AS WOType, tblWIP_WorkOrder_1.Priority, dbo.tblContacts_Contacts.FullName AS AssignedToName, 
               dbo.tblContacts_Contacts.UserID AS AssignedToID, tblWIP_WorkOrder_1.TestNumber, tblWIP_WorkOrder_1.ECO, tblWIP_WorkOrder_1.Status, 
               tblWIP_WorkOrder_1.WorkToBeDone, dbo.tblInventory_Item.Name AS MainProduct, dbo.tblInventory_Item.Description AS MainProductDescription, 
               dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Description AS ProcessDescription, 
               dbo.tblWIP_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWIP_Process.Name + N' (' + dbo.tblWIP_Process_Revision.Revision + N')' AS ProcessAndRevision, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation.Description AS OperationDesc, dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, 
               dbo.tblWIP_Operation.Name + + N' (' + dbo.tblWIP_Operation_Revision.Revision + N')' AS OperationAndRevision, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, dbo.tblWIP_Operation_Step.Name AS StepName, 
               dbo.tblInventory_Item_Batch.BatchNumber AS MainBatchNumber,
                   (SELECT SUM(dbo.tblWIP_WorkOrder_Batch.Qty) AS WorkOrderTotalQuantity
                    FROM   dbo.tblWIP_WorkOrder_BatchInstance INNER JOIN
                                   dbo.tblWIP_WorkOrder_Batch ON dbo.tblWIP_WorkOrder_BatchInstance.UID = dbo.tblWIP_WorkOrder_Batch.InstanceUID
                    WHERE (dbo.tblWIP_WorkOrder_BatchInstance.UID = tblWIP_WorkOrder_1.CurrentBatchInstanceUID)) AS TotalQty, DATEDIFF(mi, 
               dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) AS MinutesAtStep, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, 
               GETUTCDATE()) / 60.00 AS HoursAtStep, DATEDIFF(mi, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, GETUTCDATE()) / 1440.00 AS DaysAtStep, 
               CASE WHEN tblWIP_WorkOrder_Event_Hold.Reason IS NULL 
               THEN '' WHEN tblWIP_WorkOrder_1.Status = 'Hold' THEN tblWIP_WorkOrder_Event_Hold.Reason WHEN tblWIP_WorkOrder_1.Status = 'Park' THEN tblWIP_WorkOrder_Event_Hold.Reason
                ELSE '' END AS HoldReason
FROM  dbo.tblWIP_WorkOrder_Event_Hold RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Category RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder AS tblWIP_WorkOrder_1 ON dbo.tblWIP_WorkOrder_Event.UID = tblWIP_WorkOrder_1.LastEventUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch AS tblWIP_WorkOrder_Batch_1 INNER JOIN
               dbo.tblWIP_WorkOrder_BatchInstance AS tblWIP_WorkOrder_BatchInstance_1 ON 
               tblWIP_WorkOrder_Batch_1.UID = tblWIP_WorkOrder_BatchInstance_1.MainBatchUID INNER JOIN
               dbo.tblInventory_Item_Batch ON tblWIP_WorkOrder_Batch_1.BatchUID = dbo.tblInventory_Item_Batch.UID INNER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID ON 
               tblWIP_WorkOrder_1.CurrentBatchInstanceUID = tblWIP_WorkOrder_BatchInstance_1.UID LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category INNER JOIN
               dbo.tblWIP_WorkOrder_Step INNER JOIN
               dbo.tblWIP_Operation INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation.UID = dbo.tblWIP_Operation_Revision.OperationUID INNER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID ON 
               dbo.tblWIP_WorkOrder_Step.StepUID = dbo.tblWIP_Operation_Step.UID ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID ON 
               tblWIP_WorkOrder_1.CurrentWOStepUID = dbo.tblWIP_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.tblWIP_Process INNER JOIN
               dbo.tblWIP_Process_Revision ON dbo.tblWIP_Process.UID = dbo.tblWIP_Process_Revision.ProcessUID ON 
               tblWIP_WorkOrder_1.CurrentProcRevUID = dbo.tblWIP_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON tblWIP_WorkOrder_1.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblWIP_Type ON tblWIP_WorkOrder_1.TypeUID = dbo.tblWIP_Type.UID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder_SubCategory ON tblWIP_WorkOrder_1.SubCategoryUID = dbo.tblWIP_WorkOrder_SubCategory.UID ON 
               dbo.tblWIP_WorkOrder_Category.UID = tblWIP_WorkOrder_1.CategoryUID ON 
               dbo.tblWIP_WorkOrder_Event_Hold.EventUID = dbo.tblWIP_WorkOrder_Event.UID
WHERE (tblWIP_WorkOrder_1.Status <> N'Closed')
ORDER BY WONumber

GO
--/
-- qryRptSrc_Std_WIP_WorkOrders_HistoryAsset
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrders_HistoryAsset]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrders_HistoryAsset]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrders_HistoryAsset]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDesc, 
               dbo.tblWIP_WorkOrder.Number AS WONumber, dbo.tblInventory_Item.Name AS ProductName, dbo.tblInventory_Item.Description AS ProductDesc, 
               dbo.tblWIP_Process.Name AS ProcessName, dbo.tblWIP_Process_Revision.Revision AS ProcessRev, dbo.tblInventory_Item_Batch.BatchNumber, 
               dbo.tblWIP_WorkOrder.StartDate, dbo.tblWIP_WorkOrder.DueDate, dbo.tblWIP_WorkOrder.Priority, dbo.tblWIP_WorkOrder.Status AS CurrentStatus, 
               dbo.tblWIP_WorkOrder_Event.Action, dbo.tblContacts_Contacts.FullName AS UserName, dbo.tblWIP_Operation.Name AS OperationName, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRev, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC AS StartEventDateTimeUTC,
                   (SELECT EventDateTimeUTC
                    FROM   dbo.tblWIP_WorkOrder_Event AS CloseEvent
                    WHERE (WorkOrderUID = dbo.tblWIP_WorkOrder.UID) AND (WorkOrderStepUID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID) AND (Action = 'Complete')) 
               AS CompleteEventDateTimeUTC, dbo.tblWIP_WorkOrder_Event.Message, dbo.tblWIP_WorkOrder_Event.UID AS WOEventUID, 
               dbo.tblWIP_WorkOrder_Event.Flagged
FROM  dbo.tblInventory_Item_Batch LEFT OUTER JOIN
               dbo.tblInventory_Item ON dbo.tblInventory_Item_Batch.ItemUID = dbo.tblInventory_Item.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Batch ON dbo.tblInventory_Item_Batch.UID = dbo.tblWIP_WorkOrder_Batch.BatchUID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step INNER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID INNER JOIN
               dbo.tblWIP_Operation_Revision ON dbo.tblWIP_Operation_Step.OperationRevisionUID = dbo.tblWIP_Operation_Revision.UID INNER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Process_Revision INNER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_Process_Revision.UID = dbo.tblWIP_WorkOrder.CurrentProcRevUID INNER JOIN
               dbo.tblWIP_Process ON dbo.tblWIP_Process_Revision.ProcessUID = dbo.tblWIP_Process.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Asset INNER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Event_Asset.EventUID = dbo.tblWIP_WorkOrder_Event.UID INNER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWIP_WorkOrder_Event_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID INNER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWIP_WorkOrder_Event.UserUID = dbo.tblContacts_Contacts.UID ON 
               dbo.tblWIP_WorkOrder.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID ON 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID ON 
               dbo.tblWIP_WorkOrder_Batch.InstanceUID = dbo.tblWIP_WorkOrder_Event.PostBatchInstanceUID
WHERE (dbo.tblWIP_WorkOrder_Event.Action = N'AssetStart')
ORDER BY AssetID, WONumber, dbo.tblInventory_Item_Batch.BatchNumber



GO
--/
-- qryRptSrc_Std_WIP_WorkOrders_InAssets    ********Revised with same fields for 5960
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WIP_WorkOrders_InAssets]'))
DROP VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrders_InAssets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WIP_WorkOrders_InAssets]
AS
SELECT TOP (100) PERCENT dbo.tblWIP_WorkOrder.Number AS WIPWorkOrder, dbo.tblWIP_WorkOrder.Status AS WIPWorkOrderStatus, 
               dbo.tblWIP_WorkOrder_Event.Action, dbo.tblWIP_WorkOrder_Event.EventDateTimeUTC, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblAssetManagement_Assets.AssetNumber, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS AssetMajorStatus, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS AssetMinorStatus, dbo.tblWIP_Operation.Name AS Operation, 
               dbo.tblWIP_Operation_Revision.Revision AS OperationRevision, dbo.tblWIP_Operation.Description AS OperationDescription, 
               dbo.tblWIP_Operation_Category.Name AS OperationCategory, 
               dbo.tblWIP_Operation.Name + N' / Rev ' + dbo.tblWIP_Operation_Revision.Revision AS OperationAndRevision, 
               dbo.tblWIP_Operation_Step.Name AS StepName
FROM  dbo.tblWIP_Operation_Revision LEFT OUTER JOIN
               dbo.tblWIP_Operation_Category RIGHT OUTER JOIN
               dbo.tblWIP_Operation ON dbo.tblWIP_Operation_Category.UID = dbo.tblWIP_Operation.CategoryUID ON 
               dbo.tblWIP_Operation_Revision.OperationUID = dbo.tblWIP_Operation.UID RIGHT OUTER JOIN
               dbo.tblWIP_Operation_Step ON dbo.tblWIP_Operation_Revision.UID = dbo.tblWIP_Operation_Step.OperationRevisionUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Step ON dbo.tblWIP_Operation_Step.UID = dbo.tblWIP_WorkOrder_Step.StepUID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event ON dbo.tblWIP_WorkOrder_Step.WorkOrderUID = dbo.tblWIP_WorkOrder_Event.WorkOrderUID AND 
               dbo.tblWIP_WorkOrder_Step.UID = dbo.tblWIP_WorkOrder_Event.WorkOrderStepUID LEFT OUTER JOIN
               dbo.tblWIP_WorkOrder ON dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Event_Asset LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID ON 
               dbo.tblWIP_WorkOrder_Event_Asset.AssetUID = dbo.tblAssetManagement_Assets.UID RIGHT OUTER JOIN
               dbo.tblWIP_WorkOrder_Asset ON dbo.tblWIP_WorkOrder_Event_Asset.AssetUID = dbo.tblWIP_WorkOrder_Asset.AssetUID ON 
               dbo.tblWIP_WorkOrder_Event.UID = dbo.tblWIP_WorkOrder_Event_Asset.EventUID AND 
               dbo.tblWIP_WorkOrder_Event.WorkOrderUID = dbo.tblWIP_WorkOrder_Asset.WorkOrderUID
WHERE (dbo.tblWIP_WorkOrder.Number IS NOT NULL)
ORDER BY AssetID

GO
--/
--/

-- ** Work Tracking

-- qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry]
AS
SELECT     dbo.tblWorkTracking_WorkOrder.UID, SUM(CONVERT(float, dbo.tblInventory_Item_TransactionLog.UnitPrice) 
                      * (dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1)) AS InvCost
FROM         dbo.tblInventory_Item_TransactionLog RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblInventory_Item_TransactionLog.ObjectRefUID = dbo.tblWorkTracking_WorkOrder.UID
GROUP BY dbo.tblWorkTracking_WorkOrder.UID


GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.UID, SUM(derivedtbl_1.Hours) AS ActHours, SUM(derivedtbl_1.Cost) AS LaborCost
FROM         dbo.tblWorkTracking_WorkOrder INNER JOIN
                          (SELECT     WorkOrderUID, Hours, Rate * Hours AS Cost
                            FROM          dbo.tblWorkTracking_WorkOrder_RateCode) AS derivedtbl_1 ON dbo.tblWorkTracking_WorkOrder.UID = derivedtbl_1.WorkOrderUID
GROUP BY dbo.tblWorkTracking_WorkOrder.UID
ORDER BY dbo.tblWorkTracking_WorkOrder.UID


GO
--/
-- qryRptSrc_Std_WorkTracking_GeneratedByandType_Charts
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Charts]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Charts]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Charts]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, 
               dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.GeneratedMethod, dbo.tblWorkTracking_WorkOrder.Type, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) AS RequestedMonthYear, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, 
               DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, 
               GetUTCDate(), GETDATE()), dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), 
               GETDATE()), dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)))) AS RequestDateOnly, dbo.tblWorkTracking_WorkOrder.GeneratedType, 
               dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
ORDER BY AssetCategory


GO
--/
-- qryRptSrc_Std_WorkTracking_GeneratedByandType_Hours_Charts
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Hours_Charts]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Hours_Charts]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_GeneratedByandType_Hours_Charts]
AS

SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod, dbo.tblWorkTracking_WorkOrder.Type, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) 
               AS RequestedMonthYear, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC AS LogDate, dbo.tblWorkTracking_WorkOrder_RateCode.Hours, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS ActivityMonthYear, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_RateCode ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
ORDER BY AssetCategory



GO
--/
-- qryRptSrc_Std_WorkTracking_Monthly_Spending_Breakdown
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Breakdown]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Breakdown]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Breakdown]
AS

SELECT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CloseDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC AS LogDate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Name AS Username, dbo.tblWorkTracking_WorkOrder_RateCode.Rate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.RateCode, dbo.tblWorkTracking_WorkOrder_RateCode.Hours, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Rate * dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS LaborCost, '' AS InventoryName, '' AS Description, 
               0 AS Quantity, '' AS Units, 0 AS UnitPrice, 0 AS InventoryCost, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS LogMonthYear, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_RateCode ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID
UNION
SELECT TOP (100) PERCENT tblWorkTracking_WorkOrder_1.ID AS WorkOrderID, tblWorkTracking_WorkOrder_1.CloseDateTimeUTC AS CloseDate, 
               tblWorkTracking_WorkOrder_1.RequestDateTimeUTC AS RequestDate, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, '' AS Username, 
               0 AS Rate, '' AS RateCode, 0 AS Hours, 0 AS LaborCost, dbo.tblInventory_Item_TransactionLog.ItemName AS InventoryName, 
               dbo.tblInventory_Item_TransactionLog.ItemDesc AS Description, dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, 
               dbo.tblInventory_Item_TransactionLog.UnitName AS Units, CONVERT(float, dbo.tblInventory_Item_TransactionLog.UnitPrice) AS UnitPrice, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS InventoryCost, 
               tblAssetManagement_Assets_1.ID AS AssetID, tblAssetmanagement_Assets_Categories_1.Name AS AssetCategory, 
               tblAssetManagement_Assets_SubCategories_1.Name AS AssetSubCategory, CONVERT(VarChar, 
               MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               AS LogMonthYear, tblAssetManagement_Assets_1.[Group] AS AssetGroup, tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, 
               tblWorkTracking_Process_Category_1.Name AS WorkOrderCategory, tblWorkTracking_Process_SubCategory_1.Name AS WorkOrderSubCategory, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON dbo.qrySystem_Locale.UID = tblWorkTracking_WorkOrder_1.LocaleUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
               tblWorkTracking_WorkOrder_1.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
               tblWorkTracking_WorkOrder_1.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON tblWorkTracking_WorkOrder_1.UID = dbo.tblInventory_Item_TransactionLog.ObjectRefUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
               tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID				  


GO
--/
-- qryRptSrc_Std_WorkTracking_Monthly_Spending_Charts
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Charts]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Charts]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Monthly_Spending_Charts]
AS
SELECT     dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CloseDate, 
                      dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC AS LogDate, 
                      dbo.tblWorkTracking_WorkOrder_RateCode.Name AS Username, dbo.tblWorkTracking_WorkOrder_RateCode.Rate, 
                      dbo.tblWorkTracking_WorkOrder_RateCode.RateCode, dbo.tblWorkTracking_WorkOrder_RateCode.Hours, 
                      dbo.tblWorkTracking_WorkOrder_RateCode.Rate * dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS LaborCost, '' AS InventoryName, '' AS Description, 
                      0 AS Quantity, '' AS Units, 0 AS UnitPrice, 0 AS InventoryCost, dbo.tblAssetManagement_Assets.ID AS AssetID, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(VarChar, 
                      YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS LogMonthYear, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
                      dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
                      dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID ON 
                      dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_RateCode ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID
UNION
SELECT     TOP (100) PERCENT tblWorkTracking_WorkOrder_1.ID AS WorkOrderID, tblWorkTracking_WorkOrder_1.CloseDateTimeUTC AS CloseDate, 
                      tblWorkTracking_WorkOrder_1.RequestDateTimeUTC AS RequestDate, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, '' AS Username, 
                      0 AS Rate, '' AS RateCode, 0 AS Hours, 0 AS LaborCost, dbo.tblInventory_Item_TransactionLog.ItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc, 
                      dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, dbo.tblInventory_Item_TransactionLog.UnitName, CONVERT(float, 
                      dbo.tblInventory_Item_TransactionLog.UnitPrice) AS UnitPrice, 
                      dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS InventoryCost, 
                      tblAssetManagement_Assets_1.ID AS AssetID, tblAssetmanagement_Assets_Categories_1.Name AS AssetCategory, 
                      tblAssetManagement_Assets_SubCategories_1.Name AS AssetSubCategory, CONVERT(VarChar, MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
                      + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) AS LogMonthYear, tblAssetManagement_Assets_1.[Group] AS AssetGroup,
                       tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, tblWorkTracking_Process_Category_1.Name AS WorkOrderCategory, 
                      tblWorkTracking_Process_SubCategory_1.Name AS WorkOrderSubCategory, tblAssetManagement_Assets_1.Description AS AssetDescription, 
                      tblAssetManagement_Assets_1.AssetNumber, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
                      dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM         dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON dbo.qrySystem_Locale.UID = tblWorkTracking_WorkOrder_1.LocaleUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
                      tblWorkTracking_WorkOrder_1.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
                      tblWorkTracking_WorkOrder_1.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_TransactionLog ON tblWorkTracking_WorkOrder_1.UID = dbo.tblInventory_Item_TransactionLog.ObjectRefUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
                      tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
                      tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
                      tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID



GO
--/
-- qryRptSrc_Std_WorkTracking_Operation_Audit_Trail
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Operation_Audit_Trail]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Operation_Audit_Trail]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Operation_Audit_Trail]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_Operation.Name AS OperationName, dbo.tblWorkTracking_Operation_Revision.Revision AS OperationRevisioin, 
                      dbo.tblWorkTracking_Operation.Name + N' / ' + dbo.tblWorkTracking_Operation_Revision.Revision AS OperationAndRevision, dbo.tblSystem_AuditTrail.Username, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditTrail.App, dbo.tblSystem_AuditTrail.Form, 
                      dbo.tblSystem_AuditTrail.LogDateTimeUTC
FROM         dbo.tblSystem_AuditTrail RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_Operation_Revision.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation ON dbo.tblWorkTracking_Operation_Revision.OperationUID = dbo.tblWorkTracking_Operation.UID
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC



GO
--/
-- qryRptSrc_Std_WorkTracking_Operation_Step_Audit_Trail
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Operation_Step_Audit_Trail]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Operation_Step_Audit_Trail]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Operation_Step_Audit_Trail]
AS
SELECT     dbo.tblWorkTracking_Operation_Step.Name AS Step, dbo.tblWorkTracking_Operation.Name AS Operation, 
                      dbo.tblWorkTracking_Operation_Revision.Revision AS OperationRevision, 
                      dbo.tblWorkTracking_Operation.Name + N' / ' + dbo.tblWorkTracking_Operation_Revision.Revision AS OperatonAndRevision, dbo.tblSystem_AuditTrail.Username, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditTrail.App, dbo.tblSystem_AuditTrail.Form, 
                      dbo.tblSystem_AuditTrail.LogDateTimeUTC
FROM         dbo.tblSystem_AuditTrail RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Step ON dbo.tblSystem_AuditTrail.ObjectUID = dbo.tblWorkTracking_Operation_Step.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Operation RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Operation_Revision ON dbo.tblWorkTracking_Operation.UID = dbo.tblWorkTracking_Operation_Revision.OperationUID ON 
                      dbo.tblWorkTracking_Operation_Step.OperationRevisionUID = dbo.tblWorkTracking_Operation_Revision.UID



GO
--/
-- qryRptSrc_Std_WorkTracking_Process_Audit_Trail
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Process_Audit_Trail]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Process_Audit_Trail]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Process_Audit_Trail]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_Process.Name AS ProcessName, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
                      dbo.tblWorkTracking_Process.Name + N' / ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, dbo.tblSystem_AuditTrail.Username, 
                      dbo.tblSystem_AuditTrail.ColumnName, dbo.tblSystem_AuditTrail.Message, dbo.tblSystem_AuditTrail.App, dbo.tblSystem_AuditTrail.Form, 
                      dbo.tblSystem_AuditTrail.LogDateTimeUTC
FROM         dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblSystem_AuditTrail ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblSystem_AuditTrail.ObjectUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID
ORDER BY dbo.tblSystem_AuditTrail.LogDateTimeUTC DESC



GO
--/
-- qryRptSrc_Std_WorkTracking_Process_Defaults_for_Assets
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Process_Defaults_for_Assets]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Process_Defaults_for_Assets]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Process_Defaults_for_Assets]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Active, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_Process.Name AS DefaultProcessRepairReq, 
                      tblWorkTracking_Process_1.Name AS DefaultProcessServReq, dbo.tblWorkTracking_Process.Notes AS DefaultProcessRepairReqNotes, 
                      tblWorkTracking_Process_1.Notes AS DefaultProcessServReqNotes, dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      dbo.tblWorkTracking_Process.IsActive AS IsDefaultProcessRepairReqActive, 
                      tblWorkTracking_Process_1.IsActive AS IsDefaultProcessServReqActive
FROM         dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON 
                      dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision AS tblWorkTracking_Process_Revision_1 LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 ON 
                      tblWorkTracking_Process_Revision_1.ProcessUID = tblWorkTracking_Process_1.UID ON 
                      dbo.tblAssetManagement_Assets.ServiceRequestProcessRevisionUID = tblWorkTracking_Process_Revision_1.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
                      dbo.tblAssetManagement_Assets.RepairRequestProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1)
ORDER BY AssetID



GO
--/
-- qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery]
AS
SELECT UserUID, ProjectName, StartDateTimeUTC AS StartTime, EndDateTimeUTC AS EndTime, CONVERT(varchar, StartComment) AS StartComment, 
               CONVERT(varchar, EndComment) AS EndComment, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               StartDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), StartDateTimeUTC))) + '/' + CONVERT(varchar, 
               YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), StartDateTimeUTC)))) AS ProjectDay, DATEDIFF(mi, StartDateTimeUTC, EndDateTimeUTC) 
               AS ProjectMinutes
FROM  dbo.tblWorkTracking_ProjectData



GO
--/
-- qryRptSrc_Std_WorkTracking_ProjectUtilization
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_ProjectUtilization]
AS
SELECT     dbo.tblContacts_Contacts.UserID AS EmpID, dbo.tblContacts_Contacts.FullName AS ReqName, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.ProjectName, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.StartTime, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.EndTime, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.StartComment, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.EndComment, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.ProjectDay, 
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.ProjectMinutes, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.ProjectMinutes / 60.0) AS ProjectHours
FROM         dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery ON 
                      dbo.tblContacts_Contacts.UID = dbo.qryRptSrc_Std_WorkTracking_ProjectUtilization_SubQuery.UserUID



GO
--/
-- qryRptSrc_Std_WorkTracking_ScheduledWork
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork]
AS
SELECT     TOP (100) PERCENT tblWorkTracking_ScheduledWork.ScheduledWOID AS SWO_ID, CONVERT(varchar(8000), tblWorkTracking_ScheduledWork.Description) 
                      AS SWO_Description, tblWorkTracking_ScheduledWork.Priority AS SWO_Priority, tblWorkTracking_ScheduledWork.Type AS SWO_Type, 
                      tblWorkTracking_Process_Plan_1.Name AS SWO_Plan, dbo.tblWorkTracking_Process_Category.Name AS SWO_Category, 
                      dbo.tblWorkTracking_Process_SubCategory.Name AS SWO_SubCategory, tblWorkTracking_ScheduledWork.StartTime AS SWO_StartTime, 
                      tblWorkTracking_ScheduledWork.Hours AS SWO_Hours, CONVERT(varchar(8000), tblWorkTracking_ScheduledWork.WorkToBeDone) AS WorkToBeDone, 
                      tblWorkTracking_ScheduledWork.IsActive AS SWO_IsActive, tblWorkTracking_ScheduledWork.Expires AS SWO_Expires, 
                      tblWorkTracking_ScheduledWork.ExpiresOn AS SWO_ExpiresOn, tblWorkTracking_ScheduledWork.IsOneTimeEvent AS SWO_IsOneTimeEvent, 
                      tblWorkTracking_ScheduledWork.DueDays AS SWO_DueDays, tblWorkTracking_ScheduledWork.NextTriggerDate AS SWO_NextTriggerDate, 
                      tblWorkTracking_ScheduledWork.TriggerDisplayName AS SWO_TriggerDisplayName, 
                      tblWorkTracking_ScheduledWork.TriggerBySchedule AS SWO_TriggerBySchedule, tblWorkTracking_ScheduledWork.ScheduleOccurs AS SWO_ScheduleOccurs, 
                      tblWorkTracking_ScheduledWork.ScheduleInterval AS SWO_ScheduleInterval, tblWorkTracking_ScheduledWork.ScheduleOccurance AS SWO_ScheduleOccurance, 
                      tblWorkTracking_ScheduledWork.ScheduleDays AS SWO_ScheduleDays, tblWorkTracking_ScheduledWork.ScheduleMonths AS SWO_ScheduleMonths, 
                      tblWorkTracking_ScheduledWork.ScheduleReservations AS SWO_ScheduleReservations, 
                      tblWorkTracking_ScheduledWork.TriggerByMetrics AS SWO_TriggerByMetrics, tblWorkTracking_ScheduledWork.MetricOption AS SWO_MetricOption, 
                      tblWorkTracking_ScheduledWork.IsMetricsByTime AS SWO_IsMetricsByTime, tblWorkTracking_ScheduledWork.IsMetricsByFormula AS SWO_IsMetricsByFormula, 
                      tblWorkTracking_ScheduledWork.MetricsTimeCountedFrom AS SWO_MetricsTimeCountedFrom, 
                      tblWorkTracking_ScheduledWork.MetricsTimeTriggerHours AS SWO_MetricsTimeTriggerHours, 
                      tblWorkTracking_ScheduledWork.MetricsFormulaDayRange AS SWO_MetricsFormulaDayRange, 
                      tblWorkTracking_ScheduledWork.MetricsFormulaDirection AS SWO_MetricsFormulaDirection, 
                      tblWorkTracking_ScheduledWork.MetricsFormulaTarget AS SWO_MetricsFormulaTarget, 
                      tblWorkTracking_ScheduledWork.TriggerByOtherSWO AS SWO_TriggerByParentSW, tblWorkTracking_ScheduledWork.FloatingDate AS SWO_IsFloatingDate, 
                      tblWorkTracking_ScheduledWork.HoldNextTrigger AS SWO_IsHoldNextTrigger, tblWorkTracking_ScheduledWork.HoldStatus AS SWO_HoldStatus, 
                      tblWorkTracking_ScheduledWork.IsMetricsByMeter AS SWO_IsMetricsByMeter, 
                      tblWorkTracking_ScheduledWork.MetricsTimeCountedFromFloating AS SWO_IsMetricsTimeCountedFromFloating, 
                      tblWorkTracking_ScheduledWork.MetricsMeterTriggerAfter AS SWO_MetricsMeterTriggerAfter, 
                      tblWorkTracking_ScheduledWork.MetricsMeterResetInterval AS SWO_MetricsMeterResetInterval, 
                      tblWorkTracking_ScheduledWork.MetricsMeterResetIntervalFloating AS SWO_IsMetricsMeterResetIntervalFloating, 
                      dbo.tblAssetManagement_Assets.ID AS SWO_MetricsMeterAssetID, 
                      CASE WHEN tblWorkTracking_ScheduledWork.TriggerByOtherSWO = 1 THEN tblOtherSWO.ScheduledWOID ELSE '0' END AS SWO_ParentSW_ID, 
                      tblOtherSWO.Description AS SWO_ParentSW_Desc, tblAssetManagement_Assets_2.ID AS SWO_ParentSW_AssetID, 
                      tblAssetManagement_Assets_2.Description AS SWO_ParentSW_AssetDesc, tblWorkTracking_Process_Plan_2.Name AS SWO_ParentSW_Plan, 
                      tblOtherSWO.WorkToBeDone AS SWO_ParentSW_WorkToBeDone, tblOtherSWO.NextTriggerDate AS SWO_ParentSW_NextTriggerDate, 
                      tblOtherSWO.TriggerDisplayName AS SWO_ParentSW_TriggerDisplayName, tblAssetManagement_Assets_1.ID AS AssetID, CONVERT(varchar(8000), 
                      tblAssetManagement_Assets_1.Description) AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
                      tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS AssetActive, CONVERT(varchar(8000), 
                      tblAssetManagement_Assets_1.Comments) AS AssetComments, tblAssetManagement_Assets_1.Make AS AssetMake, 
                      tblAssetManagement_Assets_1.Model AS AssetModel, tblAssetManagement_Assets_1.[Group] AS AssetGroup, 
                      tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      CASE WHEN tblWorkTracking_ScheduledWork.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                       dbo.qrySystem_Locale.CampusName AS AssetCampus, dbo.qrySystem_Locale.BuildingName AS AssetBldg, dbo.qrySystem_Locale.FloorName AS AssetFloor, 
                      dbo.qrySystem_Locale.RoomName AS AssetRoom, dbo.qrySystem_Locale.LocationName AS AssetLocation, 
                      dbo.qrySystem_Locale.FullLocaleName AS AssetFullLocale, dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS AssetStatusDate, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS AssetMajorStatus, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS AssetMinorStatus, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusScheduledRpt AS AssetStatusScheduled, dbo.tblContacts_Companies.Name AS AssetManufacturer, 
                      dbo.tblWorkTracking_Process_Revision.Revision AS SWO_Process_Revision, dbo.tblWorkTracking_Process.Name AS SWO_Process
FROM         dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
                      dbo.tblContacts_Contact_Group RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork AS tblWorkTracking_ScheduledWork ON 
                      dbo.tblWorkTracking_Process_Revision.UID = tblWorkTracking_ScheduledWork.ProcessRevUID ON 
                      dbo.tblContacts_Contact_Group.UID = tblWorkTracking_ScheduledWork.AssignedToUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 ON 
                      tblWorkTracking_ScheduledWork.PlanUID = tblWorkTracking_Process_Plan_1.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON tblWorkTracking_ScheduledWork.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID ON 
                      dbo.tblWorkTracking_Process_Category.UID = tblWorkTracking_ScheduledWork.CategoryUID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON tblWorkTracking_ScheduledWork.MetricsMeterUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON tblWorkTracking_ScheduledWork.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog RIGHT OUTER JOIN
                      dbo.tblContacts_Companies RIGHT OUTER JOIN
                      dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON dbo.qrySystem_Locale.UID = tblAssetManagement_Assets_1.LocaleUID ON 
                      dbo.tblContacts_Companies.UID = tblAssetManagement_Assets_1.ManufacturerUID ON 
                      dbo.tblAssetManagement_Assets_StatusLog.UID = tblAssetManagement_Assets_1.CurrentStatusUID ON 
                      dbo.tblAssetManagement_Assets_SubCategories.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON tblAssetManagement_Assets_1.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID ON 
                      tblWorkTracking_ScheduledWork.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_2 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_2 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork AS tblOtherSWO ON tblWorkTracking_Process_Plan_2.UID = tblOtherSWO.PlanUID ON 
                      tblAssetManagement_Assets_2.UID = tblOtherSWO.AssetUID ON tblWorkTracking_ScheduledWork.OtherSWOUID = tblOtherSWO.UID
WHERE     (tblAssetManagement_Assets_1.Deleted = 0) OR
                      (tblAssetManagement_Assets_1.Deleted IS NULL)
ORDER BY SWO_ID



GO
--/
-- qryRptSrc_Std_WorkTracking_ScheduledWork_BOM_OnHand
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_BOM_OnHand]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_BOM_OnHand]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_BOM_OnHand]
AS
SELECT     dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblWorkTracking_ScheduledWork.Description AS ScheduledWODescription, 
                      dbo.tblWorkTracking_ScheduledWork.Priority AS ScheduledWOPriority, dbo.tblWorkTracking_ScheduledWork.IsActive AS ScheduledWOIsActive, 
                      dbo.tblWorkTracking_ScheduledWork.NextTriggerDate AS ScheduledWONextTriggerDate, 
                      dbo.tblWorkTracking_ScheduledWork.TriggerDisplayName AS ScheduledWOTriggerDisplayName, tblInventory_BOM_1.Name AS BOMName, 
                      tblInventory_BOM_1.Description AS BOMDescription, tblInventory_BOM_1.IsActive AS BOMIsActive, tblInventory_BOM_1.Notes AS BOMNotes, 
                      dbo.tblInventory_BOM_Item.[Index] AS BOMIndex, dbo.tblInventory_BOM_Item.Quantity AS BOMQuantity, 
                      dbo.tblInventory_BOM_Item.IsRequired AS BOMIsRequired, CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.UnitName ELSE tblInventory_Item.DefaultUnit END AS BOMUnit, CASE WHEN tblInventory_Item_Unit.Multiplier IS NULL 
                      THEN '' ELSE tblInventory_Item_Unit.Multiplier END AS BOMUnitMultiplier, CASE WHEN tblInventory_Item_Unit.Multiplier IS NOT NULL 
                      THEN tblInventory_Item_Unit.Multiplier * tblInventory_BOM_Item.Quantity ELSE tblInventory_BOM_Item.Quantity END AS BOMConvertedQty, 
                      dbo.tblInventory_Item.Name AS InventoryItem, dbo.tblInventory_Item.Description AS InventoryDescription, dbo.tblInventory_Item.PartNumber, 
                      dbo.tblInventory_Item.MfgPartNumber, dbo.tblInventory_Item.DefaultUnit, dbo.tblInventory_Item.BarcodeValue AS InventoryBarcodeValue, 
                      CONVERT(float, dbo.tblInventory_Item.Price) AS Price, dbo.tblInventory_Item.Price * dbo.tblInventory_Quantity.Quantity AS TotalCostOnHand, 
                      CASE WHEN tblInventory_Quantity.Quantity IS NULL THEN '0' ELSE tblInventory_Quantity.Quantity END AS QuantityOnHand, 
                      dbo.tblInventory_Quantity.LocaleType, dbo.tblInventory_Item_Batch.BatchNumber, dbo.tblInventory_Item_Batch.ExpDate, 
                      dbo.tblInventory_Item_SerialNumber.SerialNumber, dbo.tblSystem_Barcode.BarcodeValue AS SNBarcodeValue, 
                      tblSystem_Barcode_1.BarcodeValue AS BatchBarcodeValue, 
                      CASE dbo.tblInventory_Quantity.LocaleType WHEN 'Locale' THEN qrySystem_Locale.FullLocaleName ELSE tblContacts_Contacts.FullName END AS FullLocaleName,
                       dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.tblInventory_BOM_Association.AssociatedObjectType
FROM         dbo.tblWorkTracking_ScheduledWork LEFT OUTER JOIN
                      dbo.tblInventory_BOM_Association ON 
                      dbo.tblWorkTracking_ScheduledWork.UID = dbo.tblInventory_BOM_Association.AssociatedObjectUID LEFT OUTER JOIN
                      dbo.tblInventory_Quantity LEFT OUTER JOIN
                      dbo.tblSystem_Barcode AS tblSystem_Barcode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_Item_Batch ON tblSystem_Barcode_1.ObjectUID = dbo.tblInventory_Item_Batch.UID ON 
                      dbo.tblInventory_Quantity.BatchUID = dbo.tblInventory_Item_Batch.UID LEFT OUTER JOIN
                      dbo.tblSystem_Barcode RIGHT OUTER JOIN
                      dbo.tblInventory_Item_SerialNumber ON dbo.tblSystem_Barcode.ObjectUID = dbo.tblInventory_Item_SerialNumber.UID ON 
                      dbo.tblInventory_Quantity.SerialNumberUID = dbo.tblInventory_Item_SerialNumber.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblInventory_Quantity.LocaleUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblInventory_Quantity.LocaleUID = dbo.qrySystem_Locale.UID RIGHT OUTER JOIN
                      dbo.tblInventory_Item ON dbo.tblInventory_Quantity.ItemUID = dbo.tblInventory_Item.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_Unit RIGHT OUTER JOIN
                      dbo.tblInventory_BOM_Item ON dbo.tblInventory_Item_Unit.UID = dbo.tblInventory_BOM_Item.UnitUID ON 
                      dbo.tblInventory_Item.UID = dbo.tblInventory_BOM_Item.ItemUID RIGHT OUTER JOIN
                      dbo.tblInventory_BOM AS tblInventory_BOM_1 ON dbo.tblInventory_BOM_Item.BOMUID = tblInventory_BOM_1.UID ON 
                      dbo.tblInventory_BOM_Association.BOMUID = tblInventory_BOM_1.UID



GO
--/
-- qryRptSrc_Std_WorkTracking_ScheduledWork_Reservations
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_Reservations]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_Reservations]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_ScheduledWork_Reservations]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblWorkTracking_ScheduledWork.Description AS SWODescription, 
                      dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets_Reservation.StartDateTimeUTC AS StartTime, dbo.tblWorkTracking_ScheduledWork.Hours AS EstimatedHours, 
                      dbo.tblWorkTracking_ScheduledWork.IsActive AS IsSchedWorkActive, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, 
                      dbo.tblWorkTracking_ScheduledWork.TriggerDisplayName, dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategoryName, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroupName, dbo.tblWorkTracking_ScheduledWork.DueDays, DATEADD(dd, 
                      dbo.tblWorkTracking_ScheduledWork.DueDays, dbo.tblAssetManagement_Assets_Reservation.StartDateTimeUTC) AS DueDate, 
                      dbo.tblWorkTracking_Process_Category.Name AS SWOCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS SWOSubCategory, 
                      dbo.tblWorkTracking_Process_Plan.Name AS SWOPlan
FROM         dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_ScheduledWork.PlanUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON 
                      dbo.tblWorkTracking_ScheduledWork.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category ON 
                      dbo.tblWorkTracking_ScheduledWork.CategoryUID = dbo.tblWorkTracking_Process_Category.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON 
                      dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Reservation ON dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Reservation.AssetUID ON
                       dbo.tblWorkTracking_ScheduledWork.UID = dbo.tblAssetManagement_Assets_Reservation.LinkedObjectUID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblWorkTracking_ScheduledWork.ScheduledWOID IS NOT NULL) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)
ORDER BY dbo.tblWorkTracking_ScheduledWork.ScheduledWOID DESC           



GO
--/
-- qryRptSrc_Std_WorkTracking_Spending_By_Asset_Charts
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_Spending_By_Asset_Charts]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_Spending_By_Asset_Charts]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_Spending_By_Asset_Charts]
AS

SELECT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CloseDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC AS LogDate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Name AS Username, dbo.tblWorkTracking_WorkOrder_RateCode.Rate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.RateCode, dbo.tblWorkTracking_WorkOrder_RateCode.Hours, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Rate * dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS LaborCost, '' AS InventoryName, '' AS Description, 
               0 AS Quantity, '' AS Units, 0 AS UnitPrice, 0 AS InventoryCost, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS LogMonthYear, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
               dbo.tblAssetManagement_Assets.AssetNumber, CONVERT(DATETIME, CONVERT(varchar, MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC))) + '/' + CONVERT(varchar, DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC))) + '/' + CONVERT(varchar, YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), 
               dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)))) AS LogDateOnly, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_RateCode ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID
UNION
SELECT TOP (100) PERCENT tblWorkTracking_WorkOrder_1.ID AS WorkOrderID, tblWorkTracking_WorkOrder_1.CloseDateTimeUTC AS CloseDate, 
               tblWorkTracking_WorkOrder_1.RequestDateTimeUTC AS RequestDate, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, '' AS Username, 
               0 AS Rate, '' AS RateCode, 0 AS Hours, 0 AS LaborCost, dbo.tblInventory_Item_TransactionLog.ItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, dbo.tblInventory_Item_TransactionLog.UnitName, CONVERT(float, 
               dbo.tblInventory_Item_TransactionLog.UnitPrice) AS UnitPrice, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS InventoryCost, 
               tblAssetManagement_Assets_1.ID AS AssetID, tblAssetmanagement_Assets_Categories_1.Name AS AssetCategory, 
               tblAssetManagement_Assets_SubCategories_1.Name AS AssetSubCategory, CONVERT(VarChar, 
               MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               AS LogMonthYear, tblAssetManagement_Assets_1.[Group] AS AssetGroup, tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, 
               tblWorkTracking_Process_Category_1.Name AS WorkOrderCategory, tblWorkTracking_Process_SubCategory_1.Name AS WorkOrderSubCategory, 
               tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, CONVERT(DATETIME, CONVERT(varchar, 
               MONTH(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, 
               DAY(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC))) + '/' + CONVERT(varchar, 
               YEAR(DATEADD(HH, DATEDIFF(hh, GetUTCDate(), GETDATE()), dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)))) AS LogDateOnly, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON dbo.qrySystem_Locale.UID = tblWorkTracking_WorkOrder_1.LocaleUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
               tblWorkTracking_WorkOrder_1.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
               tblWorkTracking_WorkOrder_1.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON tblWorkTracking_WorkOrder_1.UID = dbo.tblInventory_Item_TransactionLog.ObjectRefUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
               tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID


GO
--/
-- qryRptSrc_Std_WorkTracking_UsersStatusHours
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersStatusHours]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersStatusHours]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersStatusHours]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Utilization.UserUID, dbo.tblContacts_Contacts.FullName AS ReqName, CONVERT(DATETIME, 
                      CONVERT(varchar, MONTH(dbo.tblAssetManagement_Utilization.StartTime)) + '/' + CONVERT(varchar, 
                      DAY(dbo.tblAssetManagement_Utilization.StartTime)) + '/' + CONVERT(varchar, YEAR(dbo.tblAssetManagement_Utilization.StartTime))) AS Day, 
                      SUM(DATEDIFF(n, dbo.tblAssetManagement_Utilization.StartTime, dbo.tblAssetManagement_Utilization.EndTime)) AS Minutes
FROM         dbo.tblContacts_Contacts INNER JOIN
                      dbo.tblAssetManagement_Utilization ON dbo.tblContacts_Contacts.UID = dbo.tblAssetManagement_Utilization.UserUID
GROUP BY dbo.tblContacts_Contacts.FullName, CONVERT(DATETIME, CONVERT(varchar, MONTH(dbo.tblAssetManagement_Utilization.StartTime)) 
                      + '/' + CONVERT(varchar, DAY(dbo.tblAssetManagement_Utilization.StartTime)) + '/' + CONVERT(varchar, 
                      YEAR(dbo.tblAssetManagement_Utilization.StartTime))), dbo.tblAssetManagement_Utilization.UserUID
ORDER BY Day DESC


GO
--/
-- qryRptSrc_Std_WorkTracking_UsersTimeClock
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersTimeClock]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersTimeClock]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersTimeClock]
AS

SELECT     dbo.tblContacts_Contacts.FullName AS ReqName, dbo.tblContacts_Contacts.Division AS DivName, 
                      dbo.tblContacts_Contacts.Phone_Business AS PhoneExt, dbo.tblContacts_Contacts.Email, dbo.tblContacts_Contacts.KPU AS KPUName, 
                      dbo.tblContacts_Contacts.[Group] AS GroupName, dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC AS LogIn, 
                      dbo.tblContacts_User_TimeClockData.LogOutDateTimeUTC AS LogOut, DATEDIFF(n, dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC, 
                      dbo.tblContacts_User_TimeClockData.LogOutDateTimeUTC) / 60.0 AS Hours, dbo.DateDate(dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC) 
                      AS LogDate, dbo.tblContacts_Contacts.UserID, dbo.tblContacts_Department.Name AS Dept, dbo.tblContacts_Contacts.UID AS UserUID
FROM         dbo.tblContacts_User_TimeClockData INNER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblContacts_User_TimeClockData.UserUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.tblContacts_Department ON dbo.tblContacts_Contacts.DepartmentUID = dbo.tblContacts_Department.UID
					  

GO
--/
-- qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours]
AS
SELECT     dbo.DateDate(dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC) AS Day, dbo.tblContacts_Contacts.FullName AS ReqName, 
                      dbo.tblContacts_Contacts.KPU AS KPUName, SUM(DATEDIFF(mi, dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC, 
                      dbo.tblContacts_User_TimeClockData.LogOutDateTimeUTC)) / 60.0 AS Hours, dbo.tblContacts_User_TimeClockData.UserUID
FROM         dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblContacts_User_TimeClockData ON dbo.tblContacts_Contacts.UID = dbo.tblContacts_User_TimeClockData.UserUID
GROUP BY dbo.DateDate(dbo.tblContacts_User_TimeClockData.LogInDateTimeUTC), dbo.tblContacts_Contacts.FullName, dbo.tblContacts_Contacts.KPU, 
                      dbo.tblContacts_User_TimeClockData.UserUID


GO
--/
-- qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours]
AS
SELECT     dbo.DateDate(StartDateTimeUTC) AS Day, dbo.NullToZero(SUM(DATEDIFF(mi, StartDateTimeUTC, EndDateTimeUTC))) / 60.0 AS ProjectHours, 
                      UserUID
FROM         dbo.tblWorkTracking_ProjectData
GROUP BY dbo.DateDate(StartDateTimeUTC), UserUID


GO
--/
-- qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours]
AS
SELECT     ReqName, Day, dbo.NullToZero(SUM(Minutes)) / 60.0 AS StatusHours, UserUID
FROM         dbo.qryRptSrc_Std_WorkTracking_UsersStatusHours
GROUP BY ReqName, Day, UserUID

GO
--/
-- qryRptSrc_Std_WorkTracking_UsersUtilization
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_UsersUtilization]
AS
SELECT     TOP (100) PERCENT dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.ReqName, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Hours) AS ClockHours, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours.StatusHours) AS StatusHours, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day AS ProjectDay, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours.ProjectHours) AS ProjectHours, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.KPUName, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Dept, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.DivName, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.PhoneExt, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Email, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.GroupName, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.LogIn, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.LogOut, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Hours) AS LogInHours, 
                      dbo.Division(100 * (SUM(dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours.ProjectHours)) 
                      + SUM(dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours.StatusHours))), 
                      SUM(dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Hours))) AS Productivity, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.UserID
FROM         dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours INNER JOIN
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock ON 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day = dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.LogDate AND 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.UserUID = dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.UserUID LEFT OUTER JOIN
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours ON 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.UserUID = dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours.UserUID AND
                       dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day = dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours.Day LEFT OUTER
                       JOIN
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours ON 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.UserUID = dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours.UserUID AND
                       dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day = dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours.Day
GROUP BY dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.ReqName, dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Hours), 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_StatusHours.StatusHours), 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ProjectHours.ProjectHours), 
                      dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.KPUName, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Dept, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.DivName, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.PhoneExt, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Email, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.GroupName, 
                      dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.LogIn, dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.LogOut, 
                      dbo.NullToZero(dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.Hours), dbo.qryRptSrc_Std_WorkTracking_UsersTimeClock.UserID
ORDER BY dbo.qryRptSrc_Std_WorkTracking_UsersUtilization_ClockHours.Day


GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Aging
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Aging]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Aging]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Aging]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, CASE WHEN DATEDIFF(d, 
                      tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) < 11 THEN COUNT(tblWorkTracking_WorkOrder.DueDateTimeUTC) ELSE ' ' END AS OneToTen, 
                      CASE WHEN DATEDIFF(d, tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) < 31 AND DATEDIFF(d, tblWorkTracking_WorkOrder.DueDateTimeUTC, 
                      GETDATE()) > 10 THEN COUNT(tblWorkTracking_WorkOrder.DueDateTimeUTC) ELSE ' ' END AS ElevenToThirty, CASE WHEN DATEDIFF(d, 
                      tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) < 61 AND DATEDIFF(d, tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) 
                      > 30 THEN COUNT(tblWorkTracking_WorkOrder.DueDateTimeUTC) ELSE ' ' END AS ThirtyOneToSixty, CASE WHEN DATEDIFF(d, 
                      tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) > 90 THEN COUNT(tblWorkTracking_WorkOrder.DueDateTimeUTC) ELSE ' ' END AS Over90, 
                      CASE WHEN DATEDIFF(d, tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) < 91 AND DATEDIFF(d, tblWorkTracking_WorkOrder.DueDateTimeUTC, 
                      GETDATE()) > 60 THEN COUNT(tblWorkTracking_WorkOrder.DueDateTimeUTC) ELSE ' ' END AS SixtyOneToNinety, 
                      COUNT(dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC) AS TotalCount, tblContacts_Contacts_1.FullName AS AssignedTo, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.tblWorkTracking_WorkOrder.Priority, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.Make, 
                      dbo.tblAssetManagement_Assets.Model, dbo.tblContacts_Contacts.FullName AS RequestorName, dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, 
                      dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
                      dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS DueDate
FROM         dbo.tblWorkTracking_Process_SubCategory RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_SubCategory.UID = dbo.tblWorkTracking_WorkOrder.SubCategoryUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.RequestorUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
WHERE     (dbo.tblWorkTracking_WorkOrder.State = N'PastDue')
GROUP BY dbo.tblAssetManagement_Assets.ID, dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets_Categories.Name, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name, dbo.tblAssetManagement_Assets.[Group], dbo.tblAssetManagement_Assets.SubGroup, 
                      dbo.tblWorkTracking_WorkOrder.Type, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, tblContacts_Contacts_1.FullName, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.BuildingName, 
                      dbo.tblWorkTracking_WorkOrder.Priority, dbo.tblAssetManagement_Assets.Description, dbo.tblAssetManagement_Assets.Make, 
                      dbo.tblAssetManagement_Assets.Model, dbo.tblContacts_Contacts.FullName, dbo.tblWorkTracking_Process_Category.Name, 
                      dbo.tblWorkTracking_Process_SubCategory.Name
ORDER BY dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry]
AS
SELECT     dbo.tblAssetManagement_Assets_Association_Member.AssociationUID, dbo.tblAssetManagement_Assets.ID AS ParentAssetID, 
                      dbo.tblAssetManagement_Assets_Association_Member.Role
FROM         dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Association_Member ON 
                      dbo.tblAssetManagement_Assets.UID = dbo.tblAssetManagement_Assets_Association_Member.AssetUID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Association ON 
                      dbo.tblAssetManagement_Assets_Association_Member.AssociationUID = dbo.tblAssetManagement_Assets_Association.UID
WHERE     (dbo.tblAssetManagement_Assets_Association_Member.Role = N'Parent')

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_Union]
AS
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry.ParentAssetID, 
               tblAssetManagement_Assets_1.ID AS AssetID, tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
               tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS IsAssetActive, 
               tblAssetManagement_Assets_1.Make AS AssetMake, tblAssetManagement_Assets_1.Model AS AssetModelID, 
               tblAssetManagement_Assets_1.[Group] AS AssetGroupName, tblAssetManagement_Assets_1.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsWorkOrderPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_Process.Name AS Process, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process_Plan.Name AS WorkOrderPlan, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Failure, dbo.tblWorkTracking_WorkOrder.Module, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, 
               dbo.tblContacts_Contacts.FullName AS AssignedTo, dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS ActivityDate, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder_Event.Action) AS Action, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Message) AS Message, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
               tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, 
               tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry INNER JOIN
               dbo.tblAssetManagement_Assets_Association INNER JOIN
               dbo.tblAssetManagement_Assets_Association_Member AS tblAssetManagement_Assets_Association_Member_1 ON 
               dbo.tblAssetManagement_Assets_Association.UID = tblAssetManagement_Assets_Association_Member_1.AssociationUID ON 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry.AssociationUID = dbo.tblAssetManagement_Assets_Association.UID
                RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_Association_Member_1.AssetUID = tblAssetManagement_Assets_1.UID ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               tblAssetManagement_Assets_1.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.RequestorUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID ON 
               tblAssetManagement_Assets_1.UID = dbo.tblWorkTracking_WorkOrder.AssetUID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE (tblAssetManagement_Assets_1.Deleted <> 1) AND (tblAssetManagement_Assets_Association_Member_1.Role = N'Child') OR
               (tblAssetManagement_Assets_1.Deleted IS NOT NULL) AND (tblAssetManagement_Assets_Association_Member_1.Role = N'Child')
ORDER BY WorkOrderID, ActivityDate DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Parent_Union
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Parent_Union]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Parent_Union]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Parent_Union]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS ParentAssetID, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblAssetManagement_Assets.AssetNumber, 
               dbo.tblAssetManagement_Assets.SerialNumber AS AssetSerialNumber, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, 
               dbo.tblAssetManagement_Assets.Make AS AssetMake, dbo.tblAssetManagement_Assets.Model AS AssetModelID, 
               dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsWorkOrderPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_Process.Name AS Process, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process_Plan.Name AS WorkOrderPlan, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Failure, dbo.tblWorkTracking_WorkOrder.Module, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, 
               dbo.tblContacts_Contacts.FullName AS AssignedTo, dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS ActivityDate, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder_Event.Action) AS Action, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Message) AS Message, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
               tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, 
               tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.RequestorUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NOT NULL)
ORDER BY ParentAssetID, WorkOrderID, ActivityDate DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions]
AS
SELECT TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS ParentAssetID, dbo.tblAssetManagement_Assets.ID AS AssetID, 
               dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblAssetManagement_Assets.AssetNumber, 
               dbo.tblAssetManagement_Assets.SerialNumber AS AssetSerialNumber, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, 
               dbo.tblAssetManagement_Assets.Make AS AssetMake, dbo.tblAssetManagement_Assets.Model AS AssetModelID, 
               dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsWorkOrderPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_Process.Name AS Process, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process_Plan.Name AS WorkOrderPlan, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Failure, dbo.tblWorkTracking_WorkOrder.Module, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, 
               dbo.tblContacts_Contacts.FullName AS AssignedTo, dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS ActivityDate, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder_Event.Action) AS Action, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Message) AS Message, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
               tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, 
               tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.RequestorUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NOT NULL)
UNION
SELECT TOP (100) PERCENT dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry.ParentAssetID, 
               tblAssetManagement_Assets_1.ID AS AssetID, tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
               tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS IsAssetActive, 
               tblAssetManagement_Assets_1.Make AS AssetMake, tblAssetManagement_Assets_1.Model AS AssetModelID, 
               tblAssetManagement_Assets_1.[Group] AS AssetGroupName, tblAssetManagement_Assets_1.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsWorkOrderPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_Process.Name AS Process, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process_Plan.Name AS WorkOrderPlan, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Failure, dbo.tblWorkTracking_WorkOrder.Module, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, 
               dbo.tblContacts_Contacts.FullName AS AssignedTo, dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS ActivityDate, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder_Event.Action) AS Action, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Message) AS Message, 
               CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
               tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, 
               tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry INNER JOIN
               dbo.tblAssetManagement_Assets_Association INNER JOIN
               dbo.tblAssetManagement_Assets_Association_Member AS tblAssetManagement_Assets_Association_Member_1 ON 
               dbo.tblAssetManagement_Assets_Association.UID = tblAssetManagement_Assets_Association_Member_1.AssociationUID ON 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrder_Associated_Assets_Transactions_Child_SubQry.AssociationUID = dbo.tblAssetManagement_Assets_Association.UID
                RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_Association_Member_1.AssetUID = tblAssetManagement_Assets_1.UID ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               tblAssetManagement_Assets_1.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.RequestorUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID ON 
               tblAssetManagement_Assets_1.UID = dbo.tblWorkTracking_WorkOrder.AssetUID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE (tblAssetManagement_Assets_1.Deleted <> 1) AND (tblAssetManagement_Assets_Association_Member_1.Role = N'Child') OR
               (tblAssetManagement_Assets_1.Deleted IS NOT NULL) AND (tblAssetManagement_Assets_Association_Member_1.Role = N'Child')
ORDER BY ParentAssetID, WorkOrderID, ActivityDate DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Separate_Columns
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Separate_Columns]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Separate_Columns]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Separate_Columns]
AS
SELECT TOP (100) PERCENT CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_WorkOrder_1.ID ELSE tblWorkTracking_WorkOrder.ID END AS WorkOrderID, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_WorkOrder_1.CloseDateTimeUTC ELSE tblWorkTracking_WorkOrder.CloseDateTimeUTC END AS CloseDate, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_WorkOrder_1.RequestDateTimeUTC ELSE tblWorkTracking_WorkOrder.RequestDateTimeUTC END AS RequestDate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.AppliedDate AS LogDate, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_Category_1.Name ELSE tblWorkTracking_Process_Category.Name END AS WorkOrderCategory, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_SubCategory_1.Name ELSE tblWorkTracking_Process_SubCategory.Name END AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Name AS Username, dbo.tblWorkTracking_WorkOrder_RateCode.Rate, 
               dbo.tblWorkTracking_WorkOrder_RateCode.RateCode, dbo.tblWorkTracking_WorkOrder_RateCode.Hours, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Rate * dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS LaborCost, '' AS InventoryName, '' AS Description, 
               0 AS Quanitity, '' AS Units, 0 AS UnitPrice, 0 AS InventoryCost, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblAssetManagement_Assets_2.UID IS NULL 
               THEN tblAssetManagement_Assets.ID ELSE tblAssetManagement_Assets_2.ID END END AS AssetID, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblAssetManagement_Assets_Categories_1.Name ELSE CASE WHEN tblAssetManagement_Assets_2.UID IS NULL 
               THEN tblAssetManagement_Assets_Categories.Name ELSE tblAssetManagement_Assets_Categories_2.Name END END AS AssetCategory, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblAssetManagement_Assets_SubCategories_1.Name ELSE CASE WHEN tblAssetManagement_Assets_2.UID IS NULL 
               THEN tblAssetManagement_Assets_SubCategories.Name ELSE tblAssetManagement_Assets_SubCategories_2.Name END END AS AssetSubCategory, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL THEN CONVERT(varchar, tblWorkTracking_WorkOrder_1.Description) ELSE CONVERT(varchar, 
               tblWorkTracking_WorkOrder.Description) END AS WorkOrderDescription, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_ScheduledWork_1.ScheduledWOID ELSE tblWorkTracking_ScheduledWork.ScheduledWOID END AS ScheduledWOID, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_Plan_1.Name ELSE tblWorkTracking_Process_Plan.Name END AS PlanName, qrySystem_Locale_1.CampusName, 
               qrySystem_Locale_1.BuildingName, qrySystem_Locale_1.FloorName, qrySystem_Locale_1.RoomName, qrySystem_Locale_1.LocationName, 
               qrySystem_Locale_1.FullLocaleName, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_1.Name ELSE tblWorkTracking_Process.Name END AS Process, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_Revision_1.Revision ELSE tblWorkTracking_Process_Revision.Revision END AS ProcessRevision, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblWorkTracking_Process_1.Name + ' / Rev ' + tblWorkTracking_Process_Revision_1.Revision ELSE tblWorkTracking_Process.Name + ' / Rev ' + tblWorkTracking_Process_Revision.Revision
                END AS ProcessAndRevision, CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblAssetManagement_Assets_1.[Group] ELSE CASE WHEN tblAssetManagement_Assets_2.UID IS NULL 
               THEN tblAssetManagement_Assets.[Group] ELSE tblAssetManagement_Assets_2.[Group] END END AS AssetGroup, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.UID IS NULL 
               THEN tblAssetManagement_Assets_1.SubGroup ELSE CASE WHEN tblAssetManagement_Assets_2.UID IS NULL 
               THEN tblAssetManagement_Assets.SubGroup ELSE tblAssetManagement_Assets_2.SubGroup END END AS AssetSubGroup, '' AS InventoryTracked
FROM  dbo.tblWorkTracking_Process_Revision AS tblWorkTracking_Process_Revision_1 LEFT OUTER JOIN
               dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 ON 
               tblWorkTracking_Process_Revision_1.ProcessUID = tblWorkTracking_Process_1.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON 
               tblWorkTracking_Process_Revision_1.UID = tblWorkTracking_WorkOrder_1.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID LEFT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan ON dbo.tblWorkTracking_ScheduledWork.PlanUID = dbo.tblWorkTracking_Process_Plan.UID ON 
               dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_2 LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_2 ON 
               tblAssetManagement_Assets_2.SubCategoryUID = tblAssetManagement_Assets_SubCategories_2.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_2 ON 
               tblAssetManagement_Assets_2.CategoryUID = tblAssetmanagement_Assets_Categories_2.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step ON tblAssetManagement_Assets_2.UID = dbo.tblWorkTracking_WorkOrder_Step.AssetUID ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_RateCode ON dbo.tblWorkTracking_WorkOrder_Step.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID ON 
               tblWorkTracking_WorkOrder_1.UID = dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON tblWorkTracking_WorkOrder_1.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 RIGHT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork AS tblWorkTracking_ScheduledWork_1 ON 
               tblWorkTracking_Process_Plan_1.UID = tblWorkTracking_ScheduledWork_1.PlanUID ON 
               tblWorkTracking_WorkOrder_1.ScheduledWorkUID = tblWorkTracking_ScheduledWork_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
               tblWorkTracking_WorkOrder_1.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
               tblWorkTracking_WorkOrder_1.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
               tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID
UNION
SELECT TOP (100) 
               PERCENT CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_WorkOrder.ID ELSE tblWorkTracking_WorkOrder_1.ID
                END AS WorkOrderID, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_WorkOrder.CloseDateTimeUTC ELSE tblWorkTracking_WorkOrder_1.CloseDateTimeUTC
                END AS CloseDate, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_WorkOrder.RequestDateTimeUTC ELSE tblWorkTracking_WorkOrder_1.RequestDateTimeUTC
                END AS RequestDate, dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process_Category.Name ELSE tblWorkTracking_Process_Category_1.Name
                END AS WorkOrderCategory, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process_SubCategory.Name ELSE tblWorkTracking_Process_SubCategory_1.Name
                END AS WorkOrderSubCategory, '' AS Username, 0 AS Rate, '' AS RateCode, 0 AS Hours, 0 AS LaborCost, 
               dbo.tblInventory_Item_TransactionLog.ItemName AS InventoryName, dbo.tblInventory_Item_TransactionLog.ItemDesc AS Description, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, dbo.tblInventory_Item_TransactionLog.UnitName AS Units, CONVERT(float, 
               dbo.tblInventory_Item_TransactionLog.UnitPrice) AS UnitPrice, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS InventoryCost, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblAssetManagement_Assets.UID
                IS NULL THEN tblAssetManagement_Assets_2.ID ELSE tblAssetManagement_Assets.ID END END AS AssetID, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets_Categories_1.Name ELSE CASE WHEN tblAssetManagement_Assets.UID
                IS NULL THEN tblAssetManagement_Assets_Categories_2.Name ELSE tblAssetManagement_Assets_Categories.Name END END AS AssetCategory, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets_SubCategories_1.Name ELSE CASE WHEN tblAssetManagement_Assets.UID
                IS NULL THEN tblAssetManagement_Assets_SubCategories_2.Name ELSE tblAssetManagement_Assets_SubCategories.Name END END AS AssetSubCategory, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN CONVERT(varchar, tblWorkTracking_WorkOrder.Description) 
               ELSE CONVERT(varchar, tblWorkTracking_WorkOrder_1.Description) END AS WorkOrderDescription, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_ScheduledWork.ScheduledWOID ELSE tblWorkTracking_ScheduledWork_1.ScheduledWOID
                END AS ScheduledWOID, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process_Plan.Name ELSE tblWorkTracking_Process_Plan_1.Name
                END AS PlanName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.CampusName ELSE qrySystem_Locale_1.CampusName
                END AS CampusName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.BuildingName ELSE qrySystem_Locale_1.BuildingName
                END AS BuildingName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.FloorName ELSE qrySystem_Locale_1.FloorName END
                AS FloorName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.RoomName ELSE qrySystem_Locale_1.RoomName END
                AS RoomName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.LocationName ELSE qrySystem_Locale_1.LocationName
                END AS LocationName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN qrySystem_Locale.FullLocaleName ELSE qrySystem_Locale_1.FullLocaleName
                END AS FullLocaleName, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process.Name ELSE tblWorkTracking_Process_1.Name
                END AS Process, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process_Revision.Revision ELSE tblWorkTracking_Process_Revision_1.Revision
                END AS ProcessRevision, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrderStep' THEN tblWorkTracking_Process.Name + ' / Rev ' + tblWorkTracking_Process_Revision.Revision
                ELSE tblWorkTracking_Process_1.Name + ' / Rev ' + tblWorkTracking_Process_Revision_1.Revision END AS ProcessAndRevision, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets_1.[Group] ELSE CASE WHEN tblAssetManagement_Assets.UID
                IS NULL THEN tblAssetManagement_Assets_2.[Group] ELSE tblAssetManagement_Assets.[Group] END END AS AssetGroup, 
               CASE WHEN tblInventory_Item_TransactionLog.ObjectRefType = 'WTWorkOrder' THEN tblAssetManagement_Assets_1.SubGroup ELSE CASE WHEN tblAssetManagement_Assets.UID
                IS NULL THEN tblAssetManagement_Assets_2.SubGroup ELSE tblAssetManagement_Assets.SubGroup END END AS AssetSubGroup, 
               CASE WHEN tblInventory_Item_TransactionLog.ItemUID = '00000000-0000-0000-0000-000000000000' THEN 'Non-Tracked' ELSE 'Tracked' END AS InventoryTracked
FROM  dbo.tblInventory_Item_TransactionLog LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_2 ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = tblAssetManagement_Assets_2.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID ON 
               dbo.tblWorkTracking_Process_Category.UID = dbo.tblWorkTracking_WorkOrder.CategoryUID LEFT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan ON dbo.tblWorkTracking_ScheduledWork.PlanUID = dbo.tblWorkTracking_Process_Plan.UID ON 
               dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON 
               dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step ON dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder_Step.AssetUID ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID ON 
               dbo.tblInventory_Item_TransactionLog.ObjectRefUID = dbo.tblWorkTracking_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision AS tblWorkTracking_Process_Revision_1 LEFT OUTER JOIN
               dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 ON tblWorkTracking_Process_Revision_1.ProcessUID = tblWorkTracking_Process_1.UID ON 
               tblWorkTracking_WorkOrder_1.ProcessRevisionUID = tblWorkTracking_Process_Revision_1.UID ON 
               dbo.tblInventory_Item_TransactionLog.ObjectRefUID = tblWorkTracking_WorkOrder_1.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON tblWorkTracking_WorkOrder_1.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 RIGHT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork AS tblWorkTracking_ScheduledWork_1 ON 
               tblWorkTracking_Process_Plan_1.UID = tblWorkTracking_ScheduledWork_1.PlanUID ON 
               tblWorkTracking_WorkOrder_1.ScheduledWorkUID = tblWorkTracking_ScheduledWork_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
               tblWorkTracking_WorkOrder_1.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
               tblWorkTracking_WorkOrder_1.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetmanagement_Assets_Categories_1.UID = tblAssetManagement_Assets_1.CategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 ON 
               tblAssetManagement_Assets_1.SubCategoryUID = tblAssetManagement_Assets_SubCategories_1.UID ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_2 ON 
               tblAssetManagement_Assets_2.SubCategoryUID = tblAssetManagement_Assets_SubCategories_2.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_2 ON 
               tblAssetManagement_Assets_2.CategoryUID = tblAssetmanagement_Assets_Categories_2.UID
WHERE (dbo.tblInventory_Item_TransactionLog.ObjectRefType IN (N'WTWorkOrder', N'WTWorkOrderStep'))

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Shared_Columns
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Shared_Columns]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Shared_Columns]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrder_Inv_Labor_Detail_Shared_Columns]
AS
SELECT TOP (100) PERCENT CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblWorkTracking_WorkOrder_1.ID ELSE tblWorkTracking_WorkOrder.ID END AS WorkOrderID, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblAssetManagement_Assets_1.ID ELSE CASE WHEN tblAssetManagement_Assets.ID IS NULL 
               THEN tblAssetManagement_Assets_1.ID ELSE tblAssetManagement_Assets.ID END END AS AssetID, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblAssetManagement_Assets_Categories_1.Name ELSE CASE WHEN tblAssetManagement_Assets_Categories.Name IS NULL 
               THEN tblAssetManagement_Assets_Categories_1.Name ELSE tblAssetManagement_Assets_Categories.Name END END AS AssetCategory, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblAssetManagement_Assets_SubCategories_1.Name ELSE CASE WHEN tblAssetManagement_Assets_SubCategories.Name IS NULL 
               THEN tblAssetManagement_Assets_SubCategories_1.Name ELSE tblAssetManagement_Assets_SubCategories.Name END END AS AssetSubCategory, 
               tblWorkTracking_WorkOrder_1.RequestDateTimeUTC AS RequestDate, tblWorkTracking_WorkOrder_1.CloseDateTimeUTC AS CloseDate, 
               'Labor' AS TransactionType, dbo.tblWorkTracking_WorkOrder_RateCode.Name, '' AS Description, dbo.tblWorkTracking_WorkOrder_RateCode.Rate AS Units, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS Quantity, dbo.tblWorkTracking_WorkOrder_RateCode.RateCode AS UnitType, 
               dbo.tblWorkTracking_WorkOrder_RateCode.Rate * dbo.tblWorkTracking_WorkOrder_RateCode.Hours AS TotalCost, 
               dbo.tblWorkTracking_WorkOrder_RateCode.AppliedDate AS LogDate, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblAssetManagement_Assets_1.[Group] ELSE CASE WHEN tblAssetManagement_Assets.[Group] IS NULL 
               THEN tblAssetManagement_Assets_1.[Group] ELSE tblAssetManagement_Assets.[Group] END END AS AssetGroup, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblAssetManagement_Assets_1.SubGroup ELSE CASE WHEN tblAssetManagement_Assets.SubGroup IS NULL 
               THEN tblAssetManagement_Assets_1.SubGroup ELSE tblAssetManagement_Assets.SubGroup END END AS AssetSubGroup, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               CONVERT(varchar, MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS LogMonthYear, CONVERT(varchar(8000), tblWorkTracking_WorkOrder_1.Description) 
               AS WorkOrderDescription, CONVERT(varchar(8000), tblWorkTracking_WorkOrder_1.WorkToBeDone) AS WorkToBeDone, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.CampusName ELSE CASE WHEN qrySystem_Locale.CampusName IS NULL 
               THEN qrySystem_Locale_1.CampusName ELSE qrySystem_Locale.CampusName END END AS CampusName, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.BuildingName ELSE CASE WHEN qrySystem_Locale.BuildingName IS NULL 
               THEN qrySystem_Locale_1.BuildingName ELSE qrySystem_Locale.BuildingName END END AS BuildingName, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.FloorName ELSE CASE WHEN qrySystem_Locale.FloorName IS NULL 
               THEN qrySystem_Locale_1.FloorName ELSE qrySystem_Locale.FloorName END END AS FloorName, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.RoomName ELSE CASE WHEN qrySystem_Locale.RoomName IS NULL 
               THEN qrySystem_Locale_1.RoomName ELSE qrySystem_Locale.RoomName END END AS RoomName, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.LocationName ELSE CASE WHEN qrySystem_Locale.LocationName IS NULL 
               THEN qrySystem_Locale_1.LocationName ELSE qrySystem_Locale.LocationName END END AS LocationName, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN qrySystem_Locale_1.FullLocaleName ELSE CASE WHEN qrySystem_Locale.FullLocaleName IS NULL 
               THEN qrySystem_Locale_1.FullLocaleName ELSE qrySystem_Locale.FullLocaleName END END AS FullLocaleName, CONVERT(varchar, 
               MONTH(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(varchar, 
               DAY(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) + '/' + CONVERT(varchar, 
               YEAR(dbo.tblWorkTracking_WorkOrder_RateCode.LogDateTimeUTC)) AS LogDateOnly, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblWorkTracking_Process_1.Name ELSE tblWorkTracking_Process.Name END AS Process, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblWorkTracking_Process_Revision_1.Revision ELSE tblWorkTracking_Process_Revision.Revision END AS ProcessRevision, 
               CASE WHEN tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = '00000000-0000-0000-0000-000000000000' OR
               tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID IS NULL 
               THEN tblWorkTracking_Process_1.Name + ' / Rev ' + 'tblWorkTracking_Process_Revision_1.Revision tblWorkTracking_Process.Name' + ' / Rev ' + 'ELSE tblWorkTracking_Process_Revision.Revision'
                END AS ProcessAndRevision, '' AS InventoryTracked
FROM  dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_RateCode INNER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder_1 ON 
               dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderUID = tblWorkTracking_WorkOrder_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision AS tblWorkTracking_Process_Revision_1 LEFT OUTER JOIN
               dbo.tblWorkTracking_Process AS tblWorkTracking_Process_1 ON tblWorkTracking_Process_Revision_1.ProcessUID = tblWorkTracking_Process_1.UID ON 
               tblWorkTracking_WorkOrder_1.ProcessRevisionUID = tblWorkTracking_Process_Revision_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step ON dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder_Step.AssetUID ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID ON 
               dbo.tblWorkTracking_WorkOrder_RateCode.WorkOrderStepUID = dbo.tblWorkTracking_WorkOrder_Step.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON tblWorkTracking_WorkOrder_1.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON tblWorkTracking_WorkOrder_1.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID ON 
               dbo.tblWorkTracking_Process_Category.UID = tblWorkTracking_WorkOrder_1.CategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               tblAssetManagement_Assets_SubCategories_1.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
               tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
               tblWorkTracking_WorkOrder_1.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblAssetManagement_Assets.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID
UNION
SELECT TOP (100) PERCENT tblWorkTracking_WorkOrder.ID AS WorkOrderID, tblAssetManagement_Assets.ID AS AssetID, 
               tblAssetmanagement_Assets_Categories.Name AS AssetCategory, tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CloseDate, 
               'Inventory' AS TransactionType, dbo.tblInventory_Item_TransactionLog.ItemName, dbo.tblInventory_Item_TransactionLog.ItemDesc AS Description, 
               CONVERT(float, dbo.tblInventory_Item_TransactionLog.UnitPrice) AS Units, dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, 
               dbo.tblInventory_Item_TransactionLog.UnitName AS UnitType, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS TotalCost, 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, tblAssetManagement_Assets.[Group] AS AssetGroup, 
               tblAssetManagement_Assets.SubGroup AS AssetSubGroup, tblWorkTracking_Process_Category_1.Name AS WorkOrderCategory, 
               tblWorkTracking_Process_SubCategory_1.Name AS WorkOrderSubCategory, CONVERT(VarChar, 
               MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               AS LogMonthYear, CONVERT(varchar(8000), tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, CONVERT(varchar(8000), 
               tblWorkTracking_WorkOrder.WorkToBeDone) AS WorkToBeDone, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               CONVERT(VarChar, MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, 
               DAY(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               AS LogDateOnly, dbo.tblWorkTracking_Process.Name AS Process, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
               CASE WHEN tblInventory_Item_TransactionLog.ItemUID = '00000000-0000-0000-0000-000000000000' THEN 'Non-Tracked' ELSE 'Tracked' END AS InventoryTracked
FROM  dbo.tblWorkTracking_Process RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder AS tblWorkTracking_WorkOrder ON 
               dbo.tblWorkTracking_Process_Revision.UID = tblWorkTracking_WorkOrder.ProcessRevisionUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets ON 
               tblWorkTracking_WorkOrder.AssetUID = tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory AS tblWorkTracking_Process_SubCategory_1 ON 
               tblWorkTracking_WorkOrder.SubCategoryUID = tblWorkTracking_Process_SubCategory_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category AS tblWorkTracking_Process_Category_1 ON 
               tblWorkTracking_WorkOrder.CategoryUID = tblWorkTracking_Process_Category_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories ON 
               tblAssetManagement_Assets.SubCategoryUID = tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories ON 
               tblAssetManagement_Assets.CategoryUID = tblAssetmanagement_Assets_Categories.UID RIGHT OUTER JOIN
               dbo.tblInventory_Item_TransactionLog ON tblWorkTracking_WorkOrder.UID = dbo.tblInventory_Item_TransactionLog.ObjectRefUID
WHERE (dbo.tblInventory_Item_TransactionLog.ObjectRefType = N'wtworkorder')
UNION
SELECT TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CASE WHEN tblAssetManagement_Assets_1.ID IS NULL 
               THEN tblAssetManagement_Assets.ID ELSE tblAssetManagement_Assets_1.ID END AS AssetID, 
               CASE WHEN tblAssetManagement_Assets_Categories_1.Name IS NULL 
               THEN tblAssetManagement_Assets_Categories.Name ELSE tblAssetManagement_Assets_Categories_1.Name END AS AssetCategory, 
               CASE WHEN tblAssetManagement_Assets_SubCategories_1.Name IS NULL 
               THEN tblAssetManagement_Assets_SubCategories.Name ELSE tblAssetManagement_Assets_SubCategories_1.Name END AS AssetSubCategory, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS RequestDate, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS CloseDate, 
               'Inventory' AS TransactionType, dbo.tblInventory_Item_TransactionLog.ItemName AS Name, dbo.tblInventory_Item_TransactionLog.ItemDesc AS Description, 
               CONVERT(float, dbo.tblInventory_Item_TransactionLog.UnitPrice) AS Units, dbo.tblInventory_Item_TransactionLog.TransQuantity * - 1 AS Quantity, 
               dbo.tblInventory_Item_TransactionLog.UnitName AS UnitType, 
               dbo.tblInventory_Item_TransactionLog.TransQuantity * dbo.tblInventory_Item_TransactionLog.UnitPrice * - 1 AS TotalCost, 
               dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC AS LogDate, tblAssetManagement_Assets_1.[Group] AS AssetGroup, 
               tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, CONVERT(VarChar, 
               MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               AS LogMonthYear, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder.WorkToBeDone) AS WorkToBeDone, CASE WHEN tblAssetManagement_Assets_1.UID IS NULL 
               THEN qrySystem_Locale_1.CampusName ELSE qrySystem_Locale.CampusName END AS CampusName, CASE WHEN tblAssetManagement_Assets_1.UID IS NULL
                THEN qrySystem_Locale_1.BuildingName ELSE qrySystem_Locale.BuildingName END AS BuildingName, CASE WHEN tblAssetManagement_Assets_1.UID IS NULL
                THEN qrySystem_Locale_1.FloorName ELSE qrySystem_Locale.FloorName END AS FloorName, CASE WHEN tblAssetManagement_Assets_1.UID IS NULL 
               THEN qrySystem_Locale_1.RoomName ELSE qrySystem_Locale.RoomName END AS RoomName, CASE WHEN tblAssetManagement_Assets_1.UID IS NULL 
               THEN qrySystem_Locale_1.LocationName ELSE qrySystem_Locale.LocationName END AS LocationName, 
               CASE WHEN tblAssetManagement_Assets_1.UID IS NULL 
               THEN qrySystem_Locale_1.FullLocaleName ELSE qrySystem_Locale.FullLocaleName END AS FullLocaleName, CONVERT(VarChar, 
               MONTH(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) + '/' + CONVERT(VarChar, DAY(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) 
               + '/' + CONVERT(VarChar, YEAR(dbo.tblInventory_Item_TransactionLog.TransDateTimeUTC)) AS LogDateOnly, dbo.tblWorkTracking_Process.Name AS Process, 
               dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process.Name + N' / Rev ' + dbo.tblWorkTracking_Process_Revision.Revision AS ProcessAndRevision, 
               CASE WHEN tblInventory_Item_TransactionLog.ItemUID = '00000000-0000-0000-0000-000000000000' THEN 'Non-Tracked' ELSE 'Tracked' END AS InventoryTracked
FROM  dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step INNER JOIN
               dbo.tblInventory_Item_TransactionLog ON dbo.tblWorkTracking_WorkOrder_Step.UID = dbo.tblInventory_Item_TransactionLog.ObjectRefUID ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblAssetManagement_Assets_1.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories AS tblAssetManagement_Assets_SubCategories_1 ON 
               tblAssetManagement_Assets_1.SubCategoryUID = tblAssetManagement_Assets_SubCategories_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories AS tblAssetmanagement_Assets_Categories_1 ON 
               tblAssetManagement_Assets_1.CategoryUID = tblAssetmanagement_Assets_Categories_1.UID ON 
               dbo.tblWorkTracking_WorkOrder_Step.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON dbo.tblWorkTracking_WorkOrder.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID
WHERE (dbo.tblInventory_Item_TransactionLog.ObjectRefType = N'WTWorkOrderStep')
ORDER BY WorkOrderID DESC


GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_Hours_EstVsActual_Chart
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Hours_EstVsActual_Chart]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Hours_EstVsActual_Chart]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Hours_EstVsActual_Chart]
AS
SELECT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, 
               dbo.tblWorkTracking_WorkOrder.isSupDepFailure AS IsSupplierDependantFailure, dbo.tblWorkTracking_WorkOrder.EstHours, 
               dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, tblContacts_Contacts_1.FullName AS AssignedTo, 
               dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               ISNULL(dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours - dbo.tblWorkTracking_WorkOrder.EstHours, 0) AS DiffHours, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) AS ClosedMonthYear, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) 
               AS RequestedMonthYear, dbo.tblContacts_Contacts.FullName AS WorkOrderRequestorName, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID ON 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.RequestorUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON dbo.tblAssetManagement_Assets.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
               dbo.tblAssetManagement_Assets_Categories.UID = dbo.tblAssetManagement_Assets.CategoryUID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_List
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List]
AS
SELECT TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) 
               AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned, 
               dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure AS IsSupplierDependantFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Module, dbo.tblWorkTracking_WorkOrder.Failure, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost + dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost AS TotalCost,
                dbo.tblWorkTracking_WorkOrder.PastDueEmailSentOnDateTimeUTC AS PastDueEmailSentOn, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               CASE WHEN tblWorkTracking_WorkOrder.AssignedToType = 'Group' THEN tblContacts_Contact_Group_1.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                dbo.tblWorkTracking_WorkOrder.AssignedToType, tblAssetManagement_Assets_1.ID AS AssetID, 
               tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
               tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS IsAssetActive, CONVERT(varchar(8000), 
               tblAssetManagement_Assets_1.Comments) AS AssetComments, tblAssetManagement_Assets_1.Make AS AssetMake, 
               tblAssetManagement_Assets_1.Model AS AssetModel, tblAssetManagement_Assets_1.[Group] AS AssetGroup, 
               tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS StatusDate, 
               dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS StatusMajor, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS StatusMinor, 
               ISNULL(dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours - dbo.tblWorkTracking_WorkOrder.EstHours, 0) AS DiffHours, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) AS ClosedMonthYear, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) 
               AS RequestedMonthYear, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, 
               dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblWorkTracking_ScheduledWork.NextTriggerDate, 
               tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, 
               tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               DATEDIFF(hh, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) 
               / 1.00 AS WorkOrderDiffStartCloseHours, DATEDIFF(hh, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, 
               dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC) / 1.00 AS WorkOrderDiffRequestStartHours, DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffRequestCloseHours, 
               DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffStartCloseDays, 
               DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC) 
               / 1.00 AS WorkOrderDiffRequestStartDays, DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffRequestCloseDays, DATEDIFF(dd, 
               dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) / 1.00 AS WorkPastDueDays, DATEDIFF(hh, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, 
               GETDATE()) / 1.00 AS WorkPastDueHours, DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffDueDateCloseDays, DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffDueDateCloseHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, 
               dbo.tblWorkTracking_Process.Name AS ProcessName, dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               tblWorkTracking_Process_Plan_1.Name AS WorkOrderPlan, dbo.tblWorkTracking_Operation_Step.[Index] AS StepIndex, 
               dbo.tblWorkTracking_Operation_Step.WorkToBeDone AS StepWorkToBeDone, dbo.tblWorkTracking_Operation_Step.Name AS StepName, 
               dbo.tblWorkTracking_WorkOrder_Step.State AS StepState, dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC AS StepStartDate, 
               dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC AS StepCloseDate, dbo.tblWorkTracking_WorkOrder_Step.AssignedToType AS StepAssignedToType, 
               CASE WHEN tblWorkTracking_WorkOrder_Step.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts_3.FullName END AS
                StepAssignedTo, dbo.tblAssetManagement_Assets.ID AS StepAssetID, dbo.tblAssetManagement_Assets.Description AS StepAssetDescription, 
               CASE WHEN tblWorkTracking_ScheduledWork.PlanUID IS NULL 
               THEN tblWorkTracking_Process_Plan_1.Name ELSE tblWorkTracking_Process_Plan.Name END AS SW_Plan, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 1.00 ELSE DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 1.00 END AS StepElapsedTimeMin, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 60.00 ELSE DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 60.00 END AS StepElapsedTimeHours, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 24.00 ELSE DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 24.00 END AS StepElapsedTimeDays, 
               dbo.tblWorkTracking_WorkOrder_Event.UserName AS ClosedBy
FROM  dbo.tblAssetManagement_Assets RIGHT OUTER JOIN
               dbo.tblContacts_Contact_Group RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 LEFT OUTER JOIN
               dbo.qrySystem_Locale ON tblAssetManagement_Assets_1.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               tblAssetManagement_Assets_1.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               tblAssetManagement_Assets_1.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
               dbo.tblAssetManagement_Assets_Categories.UID = tblAssetManagement_Assets_1.CategoryUID RIGHT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory RIGHT OUTER JOIN
               dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID AND 
               dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC = dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step ON dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Step.WorkOrderUID ON 
               dbo.tblContacts_Contacts.UID = dbo.tblWorkTracking_WorkOrder.AssignedToUID ON 
               dbo.tblWorkTracking_Process_SubCategory.UID = dbo.tblWorkTracking_WorkOrder.SubCategoryUID ON 
               dbo.tblWorkTracking_Process_Category.UID = dbo.tblWorkTracking_WorkOrder.CategoryUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 RIGHT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON tblWorkTracking_Process_Plan_1.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group AS tblContacts_Contact_Group_1 ON 
               dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contact_Group_1.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               tblContacts_Contacts_1.UID = dbo.tblWorkTracking_WorkOrder.RequestorUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_ScheduledWork.PlanUID ON 
               dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID ON 
               tblAssetManagement_Assets_1.UID = dbo.tblWorkTracking_WorkOrder.AssetUID ON 
               dbo.tblContacts_Contact_Group.UID = dbo.tblWorkTracking_WorkOrder_Step.AssignedToUID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_3 ON dbo.tblWorkTracking_WorkOrder_Step.AssignedToUID = tblContacts_Contacts_3.UID ON 
               dbo.tblAssetManagement_Assets.UID = dbo.tblWorkTracking_WorkOrder_Step.AssetUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Operation_Step ON dbo.tblWorkTracking_WorkOrder_Step.OperationStepUID = dbo.tblWorkTracking_Operation_Step.UID
WHERE (tblAssetManagement_Assets_1.Deleted <> 1) OR
               (tblAssetManagement_Assets_1.Deleted IS NULL)
ORDER BY WorkOrderID DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_List_withSW
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List_withSW]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List_withSW]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_List_withSW]
AS
SELECT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.Description AS WorkOrderDescription, 
               dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, 
               dbo.tblWorkTracking_WorkOrder.DueDate AS WorkOrderDueDate, dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, 
               dbo.tblWorkTracking_WorkOrder.IsPlanned AS WorkOrderIsPlanned, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, dbo.tblWorkTracking_WorkOrder.WorkToBeDone, 
               dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours AS WorkOrderActHours, 
               dbo.tblWorkTracking_WorkOrder.PastDueEmailSentOnDateTimeUTC AS PastDueEmailSentOn, tblContacts_Contacts_1.FullName AS AssignedTo, 
               dbo.tblAssetManagement_Assets.ID AS AssetID, CONVERT(VarChar(2000), dbo.tblAssetManagement_Assets.Description) AS AssetDescription, 
               dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.SerialNumber AS AssetSerialNumber, 
               dbo.tblAssetManagement_Assets.Make AS AssetMake, dbo.tblAssetManagement_Assets.Model AS AssetModel, 
               dbo.tblAssetManagement_Assets.[Group] AS AssetGroupName, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, dbo.tblAssetManagement_Assets.Active AS AssetActive, 
               CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) AS CompletedMonthYear, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) 
               AS RequestedMonthYear, dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblWorkTracking_ScheduledWork.Description AS SchedWODescription, 
               dbo.tblWorkTracking_ScheduledWork.NextTriggerDate, 
               ISNULL(dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours - dbo.tblWorkTracking_WorkOrder.EstHours, 0) AS DiffHours, 
               dbo.tblContacts_Contacts.FullName AS WorkOrderRequestorName, dbo.tblContacts_Contacts.Email AS WorkOrderRequestorEmail, 
               dbo.tblContacts_Contacts.Phone_Business AS WorkOrderRequestorPhone, dbo.tblContacts_Contacts.Phone_Mobile AS WorkOrderRequestorMobilePhone, 
               DATEDIFF(hh, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) 
               / 1.00 AS WorkOrderDiffStartCloseHours, DATEDIFF(hh, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, 
               dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC) / 1.00 AS WorkOrderDiffRequestStartHours, DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffRequestCloseHours, 
               DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffStartCloseDays, 
               DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC) 
               / 1.00 AS WorkOrderDiffRequestStartDays, DATEDIFF(dd, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) / 1.00 AS WorkOrderDiffRequestCloseDays, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost + dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost AS TotalCost,
                dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost
FROM  dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.RequestorUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = dbo.tblAssetManagement_Assets.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID
WHERE (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblWorkTracking_ScheduledWork.ScheduledWOID IS NOT NULL) OR
               (dbo.tblAssetManagement_Assets.Deleted IS NULL) AND (dbo.tblWorkTracking_ScheduledWork.ScheduledWOID IS NOT NULL)

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_PlannedVsUnplanned_Chart
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PlannedVsUnplanned_Chart]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PlannedVsUnplanned_Chart]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PlannedVsUnplanned_Chart]
AS
SELECT dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, dbo.tblWorkTracking_WorkOrder.IsPlanned, 
               dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, 
               dbo.tblContacts_Contacts.FullName AS AssignedTo, dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) 
               AS ClosedMonthYear, CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, 
               YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) AS RequestedMonthYear, dbo.qrySystem_Locale.CampusName, 
               dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
               dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblWorkTracking_Process_SubCategory RIGHT OUTER JOIN
               dbo.qrySystem_Locale RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID ON 
               dbo.tblWorkTracking_Process_SubCategory.UID = dbo.tblWorkTracking_WorkOrder.SubCategoryUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets LEFT OUTER JOIN
               dbo.qrySystem_Locale AS qrySystem_Locale_1 ON dbo.tblAssetManagement_Assets.LocaleUID = qrySystem_Locale_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_StatusLog ON 
               dbo.tblAssetManagement_Assets.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
               dbo.tblAssetManagement_Assets_Categories.UID = dbo.tblAssetManagement_Assets.CategoryUID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_PrintForms
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PrintForms]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PrintForms]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_PrintForms]
AS
SELECT     TOP (100) PERCENT dbo.qryWorkTracking_WorkOrder_All.UID, dbo.qryWorkTracking_WorkOrder_All.ID, dbo.qryWorkTracking_WorkOrder_All.Description, 
                      dbo.qryWorkTracking_WorkOrder_All.Priority, dbo.qryWorkTracking_WorkOrder_All.Type, dbo.qryWorkTracking_WorkOrder_All.IsPlanned, 
                      dbo.qryWorkTracking_WorkOrder_All.AssignedToUID, dbo.qryWorkTracking_WorkOrder_All.AssignedToName, dbo.qryWorkTracking_WorkOrder_All.CategoryName, 
                      dbo.qryWorkTracking_WorkOrder_All.SubCategoryName, dbo.qryWorkTracking_WorkOrder_All.RequestorName, 
                      dbo.qryWorkTracking_WorkOrder_All.RequestorPhone, dbo.qryWorkTracking_WorkOrder_All.RequestorEmail, dbo.qryWorkTracking_WorkOrder_All.AssetUID, 
                      dbo.qryWorkTracking_WorkOrder_All.AssetID, dbo.qryWorkTracking_WorkOrder_All.AssetStatus, dbo.qryWorkTracking_WorkOrder_All.CampusUID, 
                      dbo.qryWorkTracking_WorkOrder_All.CampusName, dbo.qryWorkTracking_WorkOrder_All.BuildingUID, dbo.qryWorkTracking_WorkOrder_All.BuildingName, 
                      dbo.qryWorkTracking_WorkOrder_All.FloorUID, dbo.qryWorkTracking_WorkOrder_All.FloorName, dbo.qryWorkTracking_WorkOrder_All.RoomUID, 
                      dbo.qryWorkTracking_WorkOrder_All.RoomName, dbo.qryWorkTracking_WorkOrder_All.LocationUID, dbo.qryWorkTracking_WorkOrder_All.LocationName, 
                      dbo.qryWorkTracking_WorkOrder_All.StartDateTimeUTC, dbo.qryWorkTracking_WorkOrder_All.RequestDateTimeUTC, 
                      dbo.qryWorkTracking_WorkOrder_All.DueDateTimeUTC AS DueDate, dbo.qryWorkTracking_WorkOrder_All.CloseDateTimeUTC, 
                      dbo.qryWorkTracking_WorkOrder_All.State, dbo.qryWorkTracking_WorkOrder_All.GeneratedMethod, dbo.qryWorkTracking_WorkOrder_All.GeneratedType, 
                      dbo.qryWorkTracking_WorkOrder_All.WorkToBeDone, dbo.qryWorkTracking_WorkOrder_All.isSupDepFailure, dbo.qryWorkTracking_WorkOrder_All.IsCorrectiveAction, 
                      dbo.qryWorkTracking_WorkOrder_All.Module, dbo.qryWorkTracking_WorkOrder_All.Failure, dbo.qryWorkTracking_WorkOrder_All.CorrectiveAction, 
                      dbo.qryWorkTracking_WorkOrder_All.EstHours, dbo.qryWorkTracking_WorkOrder_All.LastEventUID, dbo.qryWorkTracking_WorkOrder_All.ScheduledWorkUID, 
                      dbo.qryWorkTracking_WorkOrder_All.PastDueEmailSentOnDateTimeUTC, dbo.qryWorkTracking_WorkOrder_All.LastUpdatedBy, 
                      dbo.qryWorkTracking_WorkOrder_All.AssetDescription, dbo.qryWorkTracking_WorkOrder_All.AssetSerialNumber, dbo.qryWorkTracking_WorkOrder_All.LocaleUID, 
                      dbo.qryWorkTracking_WorkOrder_All.FullLocaleName, dbo.qryWorkTracking_WorkOrder_All.AssetCategoryName, 
                      dbo.qryWorkTracking_WorkOrder_All.AssetSubCategoryName, dbo.qryWorkTracking_WorkOrder_All.AssetGroup, 
                      dbo.qryWorkTracking_WorkOrder_All.AssetSubGroup, dbo.tblWorkTracking_WorkOrder_Event.Action, dbo.tblWorkTracking_WorkOrder_Event.Message, 
                      dbo.tblWorkTracking_WorkOrder_Event.Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC, 
                      dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, dbo.tblInventory_BOM_Item.[Index] AS BOM_Index, 
                      dbo.tblInventory_BOM_Item.Quantity AS BOM_Item_Qty, dbo.tblInventory_BOM_Item.IsRequired AS BOM_Item_IsRequired, tblInventory_Item_1.Name AS BOM_Item, 
                      tblInventory_Item_1.PartNumber AS BOM_Item_PartNumber, tblInventory_Item_1.Description AS BOM_Item_Description, 
                      tblInventory_Item_TransactionLog_1.Username AS InvTranactionBy, tblInventory_Item_TransactionLog_1.TransDateTimeUTC AS InvTransactionDate, 
                      tblInventory_Item_TransactionLog_1.ItemName AS InvItemName, tblInventory_Item_TransactionLog_1.ItemDesc AS InvItemDesc, 
                      tblInventory_Item_TransactionLog_1.UnitName AS InvUnit, tblInventory_Item_TransactionLog_1.UnitPrice AS InvUnitPrice, 
                      tblInventory_Item_TransactionLog_1.TransQuantity * - 1 AS InvTransactionQty, CONVERT(float, tblInventory_Item_TransactionLog_1.UnitPrice) 
                      * (tblInventory_Item_TransactionLog_1.TransQuantity * - 1) AS InvTransactionCost, CASE WHEN tblInventory_Item.PartNumber IS NULL 
                      THEN tblInventory_Item_TransactionLog_1.ItemName ELSE tblInventory_Item.PartNumber END AS InvPartNumber, 
                      tblInventory_Item_TransactionLog_1.UID AS InvTransactionUID, tblInventory_Item_TransactionLog_1.TransType AS InvTransactionType,
                          (SELECT     SUM(CONVERT(float, UnitPrice) * (TransQuantity * - 1)) AS InvCost
                            FROM          dbo.tblInventory_Item_TransactionLog
                            WHERE      (ObjectRefUID = dbo.tblWorkTracking_WorkOrder.UID)) AS InvCost, tblWorkTracking_WorkOrder_RateCode_1.LogDateTimeUTC AS LaborLoggedDate, 
                      tblWorkTracking_WorkOrder_RateCode_1.Name AS LaborLoggedBy, tblWorkTracking_WorkOrder_RateCode_1.RateCode AS LaborRateCode, 
                      tblWorkTracking_WorkOrder_RateCode_1.Hours AS LaborHours, tblWorkTracking_WorkOrder_RateCode_1.Rate AS LaborRate,
                          (SELECT     SUM(Hours) AS ActHours
                            FROM          dbo.tblWorkTracking_WorkOrder_RateCode
                            WHERE      (WorkOrderUID = dbo.tblWorkTracking_WorkOrder.UID)) AS ActHours, dbo.qryWorkTracking_WorkOrder_All.ProcessRevision, 
                      CASE WHEN tblWorkTracking_ScheduledWork.PlanUID IS NULL 
                      THEN tblWorkTracking_Process_Plan.Name ELSE tblWorkTracking_Process_Plan_1.Name END AS PlanName
FROM         dbo.tblInventory_BOM_Item LEFT OUTER JOIN
                      dbo.tblInventory_Item AS tblInventory_Item_1 ON dbo.tblInventory_BOM_Item.ItemUID = tblInventory_Item_1.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_RateCode AS tblWorkTracking_WorkOrder_RateCode_1 RIGHT OUTER JOIN
                      dbo.tblInventory_BOM INNER JOIN
                      dbo.tblInventory_BOM_Association ON dbo.tblInventory_BOM.UID = dbo.tblInventory_BOM_Association.BOMUID RIGHT OUTER JOIN
                      dbo.qryWorkTracking_WorkOrder_All ON dbo.tblInventory_BOM_Association.AssociatedObjectUID = dbo.qryWorkTracking_WorkOrder_All.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID ON 
                      dbo.qryWorkTracking_WorkOrder_All.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID ON 
                      tblWorkTracking_WorkOrder_RateCode_1.WorkOrderUID = dbo.qryWorkTracking_WorkOrder_All.UID LEFT OUTER JOIN
                      dbo.tblInventory_Item_TransactionLog AS tblInventory_Item_TransactionLog_1 LEFT OUTER JOIN
                      dbo.tblInventory_Item ON tblInventory_Item_TransactionLog_1.ItemUID = dbo.tblInventory_Item.UID ON 
                      dbo.qryWorkTracking_WorkOrder_All.UID = tblInventory_Item_TransactionLog_1.ObjectRefUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 ON 
                      dbo.tblWorkTracking_ScheduledWork.PlanUID = tblWorkTracking_Process_Plan_1.UID ON 
                      dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID ON 
                      dbo.qryWorkTracking_WorkOrder_All.UID = dbo.tblWorkTracking_WorkOrder.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder_Event ON dbo.qryWorkTracking_WorkOrder_All.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID ON 
                      dbo.tblInventory_BOM_Item.BOMUID = dbo.tblInventory_BOM.UID
ORDER BY dbo.qryWorkTracking_WorkOrder_All.ID DESC

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_TimeToClose
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_TimeToClose]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_TimeToClose]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_TimeToClose]
AS
SELECT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, 
               dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
               dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, 
               dbo.tblWorkTracking_WorkOrder.Description AS WorkOrderDescription, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, 
               dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, tblContacts_Contacts_1.FullName AS AssignedTo, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.tblWorkTracking_WorkOrder.IsPlanned, 
               dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, CONVERT(VarChar, MONTH(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) 
               + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC)) AS ClosedMonthYear, CONVERT(VarChar, 
               MONTH(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) + '/' + CONVERT(VarChar, YEAR(dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC)) 
               AS RequestedMonthYear, DATEDIFF(mi, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) 
               / 1440.0 AS DaysToClose, DATEDIFF(mi, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) 
               / 60.0 AS HoursToClose, DATEDIFF(d, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC) AS DaysOverdue, 
               dbo.tblContacts_Contacts.FullName AS RequestorName, dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, 
               dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName
FROM  dbo.tblWorkTracking_WorkOrder LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.RequestorUID = dbo.tblContacts_Contacts.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories ON 
               dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_Upcoming_SW
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Upcoming_SW]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Upcoming_SW]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_Upcoming_SW]
AS
SELECT     TOP (100) PERCENT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CASE WHEN ScheduledWOID IS NULL 
                      THEN ' ' ELSE ScheduledWOID END AS ScheduledWOID, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS Description, 
                      dbo.tblWorkTracking_WorkOrder.Priority, dbo.tblWorkTracking_WorkOrder.Type, tblWorkTracking_Process_Plan_1.Name AS [Plan], 
                      dbo.tblWorkTracking_Process_Category.Name AS Category, dbo.tblWorkTracking_Process_SubCategory.Name AS SubCategory, 
                      dbo.tblWorkTracking_WorkOrder.EstHours, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) AS WorkToBeDone, 
                      dbo.tblWorkTracking_ScheduledWork.IsActive, dbo.tblWorkTracking_ScheduledWork.NextTriggerDate, dbo.tblWorkTracking_ScheduledWork.TriggerDisplayName, 
                      dbo.tblWorkTracking_ScheduledWork.FloatingDate AS IsFloatingDate, dbo.tblWorkTracking_ScheduledWork.HoldNextTrigger AS IsHoldNextTrigger, 
                      dbo.tblWorkTracking_ScheduledWork.HoldStatus, 
                      CASE WHEN tblWorkTracking_WorkOrder.AssignedToType = 'Group' THEN tblContacts_Contact_Group_1.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                       dbo.tblWorkTracking_WorkOrder.AssignedToType, dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC AS DueDate, tblAssetManagement_Assets_1.ID AS AssetID, 
                      tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
                      tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS IsAssetActive, CONVERT(varchar(8000), 
                      tblAssetManagement_Assets_1.Comments) AS AssetComments, tblAssetManagement_Assets_1.Make AS AssetMake, 
                      tblAssetManagement_Assets_1.Model AS AssetModel, tblAssetManagement_Assets_1.[Group] AS AssetGroup, 
                      tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblContacts_Companies.Name AS AssetManufacturer, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS AssetStatusDate, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS AssetStatusMajor, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS AssetStatusMinor, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblWorkTracking_Process.Name AS ProcessName, 
                      dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, DATEDIFF(dd, 
                      dbo.tblWorkTracking_WorkOrder.DueDateTimeUTC, GETDATE()) / 1.00 AS WorkPastDueDays, 
                      dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, 
                      dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState
FROM         dbo.tblAssetManagement_Assets_Categories RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON tblAssetManagement_Assets_1.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      tblAssetManagement_Assets_1.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON tblAssetManagement_Assets_1.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID ON 
                      dbo.tblAssetManagement_Assets_Categories.UID = tblAssetManagement_Assets_1.CategoryUID RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts AS tblContacts_Contacts_1 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 ON 
                      dbo.tblWorkTracking_Process_Revision.PlanUID = tblWorkTracking_Process_Plan_1.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
                      dbo.qrySystem_Locale RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.qrySystem_Locale.UID = dbo.tblWorkTracking_WorkOrder.LocaleUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID ON 
                      dbo.tblWorkTracking_Process_Category.UID = dbo.tblWorkTracking_WorkOrder.CategoryUID ON 
                      dbo.tblContacts_Contacts.UID = dbo.tblWorkTracking_WorkOrder.AssignedToUID ON 
                      dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group AS tblContacts_Contact_Group_1 ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = tblContacts_Contact_Group_1.UID ON 
                      tblContacts_Contacts_1.UID = dbo.tblWorkTracking_WorkOrder.RequestorUID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_ScheduledWork.PlanUID ON 
                      dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID ON 
                      tblAssetManagement_Assets_1.UID = dbo.tblWorkTracking_WorkOrder.AssetUID
WHERE     (tblAssetManagement_Assets_1.Deleted <> 1) OR
                      (tblAssetManagement_Assets_1.Deleted IS NULL)
UNION
SELECT     TOP (100) PERCENT ' ' AS WorkOrderID, tblWorkTracking_ScheduledWork.ScheduledWOID, CONVERT(varchar(8000), tblWorkTracking_ScheduledWork.Description) 
                      AS Description, tblWorkTracking_ScheduledWork.Priority, tblWorkTracking_ScheduledWork.Type, tblWorkTracking_Process_Plan_1.Name AS [Plan], 
                      dbo.tblWorkTracking_Process_Category.Name AS Category, dbo.tblWorkTracking_Process_SubCategory.Name AS SubCategory, 
                      tblWorkTracking_ScheduledWork.Hours AS EstHours, CONVERT(varchar(8000), tblWorkTracking_ScheduledWork.WorkToBeDone) AS WorkToBeDone, 
                      tblWorkTracking_ScheduledWork.IsActive, tblWorkTracking_ScheduledWork.NextTriggerDate, tblWorkTracking_ScheduledWork.TriggerDisplayName, 
                      tblWorkTracking_ScheduledWork.FloatingDate AS IsFloatingDate, tblWorkTracking_ScheduledWork.HoldNextTrigger AS IsHoldNextTrigger, 
                      tblWorkTracking_ScheduledWork.HoldStatus, 
                      CASE WHEN tblWorkTracking_ScheduledWork.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                       tblWorkTracking_ScheduledWork.AssignedToType, DATEADD(dd, tblWorkTracking_ScheduledWork.DueDays, tblWorkTracking_ScheduledWork.NextTriggerDate) 
                      AS DueDate, tblAssetManagement_Assets_1.ID AS AssetID, CONVERT(varchar(8000), tblAssetManagement_Assets_1.Description) AS AssetDescription, 
                      tblAssetManagement_Assets_1.AssetNumber, tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, 
                      tblAssetManagement_Assets_1.Active AS IsAssetActive, CONVERT(varchar(8000), tblAssetManagement_Assets_1.Comments) AS AssetComments, 
                      tblAssetManagement_Assets_1.Make AS AssetMake, tblAssetManagement_Assets_1.Model AS AssetModel, tblAssetManagement_Assets_1.[Group] AS AssetGroup, 
                      tblAssetManagement_Assets_1.SubGroup AS AssetSubGroup, dbo.tblAssetManagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, dbo.tblContacts_Companies.Name AS AssetManufacturer, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusRptDateTimeUTC AS AssetStatusDate, 
                      dbo.tblAssetManagement_Assets_StatusLog.StatusMajorRpt AS AssetMajorStatus, dbo.tblAssetManagement_Assets_StatusLog.StatusMinorRpt AS AssetMinorStatus, 
                      dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
                      dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblWorkTracking_Process.Name AS ProcessName, 
                      dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, '' AS WorkOrderRequestorName, '0' AS WorkPastDueDays, '' AS WorkOrderStartDate, 
                      '' AS WorkOrderRequestDate, '' AS WorkOrderState
FROM         dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_StatusLog ON 
                      tblAssetManagement_Assets_1.CurrentStatusUID = dbo.tblAssetManagement_Assets_StatusLog.UID LEFT OUTER JOIN
                      dbo.tblContacts_Companies ON tblAssetManagement_Assets_1.ManufacturerUID = dbo.tblContacts_Companies.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      tblAssetManagement_Assets_1.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_Categories ON tblAssetManagement_Assets_1.CategoryUID = dbo.tblAssetManagement_Assets_Categories.UID RIGHT OUTER JOIN
                      dbo.tblContacts_Contacts RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Plan AS tblWorkTracking_Process_Plan_1 RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.tblContacts_Contact_Group RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork AS tblWorkTracking_ScheduledWork ON 
                      dbo.tblContacts_Contact_Group.IsAccessGroup = tblWorkTracking_ScheduledWork.DueDays AND 
                      dbo.tblContacts_Contact_Group.UID = tblWorkTracking_ScheduledWork.AssignedToUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON tblWorkTracking_ScheduledWork.LocaleUID = dbo.qrySystem_Locale.UID ON 
                      dbo.tblWorkTracking_Process_Revision.UID = tblWorkTracking_ScheduledWork.ProcessRevUID ON 
                      tblWorkTracking_Process_Plan_1.UID = tblWorkTracking_ScheduledWork.PlanUID ON 
                      dbo.tblWorkTracking_Process_SubCategory.UID = tblWorkTracking_ScheduledWork.SubCategoryUID ON 
                      dbo.tblWorkTracking_Process_Category.UID = tblWorkTracking_ScheduledWork.CategoryUID ON 
                      dbo.tblContacts_Contacts.UID = tblWorkTracking_ScheduledWork.AssignedToUID ON 
                      tblAssetManagement_Assets_1.UID = tblWorkTracking_ScheduledWork.AssetUID
WHERE     (tblAssetManagement_Assets_1.Deleted = 0) AND (tblWorkTracking_ScheduledWork.IsActive = 1) AND (tblWorkTracking_ScheduledWork.HoldStatus <> N'Hold') OR
                      (tblAssetManagement_Assets_1.Deleted IS NULL) AND (tblWorkTracking_ScheduledWork.IsActive = 1) AND (tblWorkTracking_ScheduledWork.HoldStatus <> N'Hold')

GO
--/
-- qryRptSrc_Std_WorkTracking_WorkOrders_UpcomingSW_Combined
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_UpcomingSW_Combined]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_UpcomingSW_Combined]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrders_UpcomingSW_Combined]
AS
SELECT     TOP (100) PERCENT dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, 
                      dbo.tblAssetManagement_Assets.AssetNumber, dbo.tblAssetManagement_Assets.Active AS IsAssetActive, dbo.tblAssetManagement_Assets.Deleted, 
                      dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, 
                      dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, 
                      dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, dbo.tblWorkTracking_WorkOrder.State, dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, 
                      CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WO_SW_Description, dbo.tblWorkTracking_WorkOrder.EstHours, 
                      dbo.tblWorkTracking_WorkOrder.GeneratedMethod, dbo.tblWorkTracking_WorkOrder.DueDate, dbo.tblWorkTracking_ScheduledWork.NextTriggerDate, 
                      CASE WHEN tblWorkTracking_WorkOrder.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                       CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) AS WorkToBeDone, dbo.tblWorkTracking_ScheduledWork.IsActive AS IsSWActive, 
                      'N/A' AS TriggerDisplayName, dbo.tblWorkTracking_Process_Category.Name AS WO_SW_Category, 
                      dbo.tblWorkTracking_Process_SubCategory.Name AS WO_SW_SubCategory, dbo.tblWorkTracking_WorkOrder.Priority, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName, 
                      dbo.tblWorkTracking_Process.Name + N' (Rev ' + dbo.tblWorkTracking_Process_Revision.Revision + N')' AS Process_Revision, 
                      dbo.tblWorkTracking_WorkOrder.IsPlanned
FROM         dbo.tblWorkTracking_Process_Revision LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_WorkOrder ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_WorkOrder.ScheduledWorkUID = dbo.tblWorkTracking_ScheduledWork.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) AND (dbo.tblWorkTracking_WorkOrder.State = N'PastDue' OR
                      dbo.tblWorkTracking_WorkOrder.State = N'Pending') OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL) AND (dbo.tblWorkTracking_WorkOrder.State = N'PastDue' OR
                      dbo.tblWorkTracking_WorkOrder.State = N'Pending')
UNION
SELECT     dbo.tblAssetManagement_Assets.ID AS AssetID, dbo.tblAssetManagement_Assets.Description AS AssetDescription, dbo.tblAssetManagement_Assets.AssetNumber, 
                      dbo.tblAssetManagement_Assets.Active AS IsAssetActive, dbo.tblAssetManagement_Assets.Deleted, dbo.tblAssetManagement_Assets.[Group] AS AssetGroup, 
                      dbo.tblAssetManagement_Assets.SubGroup AS AssetSubGroup, dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategory, 
                      dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategory, '' AS WorkOrderID, '' AS State, dbo.tblWorkTracking_ScheduledWork.ScheduledWOID, 
                      CONVERT(varchar(8000), dbo.tblWorkTracking_ScheduledWork.Description) AS WO_SW_Description, dbo.tblWorkTracking_ScheduledWork.Hours AS EstHours, 
                      'Scheduled' AS GeneratedMethod, DATEADD(dd, dbo.tblWorkTracking_ScheduledWork.DueDays, dbo.tblWorkTracking_ScheduledWork.NextTriggerDate) AS DueDate, 
                      dbo.tblWorkTracking_ScheduledWork.NextTriggerDate, 
                      CASE WHEN tblWorkTracking_ScheduledWork.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                       CONVERT(varchar(8000), dbo.tblWorkTracking_ScheduledWork.WorkToBeDone) AS WorkToBeDone, dbo.tblWorkTracking_ScheduledWork.IsActive AS IsSWActive, 
                      dbo.tblWorkTracking_ScheduledWork.TriggerDisplayName, dbo.tblWorkTracking_Process_Category.Name AS WO_SW_Category, 
                      dbo.tblWorkTracking_Process_SubCategory.Name AS WO_SW_SubCategory, dbo.tblWorkTracking_ScheduledWork.Priority, dbo.qrySystem_Locale.CampusName, 
                      dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, dbo.qrySystem_Locale.LocationName, 
                      dbo.qrySystem_Locale.FullLocaleName, 
                      dbo.tblWorkTracking_Process.Name + N' (Rev ' + dbo.tblWorkTracking_Process_Revision.Revision + N')' AS Process_Revision, 'True' AS IsPlanned
FROM         dbo.tblWorkTracking_Process_Category RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process RIGHT OUTER JOIN
                      dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process.UID = dbo.tblWorkTracking_Process_Revision.ProcessUID RIGHT OUTER JOIN
                      dbo.tblWorkTracking_ScheduledWork ON dbo.tblWorkTracking_Process_Revision.UID = dbo.tblWorkTracking_ScheduledWork.ProcessRevUID LEFT OUTER JOIN
                      dbo.qrySystem_Locale ON dbo.tblWorkTracking_ScheduledWork.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
                      dbo.tblWorkTracking_Process_SubCategory ON dbo.tblWorkTracking_ScheduledWork.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID ON 
                      dbo.tblWorkTracking_Process_Category.UID = dbo.tblWorkTracking_ScheduledWork.CategoryUID LEFT OUTER JOIN
                      dbo.tblContacts_Contact_Group ON dbo.tblWorkTracking_ScheduledWork.AssignedToUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
                      dbo.tblContacts_Contacts ON dbo.tblWorkTracking_ScheduledWork.AssignedToUID = dbo.tblContacts_Contacts.UID RIGHT OUTER JOIN
                      dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_ScheduledWork.AssetUID = dbo.tblAssetManagement_Assets.UID LEFT OUTER JOIN
                      dbo.tblAssetManagement_Assets_SubCategories ON 
                      dbo.tblAssetManagement_Assets.SubCategoryUID = dbo.tblAssetManagement_Assets_SubCategories.UID LEFT OUTER JOIN
                      dbo.tblAssetmanagement_Assets_Categories ON dbo.tblAssetManagement_Assets.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID
WHERE     (dbo.tblAssetManagement_Assets.Deleted <> 1) OR
                      (dbo.tblAssetManagement_Assets.Deleted IS NULL)

GO

--/
-- qryRptSrc_Std_WorkTracking_WorkOrderTransactions REvised 12-19-2015 to include step information
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[qryRptSrc_Std_WorkTracking_WorkOrderTransactions]'))
DROP VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrderTransactions]
GO

CREATE VIEW [dbo].[qryRptSrc_Std_WorkTracking_WorkOrderTransactions]
AS
SELECT dbo.tblWorkTracking_WorkOrder.ID AS WorkOrderID, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.Description) AS WorkOrderDescription, 
               dbo.tblWorkTracking_WorkOrder.Priority AS WorkOrderPriority, dbo.tblWorkTracking_WorkOrder.Type AS WorkOrderType, 
               dbo.tblWorkTracking_WorkOrder.IsPlanned AS IsWorkOrderPlanned, dbo.tblWorkTracking_Process_Category.Name AS WorkOrderCategory, 
               dbo.tblWorkTracking_Process_SubCategory.Name AS WorkOrderSubCategory, dbo.tblWorkTracking_Process.Name AS Process, 
               dbo.tblWorkTracking_Process_Revision.Revision AS ProcessRevision, dbo.tblWorkTracking_Process_Plan.Name AS WorkOrderPlan, 
               dbo.tblWorkTracking_WorkOrder.StartDateTimeUTC AS WorkOrderStartDate, 
               dbo.tblWorkTracking_WorkOrder.RequestDateTimeUTC AS WorkOrderRequestDate, dbo.tblWorkTracking_WorkOrder.DueDate AS WorkOrderDueDate, 
               dbo.tblWorkTracking_WorkOrder.CloseDateTimeUTC AS WorkOrderCloseDate, dbo.tblWorkTracking_WorkOrder.State AS WorkOrderState, 
               dbo.tblWorkTracking_WorkOrder.GeneratedMethod AS WorkOrderGeneratedMethod, 
               dbo.tblWorkTracking_WorkOrder.GeneratedType AS WorkOrderGeneratedType, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder.WorkToBeDone) 
               AS WorkToBeDone, dbo.tblWorkTracking_WorkOrder.IsWorkComplete, dbo.tblWorkTracking_WorkOrder.isSupDepFailure, 
               dbo.tblWorkTracking_WorkOrder.IsCorrectiveAction, dbo.tblWorkTracking_WorkOrder.Failure, dbo.tblWorkTracking_WorkOrder.Module, 
               dbo.tblWorkTracking_WorkOrder.CorrectiveAction, dbo.tblWorkTracking_WorkOrder.EstHours AS WorkOrderEstHours, 
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.ActHours, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.LaborCost, 
               CASE WHEN tblWorkTracking_WorkOrder.AssignedToType = 'Group' THEN tblContacts_Contact_Group.Name ELSE tblContacts_Contacts.FullName END AS AssignedTo,
                dbo.tblWorkTracking_WorkOrder_Event.ActivityDateTimeUTC AS ActivityDate, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Action) 
               AS Action, CONVERT(varchar(8000), dbo.tblWorkTracking_WorkOrder_Event.Message) AS Message, CONVERT(varchar(8000), 
               dbo.tblWorkTracking_WorkOrder_Event.Comments) AS Comments, dbo.tblWorkTracking_WorkOrder_Event.UserName, 
               tblAssetManagement_Assets_1.ID AS AssetID, tblAssetManagement_Assets_1.Description AS AssetDescription, tblAssetManagement_Assets_1.AssetNumber, 
               tblAssetManagement_Assets_1.SerialNumber AS AssetSerialNumber, tblAssetManagement_Assets_1.Active AS IsAssetActive, 
               tblAssetManagement_Assets_1.Make AS AssetMake, tblAssetManagement_Assets_1.Model AS AssetModelID, 
               tblAssetManagement_Assets_1.[Group] AS AssetGroupName, tblAssetManagement_Assets_1.SubGroup AS AssetSubGroupName, 
               dbo.tblAssetmanagement_Assets_Categories.Name AS AssetCategoryName, 
               dbo.tblAssetManagement_Assets_SubCategories.Name AS AssetSubCategoryName, tblContacts_Contacts_1.FullName AS WorkOrderRequestorName, 
               tblContacts_Contacts_1.Email AS WorkOrderRequestorEmail, tblContacts_Contacts_1.Phone_Business AS WorkOrderRequestorPhone, 
               tblContacts_Contacts_1.Phone_Mobile AS WorkOrderRequestorMobilePhone, dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.InvCost, 
               dbo.qrySystem_Locale.CampusName, dbo.qrySystem_Locale.BuildingName, dbo.qrySystem_Locale.FloorName, dbo.qrySystem_Locale.RoomName, 
               dbo.qrySystem_Locale.LocationName, dbo.qrySystem_Locale.FullLocaleName, dbo.tblWorkTracking_Operation_Step.Name AS StepName, 
               dbo.tblAssetManagement_Assets.Description AS StepAssetDescription, dbo.tblAssetManagement_Assets.ID AS StepAssetID, 
               dbo.tblWorkTracking_Operation_Step.[Index] AS StepIndex, 
               CASE WHEN tblWorkTracking_WorkOrder.AssignedToType = 'Group' THEN tblContacts_Contact_Group_1.Name ELSE tblContacts_Contacts_2.FullName END AS StepAssignedTo,
                dbo.tblWorkTracking_WorkOrder_Step.AssignedToType AS StepAssignedToType, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC AS StepCloseDate, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 1.00 ELSE DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 1.00 END AS StepElapsedTimeMin, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 60.00 ELSE DATEDIFF(mi, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 60.00 END AS StepElapsedTimeHours, 
               CASE WHEN dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC IS NOT NULL THEN DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, dbo.tblWorkTracking_WorkOrder_Step.CloseDateTimeUTC) / 24.00 ELSE DATEDIFF(hh, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC, GETUTCDATE()) / 24.00 END AS StepElapsedTimeDays, 
               dbo.tblWorkTracking_WorkOrder_Step.StartDateTimeUTC AS StepStartDate, dbo.tblWorkTracking_WorkOrder_Step.State AS StepState, 
               dbo.tblWorkTracking_Operation_Step.WorkToBeDone AS StepWorkToBeDone
FROM  dbo.tblContacts_Contacts RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder INNER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_InvCost_SubQry.UID ON 
               dbo.tblContacts_Contacts.UID = dbo.tblWorkTracking_WorkOrder.AssignedToUID LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group ON dbo.tblWorkTracking_WorkOrder.AssignedToUID = dbo.tblContacts_Contact_Group.UID LEFT OUTER JOIN
               dbo.qrySystem_Locale ON dbo.tblWorkTracking_WorkOrder.LocaleUID = dbo.qrySystem_Locale.UID LEFT OUTER JOIN
               dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.qryRptSrc_Std_WorkTracking_WorkOrders_LaborCost_SubQry.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Plan LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Revision ON dbo.tblWorkTracking_Process_Plan.UID = dbo.tblWorkTracking_Process_Revision.PlanUID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process ON dbo.tblWorkTracking_Process_Revision.ProcessUID = dbo.tblWorkTracking_Process.UID ON 
               dbo.tblWorkTracking_WorkOrder.ProcessRevisionUID = dbo.tblWorkTracking_Process_Revision.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_SubCategory ON 
               dbo.tblWorkTracking_WorkOrder.SubCategoryUID = dbo.tblWorkTracking_Process_SubCategory.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_Process_Category ON dbo.tblWorkTracking_WorkOrder.CategoryUID = dbo.tblWorkTracking_Process_Category.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_1 ON dbo.tblWorkTracking_WorkOrder.RequestorUID = tblContacts_Contacts_1.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets_SubCategories RIGHT OUTER JOIN
               dbo.tblAssetManagement_Assets AS tblAssetManagement_Assets_1 ON 
               dbo.tblAssetManagement_Assets_SubCategories.UID = tblAssetManagement_Assets_1.SubCategoryUID LEFT OUTER JOIN
               dbo.tblAssetmanagement_Assets_Categories ON tblAssetManagement_Assets_1.CategoryUID = dbo.tblAssetmanagement_Assets_Categories.UID ON 
               dbo.tblWorkTracking_WorkOrder.AssetUID = tblAssetManagement_Assets_1.UID LEFT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Event LEFT OUTER JOIN
               dbo.tblWorkTracking_Operation_Step RIGHT OUTER JOIN
               dbo.tblWorkTracking_WorkOrder_Step LEFT OUTER JOIN
               dbo.tblContacts_Contact_Group AS tblContacts_Contact_Group_1 ON 
               dbo.tblWorkTracking_WorkOrder_Step.AssignedToUID = tblContacts_Contact_Group_1.UID LEFT OUTER JOIN
               dbo.tblContacts_Contacts AS tblContacts_Contacts_2 ON dbo.tblWorkTracking_WorkOrder_Step.AssignedToUID = tblContacts_Contacts_2.UID LEFT OUTER JOIN
               dbo.tblAssetManagement_Assets ON dbo.tblWorkTracking_WorkOrder_Step.AssetUID = dbo.tblAssetManagement_Assets.UID ON 
               dbo.tblWorkTracking_Operation_Step.UID = dbo.tblWorkTracking_WorkOrder_Step.OperationStepUID ON 
               dbo.tblWorkTracking_WorkOrder_Event.WorkOrderStepUID = dbo.tblWorkTracking_WorkOrder_Step.UID ON 
               dbo.tblWorkTracking_WorkOrder.UID = dbo.tblWorkTracking_WorkOrder_Event.WorkOrderUID
WHERE (tblAssetManagement_Assets_1.Deleted <> 1) OR
               (tblAssetManagement_Assets_1.Deleted IS NOT NULL)

GO
--/
--/



















